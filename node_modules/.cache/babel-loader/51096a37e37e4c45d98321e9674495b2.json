{"ast":null,"code":"import _taggedTemplateLiteral from\"/usr/projects/parallel-storm/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  \\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  grid-area: D;\\n  \\n  @media (max-width: \",\"px ) {\\n    height: 480px;\\n  }\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  grid-area: C;\\n  \\n  @media (max-width: \",\"px ) {\\n    height: 480px;\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  grid-area: B;\\n  \\n  @media (max-width: \",\"px ) {\\n    height: 240px;\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  grid-area: A;\\n  \\n  align-self: center;\\n  \\n  @media (max-width: \",\"px ) {\\n    height: 240px;\\n  }\\n  \\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  \\n  display: grid;\\n  align-items: start;\\n  \\n  @media (max-width: \",\"px ) {\\n    grid-template-columns: 1fr;\\n    grid-template-rows: 240px 240px 480px 480px;\\n    grid-template-areas: \\n      \\\"A\\\"\\n      \\\"B\\\"\\n      \\\"C\\\"\\n      \\\"D\\\"\\n  }\\n \\n\\n  @media (min-width:  \",\"px) {\\n    \\n    grid-template-columns: 1fr 1fr;\\n    grid-template-rows: 240px 1fr;\\n    grid-template-areas: \\n      \\\"A B\\\"\\n      \\\"C D\\\";\\n  }\\n\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useRef}from'react';import styled from'styled-components';import axios from'axios';import queryString from'query-string';import{NavLink,useHistory}from'react-router-dom';import{connect}from\"react-redux\";import _readPlanTeam from\"../redux/thunks/readPlanTeam\";//import {replaceRerender} from \"../redux/store\";\nimport{replaceWorking}from\"../redux/store\";import{replaceLoading as _replaceLoading}from\"../redux/store\";import{replaceReady as _replaceReady}from\"../redux/store\";import{replaceData as _replaceData}from\"../redux/store\";import _addRemoveNotification from\"../redux/thunks/addRemoveNotification\";import{Div,Input,Button}from'../styles/DefaultStyles';//import Player from '../components/Player'\nimport IconLoading from'../svgs/basic/IconLoading';import CreatingPlan from'../components/TeamGenerator/CreatingPlan';import SearchingPlan from'../components/TeamGenerator/SearchingPlan';import AddingPlayer from'../components/TeamGenerator/AddingPlayer';import Entry from'../components/TeamGenerator/Entry';import Option from'../components/TeamGenerator/Option';import Result from'../components/TeamGenerator/Result';import useAxiosGet from'../tools/hooks/useAxiosGet';import useInput from'../tools/hooks/useInput';var DivTeamGenerator=styled(Div)(_templateObject(),function(props){return props.theme.media.mid_big-1;},function(props){return props.theme.media.mid_big;});var DivA=styled(Div)(_templateObject2(),function(props){return props.theme.media.mid_big-1;});var DivB=styled(Div)(_templateObject3(),function(props){return props.theme.media.mid_big-1;});var DivC=styled(Div)(_templateObject4(),function(props){return props.theme.media.mid_big-1;});var DivD=styled(Div)(_templateObject5(),function(props){return props.theme.media.mid_big-1;});var DivLoading=styled(Div)(_templateObject6());var Loading=function Loading(){return/*#__PURE__*/React.createElement(DivLoading,null,/*#__PURE__*/React.createElement(IconLoading,{width:\"30px\",height:\"30px\"}));};// https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\nvar TeamGenerator=function TeamGenerator(_ref){var match=_ref.match,location=_ref.location,authority=_ref.authority,loadingPlanTeam=_ref.loadingPlanTeam,readyPlanTeam=_ref.readyPlanTeam,idPlanTeam=_ref.idPlanTeam,passwordPlanTeam=_ref.passwordPlanTeam,readPlanTeam=_ref.readPlanTeam,replaceData=_ref.replaceData,addRemoveNotification=_ref.addRemoveNotification;//const [rerender, SetRerender] = useState(\"\");\nvar history=useHistory();var isFirstRun=useRef(true);var idPlanTeamTrying=match.params.idPlanTeam;useEffect(function(){readPlanTeam(idPlanTeamTrying);},[]);// 처음 마운트 (loading X -> O) 는 무시, 뒤의 O -> X 일때 플랜 아이디 확인\nuseEffect(function(){if(isFirstRun.current){isFirstRun.current=false;return;}if(!loadingPlanTeam&&!readyPlanTeam){// (readyPlanTeam === false)\nreplaceData(\"authority\",\"unknown\");addRemoveNotification(\"error\",\"plan id is wrong\");history.push(\"/team-generator\");}},[loadingPlanTeam]);// 처음 마운트는 무시, readyPlanTeam X -> O 일때 플랜 비번확인\nuseEffect(function(){var query=queryString.parse(location.search);var passwordPlanTeamTrying=query.pw;//if (isFirstRun.current) {isFirstRun.current = false; return; } // 처음 렌더링 넘어가기 (아직 스토어 업데이트 반영 잘 못해서..)\n// 참고1 https://stackoverflow.com/questions/53351517/react-hooks-skip-first-run-in-useeffect\n// 참고2 https://reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables\nif(!loadingPlanTeam&&readyPlanTeam&&authority===\"unknown\"){if(!passwordPlanTeamTrying){replaceData(\"authority\",\"viewer\");addRemoveNotification(\"success\",\"welcome viewer!\");}else if(passwordPlanTeamTrying===passwordPlanTeam){replaceData(\"authority\",\"administrator\");addRemoveNotification(\"success\",\"welcome administrator!\");}// 문제 정상적인 비번인데, 정보를 받는 과정에서 잠시동안 두 비번이 불일치 하는것으로 나와서 => plan 생성시에 조금 지연후에 이곳 페이지로 이동하는 등 시도 중\n// 정안되면 비번 틀린거는 알람이 아니라 일반 표시로 하기..\n// if password is wrong\nelse{replaceData(\"authority\",\"unknown\");addRemoveNotification(\"error\",\"password is wrong\");}}},[loadingPlanTeam,readyPlanTeam]);useEffect(function(){console.log(\"rerendered\");});if(loadingPlanTeam||!readyPlanTeam){return/*#__PURE__*/React.createElement(DivTeamGenerator,null,/*#__PURE__*/React.createElement(DivA,{style:{alignSelf:\"center\"}},/*#__PURE__*/React.createElement(Loading,null)),/*#__PURE__*/React.createElement(DivB,{style:{alignSelf:\"center\"}},/*#__PURE__*/React.createElement(Loading,null)),/*#__PURE__*/React.createElement(DivC,{style:{alignSelf:\"center\"}},/*#__PURE__*/React.createElement(Loading,null)),/*#__PURE__*/React.createElement(DivD,{style:{alignSelf:\"center\"}},/*#__PURE__*/React.createElement(Loading,null)));}else{// (!loadingPlanTeam && readyPlanTeam) \nreturn/*#__PURE__*/React.createElement(DivTeamGenerator,null,/*#__PURE__*/React.createElement(DivA,null,/*#__PURE__*/React.createElement(AddingPlayer,null)),/*#__PURE__*/React.createElement(DivB,null,/*#__PURE__*/React.createElement(Option,null)),/*#__PURE__*/React.createElement(DivC,null,/*#__PURE__*/React.createElement(Entry,null)),/*#__PURE__*/React.createElement(DivD,null,/*#__PURE__*/React.createElement(Result,null)));}};//TeamGenerator\nfunction mapStateToProps(state){return{authority:state.authority,idPlanTeam:state.idPlanTeam,passwordPlanTeam:state.planTeam.password,loadingPlanTeam:state.loading.planTeam,readyPlanTeam:state.ready.planTeam//, rerenderPlanTeamA: state.rerender.planTeam.A\n//,loading: state.loading\n//,authority: state.authority\n};}function mapDispatchToProps(dispatch){return{readPlanTeam:function readPlanTeam(idPlanTeam){return dispatch(_readPlanTeam(idPlanTeam));}//,replaceRerender: (which) => dispatch(replaceRerender(which))\n,replaceData:function replaceData(which,newData){return dispatch(_replaceData(which,newData));},replaceLoading:function replaceLoading(which,true_false){return dispatch(_replaceLoading(which,true_false));},replaceReady:function replaceReady(which,true_false){return dispatch(_replaceReady(which,true_false));},addRemoveNotification:function addRemoveNotification(situation,message,time){return dispatch(_addRemoveNotification(situation,message,time));}};}// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps,mapDispatchToProps)(TeamGenerator);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/routes/TeamGenerator.js"],"names":["React","useEffect","useRef","styled","axios","queryString","NavLink","useHistory","connect","readPlanTeam","replaceWorking","replaceLoading","replaceReady","replaceData","addRemoveNotification","Div","Input","Button","IconLoading","CreatingPlan","SearchingPlan","AddingPlayer","Entry","Option","Result","useAxiosGet","useInput","DivTeamGenerator","props","theme","media","mid_big","DivA","DivB","DivC","DivD","DivLoading","Loading","TeamGenerator","match","location","authority","loadingPlanTeam","readyPlanTeam","idPlanTeam","passwordPlanTeam","history","isFirstRun","idPlanTeamTrying","params","current","push","query","parse","search","passwordPlanTeamTrying","pw","console","log","alignSelf","mapStateToProps","state","planTeam","password","loading","ready","mapDispatchToProps","dispatch","which","newData","true_false","situation","message","time"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\n\n//import {replaceRerender} from \"../redux/store\";\nimport {replaceWorking} from \"../redux/store\";\nimport {replaceLoading} from \"../redux/store\";\nimport {replaceReady} from \"../redux/store\";\nimport {replaceData} from \"../redux/store\";\n\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\n\nimport {Div, Input, Button} from '../styles/DefaultStyles';\n//import Player from '../components/Player'\nimport IconLoading from '../svgs/basic/IconLoading'\n\n\n\nimport CreatingPlan from '../components/TeamGenerator/CreatingPlan';\nimport SearchingPlan from '../components/TeamGenerator/SearchingPlan';\n\nimport AddingPlayer from '../components/TeamGenerator/AddingPlayer';\nimport Entry from '../components/TeamGenerator/Entry';\nimport Option from '../components/TeamGenerator/Option';\nimport Result from '../components/TeamGenerator/Result';\n\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\n\n\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  display: grid;\n  align-items: start;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 480px 480px;\n    grid-template-areas: \n      \"A\"\n      \"B\"\n      \"C\"\n      \"D\"\n  }\n \n\n  @media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n    \n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 240px 1fr;\n    grid-template-areas: \n      \"A B\"\n      \"C D\";\n  }\n\n`;\n\n\nconst DivA = styled(Div)`\n  grid-area: A;\n  \n  align-self: center;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    height: 240px;\n  }\n  \n`\nconst DivB = styled(Div)`\n  grid-area: B;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    height: 240px;\n  }\n`\nconst DivC = styled(Div)`\n  grid-area: C;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    height: 480px;\n  }\n`\nconst DivD = styled(Div)`\n  grid-area: D;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    height: 480px;\n  }\n`\n\nconst DivLoading = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Loading = () => {\n  return (\n    <DivLoading>   \n      <IconLoading width={\"30px\"} height={\"30px\"} />\n    </DivLoading>\n  )\n}\n\n\n// https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\nconst TeamGenerator = ({\n  match, location\n  , authority\n  , loadingPlanTeam\n  , readyPlanTeam\n  , idPlanTeam, passwordPlanTeam\n  \n  //, rerenderPlanTeamA\n  \n  , readPlanTeam\n  , replaceData\n  , addRemoveNotification\n}) => {\n  \n  //const [rerender, SetRerender] = useState(\"\");\n  const history = useHistory();\n  const isFirstRun = useRef(true);\n  \n  const idPlanTeamTrying = match.params.idPlanTeam;\n  \n  useEffect(()=>{\n    readPlanTeam(idPlanTeamTrying);\n  }, []);\n  \n  \n  // 처음 마운트 (loading X -> O) 는 무시, 뒤의 O -> X 일때 플랜 아이디 확인\n  useEffect(()=>{\n    if (isFirstRun.current) {isFirstRun.current = false; return; }\n    \n    if (!loadingPlanTeam && !readyPlanTeam)  {  // (readyPlanTeam === false)\n      replaceData(\"authority\", \"unknown\");\n      addRemoveNotification(\"error\", \"plan id is wrong\");\n      \n      history.push(`/team-generator`);\n    }\n  }, [loadingPlanTeam]);\n  \n  \n  // 처음 마운트는 무시, readyPlanTeam X -> O 일때 플랜 비번확인\n  useEffect(()=>{\n    \n    const query = queryString.parse(location.search);\n    const passwordPlanTeamTrying = query.pw;\n    \n    //if (isFirstRun.current) {isFirstRun.current = false; return; } // 처음 렌더링 넘어가기 (아직 스토어 업데이트 반영 잘 못해서..)\n    // 참고1 https://stackoverflow.com/questions/53351517/react-hooks-skip-first-run-in-useeffect\n    // 참고2 https://reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables\n    \n    \n    if (!loadingPlanTeam && readyPlanTeam && (authority === \"unknown\") ) {\n      \n      if (!passwordPlanTeamTrying) {\n        replaceData(\"authority\", \"viewer\");\n        addRemoveNotification(\"success\", \"welcome viewer!\");\n      }\n      \n      else if ( passwordPlanTeamTrying === passwordPlanTeam ) {\n        replaceData(\"authority\", \"administrator\");\n        addRemoveNotification(\"success\", \"welcome administrator!\");\n      }\n      \n      // 문제 정상적인 비번인데, 정보를 받는 과정에서 잠시동안 두 비번이 불일치 하는것으로 나와서 => plan 생성시에 조금 지연후에 이곳 페이지로 이동하는 등 시도 중\n      // 정안되면 비번 틀린거는 알람이 아니라 일반 표시로 하기..\n      // if password is wrong\n      else {\n        replaceData(\"authority\", \"unknown\");\n        addRemoveNotification(\"error\", \"password is wrong\");\n      }\n      \n    }\n    \n  }, [loadingPlanTeam, readyPlanTeam] )\n    \n    \n    \n  useEffect(()=>{\n    console.log(\"rerendered\")\n  } )\n  \n  \n  if (loadingPlanTeam || !readyPlanTeam) {\n    return (\n      <DivTeamGenerator>\n        \n        <DivA style={{alignSelf:  \"center\"}} >\n          < Loading />\n        </DivA>\n        \n        <DivB style={{alignSelf:  \"center\"}} >\n          < Loading />\n        </DivB>\n      \n      \n        <DivC style={{alignSelf:  \"center\"}} >\n          < Loading />\n        </DivC>\n      \n      \n        <DivD style={{alignSelf:  \"center\"}} >\n          < Loading />\n        </DivD>\n        \n      </DivTeamGenerator>\n    )\n  } \n  \n  else  { // (!loadingPlanTeam && readyPlanTeam) \n   return (\n   <DivTeamGenerator>\n      \n      <DivA>\n        <AddingPlayer />\n      </DivA>\n      \n      <DivB>\n        <Option /> \n      </DivB>\n    \n    \n      <DivC>\n        <Entry />\n      </DivC>\n    \n    \n      <DivD>\n        <Result /> \n      </DivD>\n    \n    </DivTeamGenerator>\n    )\n  }\n\n \n    \n} //TeamGenerator\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    authority: state.authority\n    \n    ,idPlanTeam: state.idPlanTeam\n    ,passwordPlanTeam: state.planTeam.password\n    \n    , loadingPlanTeam: state.loading.planTeam\n    , readyPlanTeam: state.ready.planTeam\n    \n    //, rerenderPlanTeamA: state.rerender.planTeam.A\n    \n    //,loading: state.loading\n    //,authority: state.authority\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n    //,replaceRerender: (which) => dispatch(replaceRerender(which))\n    ,replaceData: (which, newData) => dispatch(replaceData(which, newData))\n    ,replaceLoading: (which, true_false) => dispatch(replaceLoading(which, true_false)) \n    ,replaceReady: (which, true_false) => dispatch(replaceReady(which, true_false)) \n    ,addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGenerator);\n"]},"metadata":{},"sourceType":"module"}