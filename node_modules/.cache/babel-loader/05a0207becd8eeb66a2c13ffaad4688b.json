{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport axios from 'axios';\nimport dotenv from 'dotenv';\nimport reducerRoot from './reducers/root';\nconst REPLACE_READY = \"REPLACE_READY\";\nconst REPLACE_LOADING = \"REPLACE_LOADING\";\nconst REPLACE_DATA = \"REPLACE_DATA\";\nconst REPLACE_NOTIFICATION = \"REPLACE_NOTIFICATION\"; // fundamental action creator\n\nconst replaceReady = (which, true_false) => {\n  return {\n    type: REPLACE_READY,\n    which: which,\n    true_false: true_false\n  };\n};\n\nconst replaceLoading = (which, true_false) => {\n  return {\n    type: REPLACE_LOADING,\n    which: which,\n    true_false: true_false\n  };\n};\n\nconst replaceData = (which, newData) => {\n  return {\n    type: REPLACE_DATA,\n    which: which,\n    data: newData\n  };\n};\n\nconst addNotification = (situation, message, idNotification) => {\n  return {\n    type: ADD_NOTIFICATION,\n    situation: situation,\n    message: message,\n    idNotification: idNotification\n  };\n};\n\nconst removeNotification = id => {\n  return {\n    type: REMOVE_NOTIFICATION,\n    idNotification: idNotification\n  };\n}; // functions that dispatch actions which are from return fundamental action creators\n\n\nexport const readPlanTeam = idPlanTeam => {\n  return async (dispatch, getState, axios) => {\n    const onSuccess = response => {\n      dispatch(replaceReady(\"planTeam\", true));\n      dispatch(replaceLoading(\"planTeam\", false));\n      dispatch(replaceData(\"planTeam\", newPlanTeam));\n      return;\n    };\n\n    const onError = error => {\n      dispatch(replaceReady(\"planTeam\", true));\n      dispatch(replaceLoading(\"planTeam\", false));\n      const idNotification = Date.now();\n      dispatch(addNotification(\"error\", \"Reading planTeam has failed\", idNotification));\n      setTimeout(dispatch(removeNotification(idNotification)), 5000);\n      return;\n    };\n\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_URL_AHR}/PlanTeam/${idPlanTeam}`);\n      const newPlanTeam = response.data;\n      onSuccess(newPlanTeam);\n      return;\n    } // try\n    catch (error) {\n      onError(error);\n      return;\n    } //catch\n\n  };\n}; // readPlanTeam\n\nconst store = createStore(reducerRoot, applyMiddleware(thunk.withExtraArgument(axios)));\nexport default store; //https://github.com/nomadcoders/vanilla-redux/blob/ccaa1acd081f27239f2cc8ad3c571bd0a9923f73/src/store.js","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/store.js"],"names":["createStore","applyMiddleware","thunk","axios","dotenv","reducerRoot","REPLACE_READY","REPLACE_LOADING","REPLACE_DATA","REPLACE_NOTIFICATION","replaceReady","which","true_false","type","replaceLoading","replaceData","newData","data","addNotification","situation","message","idNotification","ADD_NOTIFICATION","removeNotification","id","REMOVE_NOTIFICATION","readPlanTeam","idPlanTeam","dispatch","getState","onSuccess","response","newPlanTeam","onError","error","Date","now","setTimeout","get","process","env","REACT_APP_URL_AHR","store","withExtraArgument"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\nimport reducerRoot from './reducers/root';\r\n\r\n\r\nconst REPLACE_READY = \"REPLACE_READY\";\r\nconst REPLACE_LOADING = \"REPLACE_LOADING\";\r\nconst REPLACE_DATA = \"REPLACE_DATA\";\r\n\r\nconst REPLACE_NOTIFICATION = \"REPLACE_NOTIFICATION\";\r\n\r\n\r\n// fundamental action creator\r\nconst replaceReady = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_READY,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nconst replaceLoading = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_LOADING,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nconst replaceData = (which, newData) => {\r\n  return {\r\n    type: REPLACE_DATA,\r\n    which: which,\r\n    data: newData\r\n  }\r\n  \r\n}\r\n\r\nconst addNotification = (situation, message, idNotification) => {\r\n  return {\r\n    type: ADD_NOTIFICATION,\r\n    situation: situation,\r\n    message: message,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\nconst removeNotification = (id) => {\r\n  return {\r\n    type: REMOVE_NOTIFICATION,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// functions that dispatch actions which are from return fundamental action creators\r\nexport const readPlanTeam = (idPlanTeam) => {   \r\n  \r\n  return async (dispatch, getState, axios) => { \r\n\r\n    const onSuccess = (response) => { \r\n      \r\n      dispatch( replaceReady(\"planTeam\", true) );\r\n      dispatch( replaceLoading(\"planTeam\", false) ); \r\n      \r\n      dispatch( replaceData(\"planTeam\", newPlanTeam) ); \r\n      \r\n      return;\r\n    } \r\n\r\n\r\n    const onError = (error) =>{ \r\n      \r\n      dispatch( replaceReady(\"planTeam\", true) );\r\n      dispatch( replaceLoading(\"planTeam\", false) ); \r\n      \r\n      const idNotification = Date.now();\r\n      dispatch( addNotification(\"error\", \"Reading planTeam has failed\", idNotification) );\r\n      setTimeout(\r\n        dispatch( removeNotification(idNotification) )\r\n        , 5000);\r\n      \r\n      return; \r\n    } \r\n\r\n\r\n    try { \r\n      \r\n      const response = await axios.get( `${process.env.REACT_APP_URL_AHR}/PlanTeam/${idPlanTeam}`);\r\n        \r\n      const newPlanTeam = response.data;\r\n      \r\n      onSuccess(newPlanTeam);\r\n  \r\n      return; \r\n      \r\n    } // try\r\n    \r\n    catch (error) { \r\n      \r\n      onError(error); \r\n      \r\n      return; \r\n      \r\n    } //catch\r\n\r\n  } \r\n} // readPlanTeam\r\n    \r\n\r\n\r\n\r\nconst store = createStore(\r\n  reducerRoot,\r\n  applyMiddleware(thunk.withExtraArgument(axios))\r\n)\r\n\r\n\r\nexport default store;\r\n\r\n//https://github.com/nomadcoders/vanilla-redux/blob/ccaa1acd081f27239f2cc8ad3c571bd0a9923f73/src/store.js"]},"metadata":{},"sourceType":"module"}