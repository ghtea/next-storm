{"ast":null,"code":"import axios from 'axios';\nimport dotenv from 'dotenv';\nimport { REPLACE_READY, REPLACE_LOADING, REPLACE_DATA, ADD_NOTIFICATION, REMOVE_NOTIFICATION } from '../store';\nimport { replaceReady, replaceLoading, replaceData, addNotification, removeNotification } from '../store';\nimport addRemoveNotification from \"./addRemoveNotification\"; // functions that dispatch actions which are from return fundamental action creators\n\nconst readPlanTeam = idPlanTeam => {\n  return async (dispatch, getState, axios) => {\n    const onSuccess = newPlanTeam => {\n      dispatch(replaceData(\"planTeam\", newPlanTeam)); // 이게 먼저 돼고, 아래 loading, ready 수정해 주어야 한다!!!\n\n      dispatch(replaceReady(\"planTeam\", true));\n      dispatch(replaceLoading(\"planTeam\", false));\n      return new Promise((resolve, reject) => {\n        resolve(newPlanTeam);\n      });\n    };\n\n    const onError = error => {\n      dispatch(replaceReady(\"planTeam\", false));\n      dispatch(replaceLoading(\"planTeam\", false));\n      addRemoveNotification(\"error\", \"Reading planTeam has failed\", 4000);\n    };\n\n    try {\n      dispatch(replaceReady(\"planTeam\", false));\n      dispatch(replaceLoading(\"planTeam\", true));\n      const response = await axios.get(`${process.env.REACT_APP_URL_AHR}/plan-team/${idPlanTeam}`);\n      const newPlanTeam = response.data; //console.log(newPlanTeam);\n\n      onSuccess(newPlanTeam);\n    } // try\n    catch (error) {\n      onError(error);\n    } //catch\n\n  };\n}; // readPlanTeam\n\n\nexport default readPlanTeam;","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/redux/thunks/readPlanTeam.js"],"names":["axios","dotenv","REPLACE_READY","REPLACE_LOADING","REPLACE_DATA","ADD_NOTIFICATION","REMOVE_NOTIFICATION","replaceReady","replaceLoading","replaceData","addNotification","removeNotification","addRemoveNotification","readPlanTeam","idPlanTeam","dispatch","getState","onSuccess","newPlanTeam","Promise","resolve","reject","onError","error","response","get","process","env","REACT_APP_URL_AHR","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAAQC,aAAR,EAAuBC,eAAvB,EAAwCC,YAAxC,EAAsDC,gBAAtD,EAAwEC,mBAAxE,QAAkG,UAAlG;AACA,SAAQC,YAAR,EAAsBC,cAAtB,EAAsCC,WAAtC,EAAmDC,eAAnD,EAAoEC,kBAApE,QAA6F,UAA7F;AACA,OAAOC,qBAAP,MAAkC,yBAAlC,C,CAIA;;AACA,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AAEnC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,EAA2BhB,KAA3B,KAAqC;AAE1C,UAAMiB,SAAS,GAAIC,WAAD,IAAiB;AAEjCH,MAAAA,QAAQ,CAAEN,WAAW,CAAC,UAAD,EAAaS,WAAb,CAAb,CAAR,CAFiC,CAEkB;;AAEnDH,MAAAA,QAAQ,CAAER,YAAY,CAAC,UAAD,EAAa,IAAb,CAAd,CAAR;AACAQ,MAAAA,QAAQ,CAAEP,cAAc,CAAC,UAAD,EAAa,KAAb,CAAhB,CAAR;AAEA,aAAO,IAAIW,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvCD,QAAAA,OAAO,CAACF,WAAD,CAAP;AACD,OAFM,CAAP;AAGD,KAVD;;AAaA,UAAMI,OAAO,GAAIC,KAAD,IAAU;AAExBR,MAAAA,QAAQ,CAAER,YAAY,CAAC,UAAD,EAAa,KAAb,CAAd,CAAR;AACAQ,MAAAA,QAAQ,CAAEP,cAAc,CAAC,UAAD,EAAa,KAAb,CAAhB,CAAR;AAEAI,MAAAA,qBAAqB,CAAC,OAAD,EAAU,6BAAV,EAAyC,IAAzC,CAArB;AACD,KAND;;AASA,QAAI;AAEFG,MAAAA,QAAQ,CAAER,YAAY,CAAC,UAAD,EAAa,KAAb,CAAd,CAAR;AACAQ,MAAAA,QAAQ,CAAEP,cAAc,CAAC,UAAD,EAAa,IAAb,CAAhB,CAAR;AAEA,YAAMgB,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,cAAad,UAAW,EAApE,CAAvB;AAEA,YAAMI,WAAW,GAAGM,QAAQ,CAACK,IAA7B,CAPE,CASF;;AAEAZ,MAAAA,SAAS,CAACC,WAAD,CAAT;AAED,KAbD,CAaE;AAEF,WAAOK,KAAP,EAAc;AACZD,MAAAA,OAAO,CAACC,KAAD,CAAP;AACD,KAzCyC,CAyCxC;;AAEH,GA3CD;AA4CD,CA9CD,C,CA8CE;;;AAEF,eAAgBV,YAAhB","sourcesContent":["import axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\nimport {REPLACE_READY, REPLACE_LOADING, REPLACE_DATA, ADD_NOTIFICATION, REMOVE_NOTIFICATION} from '../store';\r\nimport {replaceReady, replaceLoading, replaceData, addNotification, removeNotification} from '../store'\r\nimport addRemoveNotification from \"./addRemoveNotification\";\r\n\r\n\r\n\r\n// functions that dispatch actions which are from return fundamental action creators\r\nconst readPlanTeam = (idPlanTeam) => {   \r\n  \r\n  return async (dispatch, getState, axios) => { \r\n\r\n    const onSuccess = (newPlanTeam) => { \r\n      \r\n      dispatch( replaceData(\"planTeam\", newPlanTeam) );  // 이게 먼저 돼고, 아래 loading, ready 수정해 주어야 한다!!!\r\n      \r\n      dispatch( replaceReady(\"planTeam\", true) );\r\n      dispatch( replaceLoading(\"planTeam\", false) ); \r\n      \r\n      return new Promise ((resolve, reject) => {\r\n        resolve(newPlanTeam);\r\n      })\r\n    } \r\n\r\n\r\n    const onError = (error) =>{ \r\n      \r\n      dispatch( replaceReady(\"planTeam\", false) );\r\n      dispatch( replaceLoading(\"planTeam\", false) ); \r\n      \r\n      addRemoveNotification(\"error\", \"Reading planTeam has failed\", 4000);\r\n    } \r\n\r\n\r\n    try { \r\n      \r\n      dispatch( replaceReady(\"planTeam\", false) );\r\n      dispatch( replaceLoading(\"planTeam\", true) ); \r\n      \r\n      const response = await axios.get( `${process.env.REACT_APP_URL_AHR}/plan-team/${idPlanTeam}`);\r\n      \r\n      const newPlanTeam = response.data;\r\n      \r\n      //console.log(newPlanTeam);\r\n      \r\n      onSuccess(newPlanTeam);\r\n  \r\n    } // try\r\n    \r\n    catch (error) { \r\n      onError(error); \r\n    } //catch\r\n\r\n  } \r\n} // readPlanTeam\r\n    \r\nexport default  readPlanTeam;"]},"metadata":{},"sourceType":"module"}