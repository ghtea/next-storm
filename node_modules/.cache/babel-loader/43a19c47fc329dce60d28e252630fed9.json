{"ast":null,"code":"import _regeneratorRuntime from\"/usr/projects/parallel-storm/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/usr/projects/parallel-storm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createStore,applyMiddleware}from'redux';import thunk from'redux-thunk';import axios from'axios';import dotenv from'dotenv';import reducerRoot from'./reducers/root';var REPLACE_READY=\"REPLACE_READY\";var REPLACE_LOADING=\"REPLACE_LOADING\";var REPLACE_DATA=\"REPLACE_DATA\";var ADD_NOTIFICATION=\"ADD_NOTIFICATION\";var REMOVE_NOTIFICATION=\"REMOVE_NOTIFICATION\";// fundamental action creator\nvar replaceReady=function replaceReady(which,true_false){return{type:REPLACE_READY,which:which,true_false:true_false};};var replaceLoading=function replaceLoading(which,true_false){return{type:REPLACE_LOADING,which:which,true_false:true_false};};var replaceData=function replaceData(which,newData){return{type:REPLACE_DATA,which:which,data:newData};};var addNotification=function addNotification(situation,message,idNotification){return{type:ADD_NOTIFICATION,situation:situation,message:message,idNotification:idNotification};};var removeNotification=function removeNotification(idNotification){return{type:REMOVE_NOTIFICATION,idNotification:idNotification};};// functions that dispatch actions which are from return fundamental action creators\nexport var readPlanTeam=function readPlanTeam(idPlanTeam){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState,axios){var onSuccess,onError,response,newPlanTeam;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:onSuccess=function onSuccess(newPlanTeam){dispatch(replaceReady(\"planTeam\",true));dispatch(replaceLoading(\"planTeam\",false));dispatch(replaceData(\"planTeam\",newPlanTeam));return;};onError=function onError(error){dispatch(replaceReady(\"planTeam\",true));dispatch(replaceLoading(\"planTeam\",false));var idNotification=Date.now();dispatch(addNotification(\"error\",\"Reading planTeam has failed\",idNotification));setTimeout(dispatch(removeNotification(idNotification)),5000);return;};_context.prev=2;dispatch(replaceReady(\"planTeam\",false));dispatch(replaceLoading(\"planTeam\",true));_context.next=7;return axios.get(\"\".concat(process.env.REACT_APP_URL_AHR,\"/PlanTeam/\").concat(idPlanTeam));case 7:response=_context.sent;console.log(response);newPlanTeam=response.data;onSuccess(newPlanTeam);return _context.abrupt(\"return\");case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);onError(_context.t0);return _context.abrupt(\"return\");case 18:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function(_x,_x2,_x3){return _ref.apply(this,arguments);};}();};// readPlanTeam\nvar store=createStore(reducerRoot,applyMiddleware(thunk.withExtraArgument(axios)));export default store;//https://github.com/nomadcoders/vanilla-redux/blob/ccaa1acd081f27239f2cc8ad3c571bd0a9923f73/src/store.js","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/store.js"],"names":["createStore","applyMiddleware","thunk","axios","dotenv","reducerRoot","REPLACE_READY","REPLACE_LOADING","REPLACE_DATA","ADD_NOTIFICATION","REMOVE_NOTIFICATION","replaceReady","which","true_false","type","replaceLoading","replaceData","newData","data","addNotification","situation","message","idNotification","removeNotification","readPlanTeam","idPlanTeam","dispatch","getState","onSuccess","newPlanTeam","onError","error","Date","now","setTimeout","get","process","env","REACT_APP_URL_AHR","response","console","log","store","withExtraArgument"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\nimport reducerRoot from './reducers/root';\r\n\r\n\r\nconst REPLACE_READY = \"REPLACE_READY\";\r\nconst REPLACE_LOADING = \"REPLACE_LOADING\";\r\nconst REPLACE_DATA = \"REPLACE_DATA\";\r\n\r\nconst ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\r\nconst REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\r\n\r\n\r\n// fundamental action creator\r\nconst replaceReady = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_READY,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nconst replaceLoading = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_LOADING,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nconst replaceData = (which, newData) => {\r\n  return {\r\n    type: REPLACE_DATA,\r\n    which: which,\r\n    data: newData\r\n  }\r\n  \r\n}\r\n\r\nconst addNotification = (situation, message, idNotification) => {\r\n  return {\r\n    type: ADD_NOTIFICATION,\r\n    situation: situation,\r\n    message: message,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\nconst removeNotification = (idNotification) => {\r\n  return {\r\n    type: REMOVE_NOTIFICATION,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// functions that dispatch actions which are from return fundamental action creators\r\nexport const readPlanTeam = (idPlanTeam) => {   \r\n  \r\n  return async (dispatch, getState, axios) => { \r\n\r\n    const onSuccess = (newPlanTeam) => { \r\n      \r\n      dispatch( replaceReady(\"planTeam\", true) );\r\n      dispatch( replaceLoading(\"planTeam\", false) ); \r\n      \r\n      dispatch( replaceData(\"planTeam\", newPlanTeam) ); \r\n      \r\n      return;\r\n    } \r\n\r\n\r\n    const onError = (error) =>{ \r\n      \r\n      dispatch( replaceReady(\"planTeam\", true) );\r\n      dispatch( replaceLoading(\"planTeam\", false) ); \r\n      \r\n      const idNotification = Date.now();\r\n      dispatch( addNotification(\"error\", \"Reading planTeam has failed\", idNotification) );\r\n      setTimeout(\r\n        dispatch( removeNotification(idNotification) )\r\n        , 5000);\r\n      \r\n      return; \r\n    } \r\n\r\n\r\n    try { \r\n      \r\n      dispatch( replaceReady(\"planTeam\", false) );\r\n      dispatch( replaceLoading(\"planTeam\", true) ); \r\n      \r\n      const response = await axios.get( `${process.env.REACT_APP_URL_AHR}/PlanTeam/${idPlanTeam}`);\r\n      \r\n      console.log(response);\r\n      \r\n      const newPlanTeam = response.data;\r\n      \r\n      onSuccess(newPlanTeam);\r\n  \r\n      return; \r\n      \r\n    } // try\r\n    \r\n    catch (error) { \r\n      \r\n      onError(error); \r\n      \r\n      return; \r\n      \r\n    } //catch\r\n\r\n  } \r\n} // readPlanTeam\r\n    \r\n\r\n\r\n\r\nconst store = createStore(\r\n  reducerRoot,\r\n  applyMiddleware(thunk.withExtraArgument(axios))\r\n)\r\n\r\n\r\nexport default store;\r\n\r\n//https://github.com/nomadcoders/vanilla-redux/blob/ccaa1acd081f27239f2cc8ad3c571bd0a9923f73/src/store.js"]},"metadata":{},"sourceType":"module"}