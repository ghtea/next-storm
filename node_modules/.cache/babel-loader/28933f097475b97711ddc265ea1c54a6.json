{"ast":null,"code":"/*\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n*/\nimport { REPLACE_READY, REPLACE_LOADING, REPLACE_DATA, ADD_NOTIFICATION, REMOVE_NOTIFICATION } from '../store';\nimport { replaceReady, replaceLoading, replaceData, addNotification, removeNotification } from '../store'; // functions that dispatch actions which are from return fundamental action creators\n\nconst addRemoveNotification = (situation, message, time) => async (dispatch, getState) => {\n  const idNotification = Date.now();\n  dispatch(addNotification(situation, message, idNotification));\n  await setTimeout(dispatch(removeNotification(idNotification)), time);\n}; // addRemoveNotification\n\n\nexport default addRemoveNotification;","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/redux/thunks/addRemoveNotification.js"],"names":["REPLACE_READY","REPLACE_LOADING","REPLACE_DATA","ADD_NOTIFICATION","REMOVE_NOTIFICATION","replaceReady","replaceLoading","replaceData","addNotification","removeNotification","addRemoveNotification","situation","message","time","dispatch","getState","idNotification","Date","now","setTimeout"],"mappings":"AAAA;;;;AAIA,SAAQA,aAAR,EAAuBC,eAAvB,EAAwCC,YAAxC,EAAsDC,gBAAtD,EAAwEC,mBAAxE,QAAkG,UAAlG;AACA,SAAQC,YAAR,EAAsBC,cAAtB,EAAsCC,WAAtC,EAAmDC,eAAnD,EAAoEC,kBAApE,QAA6F,UAA7F,C,CAIA;;AACA,MAAMC,qBAAqB,GAAI,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,KAC7B,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAE5B,QAAMC,cAAc,GAAGC,IAAI,CAACC,GAAL,EAAvB;AAEAJ,EAAAA,QAAQ,CAAEN,eAAe,CAACG,SAAD,EAAYC,OAAZ,EAAqBI,cAArB,CAAjB,CAAR;AAEA,QAAMG,UAAU,CACVL,QAAQ,CAAEL,kBAAkB,CAACO,cAAD,CAApB,CADE,EAERH,IAFQ,CAAhB;AAIH,CAXD,C,CAWE;;;AAEF,eAAgBH,qBAAhB","sourcesContent":["/*\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n*/\r\nimport {REPLACE_READY, REPLACE_LOADING, REPLACE_DATA, ADD_NOTIFICATION, REMOVE_NOTIFICATION} from '../store';\r\nimport {replaceReady, replaceLoading, replaceData, addNotification, removeNotification} from '../store'\r\n\r\n\r\n\r\n// functions that dispatch actions which are from return fundamental action creators\r\nconst addRemoveNotification =  (situation, message, time) => \r\n  async (dispatch, getState) => {   \r\n  \r\n    const idNotification = Date.now();\r\n    \r\n    dispatch( addNotification(situation, message, idNotification) );  \r\n    \r\n    await setTimeout(\r\n          dispatch( removeNotification(idNotification) )\r\n          , time);\r\n        \r\n} // addRemoveNotification\r\n    \r\nexport default  addRemoveNotification;\r\n"]},"metadata":{},"sourceType":"module"}