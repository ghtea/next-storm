{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/AddingPlayer.js\";\nimport dotenv from 'dotenv';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { replaceWorking } from \"../../redux/store\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Div, Input, Button } from '../../styles/DefaultStyles';\nimport useInput from '../../tools/hooks/useInput';\nimport { getTimeStamp } from '../../tools/vanilla/time';\nimport IconWorking from '../../svgs/IconWorking';\nimport IconCopy from '../../svgs/IconCopy';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // STYLES\n\nconst DivAddingPlayer = styled(Div)`\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n  font-weight: bold;\n`;\nconst GroupCopy = styled(Div)`\n  \n  margin-top: 10px;\n  margin-bottom: 10px;\n  \n\theight: 24px;\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`;\nconst ButtonCopy = styled(Button)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  width: 170px;\n  height: 100%;\n  \n  color: ${props => props.theme.color_normal};\n  \n  border-radius: 4px;\n`;\n/*\nconst DivId = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`*/\n\nconst DivBody = styled(Div)`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`;\nconst DivInputAdd = styled(Div)`\n  \n  margin-top: 20px;\n  margin-bottom: 20px;\n  \n  \n\theight: 36px;\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`;\nconst InputBattletag = styled(Input)`\n\twidth: 150px;\n\theight: 100%;\n\t\n\tborder-radius: 6px;\n\tborder: 1px solid ${props => props.theme.color_weak};\n`;\nconst InputName = styled(Input)`\n\twidth: 110px;\n\theight: 100%;\n\t\n\tborder-radius: 6px;\n`;\nconst ButtonAdd = styled(Button)`\n  width: 60px;\n  height: 100%;\n  \n  border-radius: 6px;\n`;\n/*\nconst ButtonAddOnly = styled(Button)`\n  width: 60px;\n  height: 100%;\n  \n  border-radius: 4px;\n`\n*/\n\nconst DivIconWorking = styled(Div)`\n  \n`;\n\nconst AddingPlayer = ({\n  workingAddPlayer,\n  loadingPlanTeam,\n  readyPlanTeam,\n  authority,\n  planTeam,\n  readPlanTeam,\n  addRemoveNotification,\n  replaceWorking\n}) => {\n  const inputBattletag = useInput(\"\");\n  const inputName = useInput(\"\"); // heroes profile 에서 mmr 가져오기, cPlanTeam 에 플레이어 추가, cPlanTeam 의 플레이의 mmr 추가 모두\n\n  const onClick_ButtonAdd = async (event, statusPlayer) => {\n    let battletag = inputBattletag.value;\n    let name = inputName.value;\n    const idPlanTeam = planTeam._id; //console.log(battletag, name, idPlanTeam, statusPlayer)\n\n    if (inputBattletag.value) {\n      try {\n        replaceWorking(\"addPlayer\", true); // playermmr 옮기고, playerEntry 를 plan에 추가하고, 이후에 mmrStandar 도 추가하는 전체 작업 시작\n        // /add/:battletag/:idPlanTeam/:status\n\n        await axios.put(`${process.env.REACT_APP_URL_AHR}/player/add`, {\n          battletag: battletag,\n          idPlanTeam: idPlanTeam,\n          name: name,\n          status: statusPlayer\n        });\n        replaceWorking(\"addPlayer\", false);\n        addRemoveNotification(\"success\", \"player has been added!\");\n        inputBattletag.setValue(\"\");\n        inputName.setValue(\"\");\n        readPlanTeam(idPlanTeam); // important! need new data in redux for rernedering (ex: entry)\n      } //try\n      catch (error) {\n        replaceWorking(\"addPlayer\", false);\n        addRemoveNotification(\"error\", \"check your battletag\"); // 1. battlelog 잘못입력\n        // 2. 게임수가 극히 적은 battletag\n        // 3. 내 백엔드 문제\n      }\n    } else {\n      // 애초에 battletag를 입력 안했다면.\n      addRemoveNotification(\"error\", \"type battletag first\");\n    }\n  };\n\n  useEffect(() => {}, [workingAddPlayer]); // copy: https://www.npmjs.com/package/react-copy-to-clipboard\n\n  return /*#__PURE__*/React.createElement(DivAddingPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, \" \", `${planTeam.title}`, \" \"), /*#__PURE__*/React.createElement(GroupCopy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: `https://ps.avantwing.com/team-generator/${planTeam._id}`,\n    onCopy: () => {\n      addRemoveNotification(\"success\", \"viewer link has been copied\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonCopy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconCopy, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \" Copy Viewing Link \"))), authority === \"administrator\" && /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: `https://ps.avantwing.com/team-generator/${planTeam._id}?pw=${planTeam.password}`,\n    onCopy: () => {\n      addRemoveNotification(\"success\", \"administrator link has been copied\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonCopy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconCopy, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, \" Copy editing Link \"))))), /*#__PURE__*/React.createElement(DivBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DivInputAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(InputBattletag, Object.assign({}, inputBattletag, {\n    placeholder: \"battletag#1234\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(InputName, Object.assign({}, inputName, {\n    placeholder: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 8\n    }\n  })), authority === \"viewer\" && workingAddPlayer && /*#__PURE__*/React.createElement(ButtonAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DivIconWorking, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconWorking, {\n    width: \"27px\",\n    height: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }))), authority === \"viewer\" && !workingAddPlayer && /*#__PURE__*/React.createElement(ButtonAdd, {\n    onClick: event => onClick_ButtonAdd(event, \"pending\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, \" Apply \"), authority === \"administrator\" && workingAddPlayer && /*#__PURE__*/React.createElement(ButtonAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DivIconWorking, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconWorking, {\n    width: \"27px\",\n    height: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }))), authority === \"administrator\" && !workingAddPlayer && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonAdd, {\n    onClick: event => onClick_ButtonAdd(event, \"confirmed\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, \" Add \"))), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 6\n    }\n  }, \"* name is not necessary\")));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    workingAddPlayer: state.working.addPlayer //,workingPutPlayerMmr: state.working.putPlayerMmr\n    //,idPlanTeam: state.idPlanTeam\n    //,passwordPlanTeam: state.planTeam.password\n    ,\n    loadingPlanTeam: state.loading.planTeam,\n    readyPlanTeam: state.ready.planTeam,\n    authority: state.authority,\n    planTeam: { ...state.planTeam\n    }\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time)),\n    replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false)),\n    readPlanTeam: idPlanTeam => dispatch(readPlanTeam(idPlanTeam))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingPlayer);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/AddingPlayer.js"],"names":["dotenv","React","useEffect","useState","styled","axios","connect","replaceWorking","readPlanTeam","addRemoveNotification","NavLink","useHistory","Div","Input","Button","useInput","getTimeStamp","IconWorking","IconCopy","CopyToClipboard","DivAddingPlayer","DivHeader","DivTitle","GroupCopy","ButtonCopy","props","theme","color_normal","DivBody","DivInputAdd","InputBattletag","color_weak","InputName","ButtonAdd","DivIconWorking","AddingPlayer","workingAddPlayer","loadingPlanTeam","readyPlanTeam","authority","planTeam","inputBattletag","inputName","onClick_ButtonAdd","event","statusPlayer","battletag","value","name","idPlanTeam","_id","put","process","env","REACT_APP_URL_AHR","status","setValue","error","title","password","mapStateToProps","state","working","addPlayer","loading","ready","mapDispatchToProps","dispatch","situation","message","time","which","true_false"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\n\nimport axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport {replaceWorking} from \"../../redux/store\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\n\n\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport {Div, Input, Button} from '../../styles/DefaultStyles';\n\n\nimport useInput from '../../tools/hooks/useInput';\nimport {getTimeStamp} from '../../tools/vanilla/time';\n\nimport IconWorking from '../../svgs/IconWorking'\nimport IconCopy from '../../svgs/IconCopy'\n\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\n\n// STYLES\nconst DivAddingPlayer = styled(Div)`\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n  font-weight: bold;\n`\n\n\nconst GroupCopy = styled(Div)`\n  \n  margin-top: 10px;\n  margin-bottom: 10px;\n  \n\theight: 24px;\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`\n\n\nconst ButtonCopy = styled(Button)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  width: 170px;\n  height: 100%;\n  \n  color: ${props => props.theme.color_normal};\n  \n  border-radius: 4px;\n`\n\n\n\n\n/*\nconst DivId = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`*/\n\n\nconst DivBody = styled(Div)`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`\n\nconst DivInputAdd = styled(Div)`\n  \n  margin-top: 20px;\n  margin-bottom: 20px;\n  \n  \n\theight: 36px;\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`\n\nconst InputBattletag = styled(Input)`\n\twidth: 150px;\n\theight: 100%;\n\t\n\tborder-radius: 6px;\n\tborder: 1px solid ${props => props.theme.color_weak};\n`\n\nconst InputName = styled(Input)`\n\twidth: 110px;\n\theight: 100%;\n\t\n\tborder-radius: 6px;\n`\n\nconst ButtonAdd = styled(Button)`\n  width: 60px;\n  height: 100%;\n  \n  border-radius: 6px;\n`\n/*\nconst ButtonAddOnly = styled(Button)`\n  width: 60px;\n  height: 100%;\n  \n  border-radius: 4px;\n`\n*/\n\nconst DivIconWorking = styled(Div)`\n  \n`\n\n\n\n\n\n const AddingPlayer = ({\n   \n  workingAddPlayer \n  \n  , loadingPlanTeam\n  , readyPlanTeam\n  \n  , authority\n  , planTeam\n  \n  , readPlanTeam\n  , addRemoveNotification\n  , replaceWorking\n   \n }) => {\n\n  const inputBattletag = useInput(\"\");\n  const inputName = useInput(\"\");\n  \n  \n  // heroes profile 에서 mmr 가져오기, cPlanTeam 에 플레이어 추가, cPlanTeam 의 플레이의 mmr 추가 모두\n  const onClick_ButtonAdd = async (event, statusPlayer) => {\n    \n    let battletag = inputBattletag.value;\n    let name = inputName.value;\n    const idPlanTeam = planTeam._id;\n    \n    //console.log(battletag, name, idPlanTeam, statusPlayer)\n    \n    if (inputBattletag.value) {\n      \n      try {\n        \n        replaceWorking(\"addPlayer\", true) // playermmr 옮기고, playerEntry 를 plan에 추가하고, 이후에 mmrStandar 도 추가하는 전체 작업 시작\n        \n        // /add/:battletag/:idPlanTeam/:status\n        await axios.put (`${process.env.REACT_APP_URL_AHR}/player/add`,\n          {\n            battletag: battletag\n            , idPlanTeam: idPlanTeam\n            , name: name\n            , status: statusPlayer\n          }\n        );\n        \n        replaceWorking(\"addPlayer\", false)\n        addRemoveNotification(\"success\", \"player has been added!\");\n        \n        inputBattletag.setValue(\"\");\n        inputName.setValue(\"\");\n        \n        readPlanTeam(idPlanTeam);  // important! need new data in redux for rernedering (ex: entry)\n\n        \n      } //try\n      \n      catch(error) {\n        replaceWorking(\"addPlayer\", false)\n        addRemoveNotification(\"error\", \"check your battletag\");\n        // 1. battlelog 잘못입력\n        // 2. 게임수가 극히 적은 battletag\n        // 3. 내 백엔드 문제\n        \n      }\n      \n    } else { // 애초에 battletag를 입력 안했다면.\n      addRemoveNotification(\"error\", \"type battletag first\");\n    }\n    \n   \n  }\n  \n  \n  useEffect(()=>{\n    \n  },[workingAddPlayer])\n  \n  // copy: https://www.npmjs.com/package/react-copy-to-clipboard\n  \n  \n  return (\n  <DivAddingPlayer>\n        \n    <DivHeader>\n      <DivTitle> {`${planTeam.title}`} </DivTitle>\n      \n      <GroupCopy>\n        \n        <CopyToClipboard \n          text={`https://ps.avantwing.com/team-generator/${planTeam._id}`}\n          onCopy={ () => { addRemoveNotification(\"success\", \"viewer link has been copied\") } } >\n          \n          <ButtonCopy> \n            <IconCopy width={\"20px\"} height={\"20px\"} /> \n            <Div> Copy Viewing Link </Div>\n          </ButtonCopy> \n          \n        </CopyToClipboard>\n        \n        { (authority === \"administrator\") && \n          <CopyToClipboard \n            text={`https://ps.avantwing.com/team-generator/${planTeam._id}?pw=${planTeam.password}`}\n            onCopy={ () => { addRemoveNotification(\"success\", \"administrator link has been copied\") } } >\n            \n            <ButtonCopy>\n              <IconCopy width={\"20px\"} height={\"20px\"} /> \n              <Div> Copy editing Link </Div>\n            </ButtonCopy> \n            \n          </CopyToClipboard>\n        }\n        \n      </GroupCopy>\n      \n    </DivHeader>\n    \n    \n    \n   <DivBody>\n\n\t    <DivInputAdd>\n\t      <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n\t      <InputName {...inputName} placeholder=\"name\" />\n\t      \n\t      { (authority === \"viewer\") && workingAddPlayer && \n          <ButtonAdd> \n            <DivIconWorking>\n              <IconWorking width={\"27px\"} height={\"24px\"} />  \n            </DivIconWorking>\n          </ButtonAdd>\n        }\n        \n        { (authority === \"viewer\") && !workingAddPlayer &&\n          <ButtonAdd onClick = {  (event)=> onClick_ButtonAdd(event, \"pending\")} > Apply </ButtonAdd>\n        }\n        \n        \n        \n        { (authority === \"administrator\") && workingAddPlayer && \n          <ButtonAdd> \n            <DivIconWorking>\n              <IconWorking width={\"27px\"} height={\"24px\"} />\n            </DivIconWorking>\n          </ButtonAdd>\n        }\n        \n        { (authority === \"administrator\") && !workingAddPlayer && \n          <>\n            <ButtonAdd onClick = {  (event)=> onClick_ButtonAdd(event, \"confirmed\")} > Add </ButtonAdd>\n          </>\n        }\n\n        \n\t    </DivInputAdd>\n\t    \n\t    <Div>\n\t      * name is not necessary\n\t    </Div>\n\t    \n   </DivBody>\n  \n  </DivAddingPlayer>\n        \n  \n  )\n\n}\n  \n\t  \n\n\nfunction mapStateToProps(state) { \n  return { \n   \n    workingAddPlayer: state.working.addPlayer\n    //,workingPutPlayerMmr: state.working.putPlayerMmr\n    \n    //,idPlanTeam: state.idPlanTeam\n    //,passwordPlanTeam: state.planTeam.password\n    \n    , loadingPlanTeam: state.loading.planTeam\n    , readyPlanTeam: state.ready.planTeam\n    \n    , authority: state.authority\n    , planTeam: {...state.planTeam}\n    \n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    \n    addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n    ,replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n    \n    ,readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingPlayer);"]},"metadata":{},"sourceType":"module"}