{"ast":null,"code":"import { getTimeStamp } from '../tools/vanilla/time';\nimport { toggleArrayElement } from '../tools/vanilla/array';\nconst REPLACE_READY = \"REPLACE_READY\";\nconst REPLACE_LOADING = \"REPLACE_LOADING\";\nconst REPLACE_WORKING = \"REPLACE_WORKING\";\nconst REPLACE_AUTHORITY = \"REPLACE_AUTHORITY\";\nconst REPLACE_DATA = \"REPLACE_DATA\";\nconst ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\nconst REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\nconst ADD_RESULT = \"ADD_RESULT\";\nconst DELETE_RESULT = \"DELETE_RESULT\";\nconst REPLACE_PLAYER_TAGS = \"REPLACE_PLAYER_TAGS\";\nconst REPLACE_PLAYER_STATUS = \"REPLACE_PLAYER_STATUS\";\nconst REPLACE_REGION = \"REPLACE_REGION\";\nconst REPLACE_NUMBER = \"REPLACE_NUMBER\";\nconst stateInitial = {\n  ready: {\n    planTeam: false\n  },\n  loading: {\n    planTeam: false\n  },\n  working: {\n    createPlan: false,\n    addPlayer: false,\n    putPlayerMmr: false,\n    addPlayerToListPlayerEntry: false,\n    addPlayerMmrStandardToListPlayerEntry: false\n  },\n  notification: [],\n  themeName: \"light\",\n  authority: {\n    team_generator: \"viewer\" // \"administrator\" \"viewer\"\n    ,\n    comp_gallery: \"viewer\" // \"master\" \"viewer\"\n\n  } // team-generator\n  ,\n  idPlanTeam: \"\",\n  planTeam: {\n    _id: \"_id\",\n    password: \"password\",\n    title: \"title\",\n    listResult: [],\n    listPlayerEntry: [{\n      _id: \"test\",\n      tags: []\n    }],\n    option: {}\n  } // comp-gallery\n  ,\n  comp_gallery: {\n    listComp: [] // searching\n    ,\n    vComp: {} // VIEW a comp\n    ,\n    aComp: {} // ADD a comp\n\n  } // common\n  ,\n  hots: {\n    here\n  }\n};\n\nconst reducer = ( // 기본값 설정\nstate = stateInitial, // 액션별로 새로운 state 반환하기\naction) => {\n  switch (action.type) {\n    /*\n    case REPLACE_RERENDER:\n      return {\n      \t...state, \n      \trerender: {\n      \t  ...state.rerender\n      \t  ,[action.which]: getTimeStamp()\n      \t}\n      };\n      */\n    case REPLACE_DATA:\n      if (!!action.data && action.data.constructor === Array) {\n        return { ...state,\n          [action.which]: [...action.data]\n        };\n      } else if (!!action.data && action.data.constructor === Object) {\n        return { ...state,\n          [action.which]: { ...action.data\n          }\n        };\n      } else {\n        return { ...state,\n          [action.which]: action.data\n        };\n      }\n\n    case REPLACE_READY:\n      return { ...state,\n        ready: { ...state.ready,\n          [action.which]: action.true_false\n        }\n      };\n\n    case REPLACE_LOADING:\n      return { ...state,\n        loading: { ...state.loading,\n          [action.which]: action.true_false\n        }\n      };\n\n    case REPLACE_WORKING:\n      return { ...state,\n        working: { ...state.working,\n          [action.which]: action.true_false\n        }\n      };\n\n    case REPLACE_AUTHORITY:\n      return { ...state,\n        authority: { ...state.authority,\n          [action.which]: action.authority\n        }\n      };\n\n    case ADD_NOTIFICATION:\n      const listIdNotification = state.notification.map(element => element.idNotification); // list of idNotification\n\n      if (!listIdNotification.includes(action.idNotification)) {\n        // 기존에 동일한 아이디의 알림이 없어야 추가\n        return { ...state,\n          notification: [{\n            situation: action.situation,\n            message: action.message,\n            idNotification: action.idNotification\n          }, ...state.notification]\n        };\n      } else {\n        return state;\n      }\n\n    case REMOVE_NOTIFICATION:\n      return { ...state,\n        notification: state.notification.filter(element => element.idNotification !== action.idNotification)\n      };\n\n    case ADD_RESULT:\n      // 같은 id의 result 가 이미 존재하면 그거 먼저 빼놓기\n      const listResultAlreday = state.planTeam.listResult.filter(element => element._id === action.result._id);\n      const listResultOthers = state.planTeam.listResult.filter(element => element._id !== action.result._id);\n      const listResultAll = [action.result, ...listResultOthers];\n      const listResultLocal = listResultAll.filter(element => element._id === \"local\");\n      const listResultNotLocal = listResultAll.filter(element => element._id !== \"local\");\n      const listResultAllSorted = [...listResultLocal, ...listResultNotLocal];\n      return { ...state,\n        planTeam: { ...state.planTeam,\n          listResult: [...listResultAllSorted]\n        }\n      };\n    // return\n\n    case DELETE_RESULT:\n      const listResultFiltered = state.planTeam.listResult.filter(element => element._id !== action.idResult);\n      return { ...state,\n        planTeam: { ...state.planTeam,\n          listResult: [...listResultFiltered]\n        }\n      };\n    // return\n\n    case REPLACE_REGION:\n      return { ...state,\n        planTeam: { ...state.planTeam,\n          option: { ...state.planTeam.option,\n            region: action.region\n          }\n        }\n      };\n\n    case REPLACE_NUMBER:\n      let whichNumber;\n      let valueCurrent;\n\n      if (action.which === \"team\") {\n        whichNumber = \"numberTeams\";\n        valueCurrent = action.pairNumber[0];\n      } else if (action.which === \"group\") {\n        whichNumber = \"numberGroups\";\n        valueCurrent = action.pairNumber[1];\n      }\n\n      if (action.how === \"center\") {\n        return { ...state,\n          planTeam: { ...state.planTeam,\n            option: { ...state.planTeam.option,\n              [whichNumber]: 0\n            }\n          }\n        };\n      } else if (action.how === \"plus\") {\n        return { ...state,\n          planTeam: { ...state.planTeam,\n            option: { ...state.planTeam.option,\n              [whichNumber]: state.planTeam.option[whichNumber] + 1\n            }\n          }\n        };\n      } else if (action.how === \"minus\" && !(valueCurrent == 0)) {\n        return { ...state,\n          planTeam: { ...state.planTeam,\n            option: { ...state.planTeam.option,\n              [whichNumber]: state.planTeam.option[whichNumber] - 1\n            }\n          }\n        };\n      } else if (action.how === \"minus\" && valueCurrent == 0) {\n        return { ...state,\n          planTeam: { ...state.planTeam,\n            option: { ...state.planTeam.option,\n              [whichNumber]: 0\n            }\n          }\n        };\n      }\n\n    case REPLACE_PLAYER_TAGS:\n      const index1 = state.planTeam.listPlayerEntry.findIndex(objPlayer => objPlayer._id === action.battletag);\n      return { ...state,\n        planTeam: { ...state.planTeam,\n          listPlayerEntry: state.planTeam.listPlayerEntry.map(objPlayer => objPlayer._id === action.battletag ? { ...objPlayer,\n            tags: toggleArrayElement(state.planTeam.listPlayerEntry[index1][\"tags\"], action.tag, action.true_false)\n          } : objPlayer)\n        }\n      };\n\n    case REPLACE_PLAYER_STATUS:\n      return { ...state,\n        planTeam: { ...state.planTeam,\n          listPlayerEntry: state.planTeam.listPlayerEntry.map(objPlayer => objPlayer._id === action.battletag ? { ...objPlayer,\n            status: action.status\n          } : objPlayer)\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/usr/projects/next-storm/src/redux/reducer.js"],"names":["getTimeStamp","toggleArrayElement","REPLACE_READY","REPLACE_LOADING","REPLACE_WORKING","REPLACE_AUTHORITY","REPLACE_DATA","ADD_NOTIFICATION","REMOVE_NOTIFICATION","ADD_RESULT","DELETE_RESULT","REPLACE_PLAYER_TAGS","REPLACE_PLAYER_STATUS","REPLACE_REGION","REPLACE_NUMBER","stateInitial","ready","planTeam","loading","working","createPlan","addPlayer","putPlayerMmr","addPlayerToListPlayerEntry","addPlayerMmrStandardToListPlayerEntry","notification","themeName","authority","team_generator","comp_gallery","idPlanTeam","_id","password","title","listResult","listPlayerEntry","tags","option","listComp","vComp","aComp","hots","here","reducer","state","action","type","data","constructor","Array","which","Object","true_false","listIdNotification","map","element","idNotification","includes","situation","message","filter","listResultAlreday","result","listResultOthers","listResultAll","listResultLocal","listResultNotLocal","listResultAllSorted","listResultFiltered","idResult","region","whichNumber","valueCurrent","pairNumber","how","index1","findIndex","objPlayer","battletag","tag","status"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,uBAA3B;AACA,SAAQC,kBAAR,QAAiC,wBAAjC;AAGA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AAEA,MAAMC,YAAY,GAAG,cAArB;AAGA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,aAAa,GAAG,eAAtB;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AAGA,MAAMC,YAAY,GAAG;AAEjBC,EAAAA,KAAK,EAAG;AACNC,IAAAA,QAAQ,EAAE;AADJ,GAFS;AAMhBC,EAAAA,OAAO,EAAG;AACTD,IAAAA,QAAQ,EAAE;AADD,GANM;AAWhBE,EAAAA,OAAO,EAAG;AACTC,IAAAA,UAAU,EAAE,KADH;AAGRC,IAAAA,SAAS,EAAE,KAHH;AAIRC,IAAAA,YAAY,EAAE,KAJN;AAKRC,IAAAA,0BAA0B,EAAE,KALpB;AAMRC,IAAAA,qCAAqC,EAAE;AAN/B,GAXM;AAoBhBC,EAAAA,YAAY,EAAG,EApBC;AAuBhBC,EAAAA,SAAS,EAAE,OAvBK;AAgChBC,EAAAA,SAAS,EAAE;AACVC,IAAAA,cAAc,EAAE,QADN,CACe;AADf;AAERC,IAAAA,YAAY,EAAE,QAFN,CAEe;;AAFf,GAhCK,CAsCjB;AAtCiB;AAuChBC,EAAAA,UAAU,EAAE,EAvCI;AAwChBb,EAAAA,QAAQ,EAAE;AACTc,IAAAA,GAAG,EAAC,KADK;AAERC,IAAAA,QAAQ,EAAC,UAFD;AAGRC,IAAAA,KAAK,EAAC,OAHE;AAIRC,IAAAA,UAAU,EAAC,EAJH;AAKRC,IAAAA,eAAe,EAAE,CAChB;AACEJ,MAAAA,GAAG,EAAE,MADP;AAEIK,MAAAA,IAAI,EAAE;AAFV,KADgB,CALT;AAWPC,IAAAA,MAAM,EAAE;AAXD,GAxCM,CAuDjB;AAvDiB;AAwDhBR,EAAAA,YAAY,EAAE;AAEbS,IAAAA,QAAQ,EAAG,EAFE,CAEE;AAFF;AAGXC,IAAAA,KAAK,EAAE,EAHI,CAGD;AAHC;AAKXC,IAAAA,KAAK,EAAE,EALI,CAKD;;AALC,GAxDE,CAgEjB;AAhEiB;AAiEfC,EAAAA,IAAI,EAAE;AACNC,IAAAA;AADM;AAjES,CAArB;;AAyEA,MAAMC,OAAO,GAAG,EAEd;AACAC,KAAK,GAAG7B,YAHM,EAKd;AACA8B,MANc,KAMH;AAEX,UAAQA,MAAM,CAACC,IAAf;AAEE;;;;;;;;;;AAWA,SAAKxC,YAAL;AAEE,UAAM,CAAC,CAACuC,MAAM,CAACE,IAAV,IAAoBF,MAAM,CAACE,IAAP,CAAYC,WAAZ,KAA4BC,KAArD,EAA8D;AAC5D,eAAO,EACR,GAAGL,KADK;AAER,WAACC,MAAM,CAACK,KAAR,GAAgB,CAAC,GAAGL,MAAM,CAACE,IAAX;AAFR,SAAP;AAID,OALD,MAOK,IAAM,CAAC,CAACF,MAAM,CAACE,IAAV,IAAoBF,MAAM,CAACE,IAAP,CAAYC,WAAZ,KAA4BG,MAArD,EAA+D;AAClE,eAAO,EACR,GAAGP,KADK;AAER,WAACC,MAAM,CAACK,KAAR,GAAgB,EAAC,GAAGL,MAAM,CAACE;AAAX;AAFR,SAAP;AAID,OALI,MAMA;AACH,eAAO,EACN,GAAGH,KADG;AAEN,WAACC,MAAM,CAACK,KAAR,GAAgBL,MAAM,CAACE;AAFjB,SAAP;AAID;;AAEH,SAAK7C,aAAL;AACE,aAAO,EACN,GAAG0C,KADG;AAEN5B,QAAAA,KAAK,EAAE,EACL,GAAG4B,KAAK,CAAC5B,KADJ;AAEL,WAAC6B,MAAM,CAACK,KAAR,GAAgBL,MAAM,CAACO;AAFlB;AAFD,OAAP;;AAQF,SAAKjD,eAAL;AACE,aAAO,EACN,GAAGyC,KADG;AAEN1B,QAAAA,OAAO,EAAE,EACP,GAAG0B,KAAK,CAAC1B,OADF;AAEP,WAAC2B,MAAM,CAACK,KAAR,GAAgBL,MAAM,CAACO;AAFhB;AAFH,OAAP;;AAQF,SAAKhD,eAAL;AACE,aAAO,EACN,GAAGwC,KADG;AAENzB,QAAAA,OAAO,EAAE,EACP,GAAGyB,KAAK,CAACzB,OADF;AAEP,WAAC0B,MAAM,CAACK,KAAR,GAAgBL,MAAM,CAACO;AAFhB;AAFH,OAAP;;AAQH,SAAK/C,iBAAL;AACC,aAAO,EACN,GAAGuC,KADG;AAENjB,QAAAA,SAAS,EAAE,EACT,GAAGiB,KAAK,CAACjB,SADA;AAET,WAACkB,MAAM,CAACK,KAAR,GAAgBL,MAAM,CAAClB;AAFd;AAFL,OAAP;;AAQA,SAAKpB,gBAAL;AAEE,YAAM8C,kBAAkB,GAAGT,KAAK,CAACnB,YAAN,CAAmB6B,GAAnB,CAAuBC,OAAO,IAAIA,OAAO,CAACC,cAA1C,CAA3B,CAFF,CAEwF;;AACtF,UAAK,CAAEH,kBAAkB,CAACI,QAAnB,CAA4BZ,MAAM,CAACW,cAAnC,CAAP,EAA6D;AAAG;AAC9D,eAAO,EACR,GAAGZ,KADK;AAGRnB,UAAAA,YAAY,EAAE,CACZ;AACEiC,YAAAA,SAAS,EAAEb,MAAM,CAACa,SADpB;AAEGC,YAAAA,OAAO,EAAEd,MAAM,CAACc,OAFnB;AAGGH,YAAAA,cAAc,EAAEX,MAAM,CAACW;AAH1B,WADY,EAMV,GAAGZ,KAAK,CAACnB,YANC;AAHN,SAAP;AAaD,OAdD,MAeK;AAAC,eAAOmB,KAAP;AAAa;;AAIrB,SAAKpC,mBAAL;AACE,aAAO,EACN,GAAGoC,KADG;AAENnB,QAAAA,YAAY,EAAEmB,KAAK,CAACnB,YAAN,CAAmBmC,MAAnB,CAA0BL,OAAO,IAAIA,OAAO,CAACC,cAAR,KAA2BX,MAAM,CAACW,cAAvE;AAFR,OAAP;;AAMF,SAAK/C,UAAL;AAEE;AAEA,YAAMoD,iBAAiB,GAAGjB,KAAK,CAAC3B,QAAN,CAAeiB,UAAf,CAA0B0B,MAA1B,CAAiCL,OAAO,IAAIA,OAAO,CAACxB,GAAR,KAAgBc,MAAM,CAACiB,MAAP,CAAc/B,GAA1E,CAA1B;AACA,YAAMgC,gBAAgB,GAAGnB,KAAK,CAAC3B,QAAN,CAAeiB,UAAf,CAA0B0B,MAA1B,CAAiCL,OAAO,IAAIA,OAAO,CAACxB,GAAR,KAAgBc,MAAM,CAACiB,MAAP,CAAc/B,GAA1E,CAAzB;AAGA,YAAMiC,aAAa,GAAG,CAACnB,MAAM,CAACiB,MAAR,EAAgB,GAAGC,gBAAnB,CAAtB;AAEA,YAAME,eAAe,GAAGD,aAAa,CAACJ,MAAd,CAAqBL,OAAO,IAAIA,OAAO,CAACxB,GAAR,KAAgB,OAAhD,CAAxB;AACA,YAAMmC,kBAAkB,GAAGF,aAAa,CAACJ,MAAd,CAAqBL,OAAO,IAAIA,OAAO,CAACxB,GAAR,KAAgB,OAAhD,CAA3B;AAEA,YAAMoC,mBAAmB,GAAG,CAAC,GAAGF,eAAJ,EAAqB,GAAGC,kBAAxB,CAA5B;AAEA,aAAO,EACN,GAAGtB,KADG;AAEN3B,QAAAA,QAAQ,EAAE,EACR,GAAG2B,KAAK,CAAC3B,QADD;AAENiB,UAAAA,UAAU,EAAE,CAAC,GAAGiC,mBAAJ;AAFN;AAFJ,OAAP;AAME;;AAGJ,SAAKzD,aAAL;AAEE,YAAM0D,kBAAkB,GAAGxB,KAAK,CAAC3B,QAAN,CAAeiB,UAAf,CAA0B0B,MAA1B,CAAiCL,OAAO,IAAIA,OAAO,CAACxB,GAAR,KAAgBc,MAAM,CAACwB,QAAnE,CAA3B;AAEA,aAAO,EACN,GAAGzB,KADG;AAEN3B,QAAAA,QAAQ,EAAE,EACR,GAAG2B,KAAK,CAAC3B,QADD;AAENiB,UAAAA,UAAU,EAAE,CAAC,GAAGkC,kBAAJ;AAFN;AAFJ,OAAP;AAME;;AAGJ,SAAKvD,cAAL;AACE,aAAO,EACN,GAAG+B,KADG;AAGN3B,QAAAA,QAAQ,EAAE,EACR,GAAG2B,KAAK,CAAC3B,QADD;AAENoB,UAAAA,MAAM,EAAE,EACR,GAAGO,KAAK,CAAC3B,QAAN,CAAeoB,MADV;AAENiC,YAAAA,MAAM,EAAEzB,MAAM,CAACyB;AAFT;AAFF;AAHJ,OAAP;;AAaF,SAAKxD,cAAL;AAEE,UAAIyD,WAAJ;AACA,UAAIC,YAAJ;;AAEA,UAAI3B,MAAM,CAACK,KAAP,KAAiB,MAArB,EAA6B;AAC3BqB,QAAAA,WAAW,GAAG,aAAd;AACAC,QAAAA,YAAY,GAAG3B,MAAM,CAAC4B,UAAP,CAAkB,CAAlB,CAAf;AACD,OAHD,MAIK,IAAI5B,MAAM,CAACK,KAAP,KAAiB,OAArB,EAA8B;AACjCqB,QAAAA,WAAW,GAAG,cAAd;AACAC,QAAAA,YAAY,GAAG3B,MAAM,CAAC4B,UAAP,CAAkB,CAAlB,CAAf;AACD;;AAKD,UAAI5B,MAAM,CAAC6B,GAAP,KAAe,QAAnB,EAA6B;AAC3B,eAAO,EACL,GAAG9B,KADE;AAEL3B,UAAAA,QAAQ,EAAE,EACR,GAAG2B,KAAK,CAAC3B,QADD;AAEPoB,YAAAA,MAAM,EAAE,EACR,GAAGO,KAAK,CAAC3B,QAAN,CAAeoB,MADV;AAEN,eAACkC,WAAD,GAAe;AAFT;AAFD;AAFL,SAAP;AAUD,OAXD,MAYK,IAAK1B,MAAM,CAAC6B,GAAP,KAAe,MAApB,EAA4B;AAC/B,eAAO,EACL,GAAG9B,KADE;AAEL3B,UAAAA,QAAQ,EAAE,EACR,GAAG2B,KAAK,CAAC3B,QADD;AAEPoB,YAAAA,MAAM,EAAE,EACR,GAAGO,KAAK,CAAC3B,QAAN,CAAeoB,MADV;AAEN,eAACkC,WAAD,GAAkB3B,KAAK,CAAC3B,QAAN,CAAeoB,MAAhB,CAAwBkC,WAAxB,IAAuC;AAFlD;AAFD;AAFL,SAAP;AAUD,OAXI,MAYA,IAAK1B,MAAM,CAAC6B,GAAP,KAAe,OAAf,IAA0B,EAAEF,YAAY,IAAI,CAAlB,CAA/B,EAAqD;AACxD,eAAO,EACL,GAAG5B,KADE;AAEL3B,UAAAA,QAAQ,EAAE,EACR,GAAG2B,KAAK,CAAC3B,QADD;AAEPoB,YAAAA,MAAM,EAAE,EACR,GAAGO,KAAK,CAAC3B,QAAN,CAAeoB,MADV;AAEN,eAACkC,WAAD,GAAkB3B,KAAK,CAAC3B,QAAN,CAAeoB,MAAhB,CAAwBkC,WAAxB,IAAuC;AAFlD;AAFD;AAFL,SAAP;AAUD,OAXI,MAYA,IAAK1B,MAAM,CAAC6B,GAAP,KAAe,OAAf,IAA2BF,YAAY,IAAI,CAAhD,EAAoD;AACvD,eAAO,EACL,GAAG5B,KADE;AAEL3B,UAAAA,QAAQ,EAAE,EACR,GAAG2B,KAAK,CAAC3B,QADD;AAEPoB,YAAAA,MAAM,EAAE,EACR,GAAGO,KAAK,CAAC3B,QAAN,CAAeoB,MADV;AAEN,eAACkC,WAAD,GAAe;AAFT;AAFD;AAFL,SAAP;AAUD;;AAGH,SAAK5D,mBAAL;AAEE,YAAMgE,MAAM,GAAI/B,KAAK,CAAC3B,QAAN,CAAekB,eAAhB,CAAiCyC,SAAjC,CAA4CC,SAAS,IAAIA,SAAS,CAAC9C,GAAV,KAAkBc,MAAM,CAACiC,SAAlF,CAAf;AAGA,aAAO,EACL,GAAGlC,KADE;AAGN3B,QAAAA,QAAQ,EAAE,EACR,GAAG2B,KAAK,CAAC3B,QADD;AAGNkB,UAAAA,eAAe,EAAES,KAAK,CAAC3B,QAAN,CAAekB,eAAf,CAA+BmB,GAA/B,CACfuB,SAAS,IAAKA,SAAS,CAAC9C,GAAV,KAAkBc,MAAM,CAACiC,SAA1B,GACX,EAAC,GAAGD,SAAJ;AAAezC,YAAAA,IAAI,EAACnC,kBAAkB,CAAC2C,KAAK,CAAC3B,QAAN,CAAekB,eAAf,CAA+BwC,MAA/B,EAAuC,MAAvC,CAAD,EAAiD9B,MAAM,CAACkC,GAAxD,EAA6DlC,MAAM,CAACO,UAApE;AAAtC,WADW,GAETyB,SAHW;AAHX;AAHJ,OAAP;;AAcF,SAAKjE,qBAAL;AAGE,aAAO,EACL,GAAGgC,KADE;AAGN3B,QAAAA,QAAQ,EAAE,EACR,GAAG2B,KAAK,CAAC3B,QADD;AAGNkB,UAAAA,eAAe,EAAES,KAAK,CAAC3B,QAAN,CAAekB,eAAf,CAA+BmB,GAA/B,CACfuB,SAAS,IAAKA,SAAS,CAAC9C,GAAV,KAAkBc,MAAM,CAACiC,SAA1B,GACX,EAAC,GAAGD,SAAJ;AAAeG,YAAAA,MAAM,EAACnC,MAAM,CAACmC;AAA7B,WADW,GAETH,SAHW;AAHX;AAHJ,OAAP;;AAcF;AACE,aAAOjC,KAAP;AA/PJ;AAiQD,CAzQD;;AA4QA,eAAeD,OAAf","sourcesContent":["import {getTimeStamp} from '../tools/vanilla/time'\nimport {toggleArrayElement} from '../tools/vanilla/array'\n\n\nconst REPLACE_READY = \"REPLACE_READY\";\nconst REPLACE_LOADING = \"REPLACE_LOADING\";\nconst REPLACE_WORKING = \"REPLACE_WORKING\";\nconst REPLACE_AUTHORITY = \"REPLACE_AUTHORITY\";\n\nconst REPLACE_DATA = \"REPLACE_DATA\";\n\n\nconst ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\nconst REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\n\nconst ADD_RESULT = \"ADD_RESULT\";\nconst DELETE_RESULT = \"DELETE_RESULT\";\n\nconst REPLACE_PLAYER_TAGS = \"REPLACE_PLAYER_TAGS\";\nconst REPLACE_PLAYER_STATUS = \"REPLACE_PLAYER_STATUS\";\nconst REPLACE_REGION = \"REPLACE_REGION\";\nconst REPLACE_NUMBER = \"REPLACE_NUMBER\";\n\n\nconst stateInitial = { \n    \n    ready : {\n      planTeam: false\n    }\n    \n    ,loading : {\n      planTeam: false\n    }\n    \n    \n    ,working : {\n      createPlan: false\n      \n      ,addPlayer: false\n      ,putPlayerMmr: false\n      ,addPlayerToListPlayerEntry: false\n      ,addPlayerMmrStandardToListPlayerEntry: false\n    }\n    \n    ,notification : []\n    \n    \n    ,themeName: \"light\"\n    \n  \n    \n    \n    \n    \n    \n   \n    ,authority: {\n      team_generator: \"viewer\" // \"administrator\" \"viewer\"\n      , comp_gallery: \"viewer\" // \"master\" \"viewer\"\n    }\n    \n    \n    // team-generator\n    ,idPlanTeam: \"\"\n    ,planTeam: {\n      _id:\"_id\"\n      ,password:\"password\"\n      ,title:\"title\"\n      ,listResult:[]\n      ,listPlayerEntry: [\n        {\n          _id: \"test\"\n          , tags: []\n        }\n      ]\n      , option: {}\n    }\n    \n    \n    // comp-gallery\n    ,comp_gallery: {\n      \n      listComp : []  // searching\n      , vComp: {} // VIEW a comp\n      \n      , aComp: {} // ADD a comp\n    }\n    \n    // common\n    , hots: {\n      here\n    }\n    \n  };\n\n\n\nconst reducer = (\n  \n  // 기본값 설정\n  state = stateInitial, \n  \n  // 액션별로 새로운 state 반환하기\n  action) => {\n    \n  switch (action.type) {\n    \n    /*\n    case REPLACE_RERENDER:\n      return {\n      \t...state, \n      \trerender: {\n      \t  ...state.rerender\n      \t  ,[action.which]: getTimeStamp()\n      \t}\n      };\n      */\n      \n    case REPLACE_DATA:\n      \n      if ( (!!action.data) && (action.data.constructor === Array) ) {\n        return {\n      \t...state, \n      \t[action.which]: [...action.data]\n        }\n      }\n      \n      else if ( (!!action.data) && (action.data.constructor === Object) ) {\n        return {\n      \t...state, \n      \t[action.which]: {...action.data}\n        }\n      }\n      else {\n        return {\n        \t...state, \n        \t[action.which]: action.data\n        }\n      }\n      \n    case REPLACE_READY:\n      return {\n      \t...state, \n      \tready: {\n      \t  ...state.ready,\n      \t  [action.which]: action.true_false\n      \t}\n      };\n      \n    case REPLACE_LOADING:\n      return {\n      \t...state, \n      \tloading: {\n      \t  ...state.loading,\n      \t  [action.which]: action.true_false\n      \t}\n      };\n      \n    case REPLACE_WORKING:\n      return {\n      \t...state, \n      \tworking: {\n      \t  ...state.working,\n      \t  [action.which]: action.true_false\n      \t}\n      };\n      \n   case REPLACE_AUTHORITY:\n    return {\n    \t...state, \n    \tauthority: {\n    \t  ...state.authority,\n    \t  [action.which]: action.authority\n    \t}\n    };\n      \n    case ADD_NOTIFICATION:\n      \n      const listIdNotification = state.notification.map(element => element.idNotification); // list of idNotification\n      if ( !(listIdNotification.includes(action.idNotification)) ) {  // 기존에 동일한 아이디의 알림이 없어야 추가\n        return {\n      \t...state, \n      \t\n      \tnotification: [\n      \t  {\n      \t    situation: action.situation\n      \t    ,message: action.message\n      \t    ,idNotification: action.idNotification\n      \t  }\n      \t  , ...state.notification\n      \t]\n      \t\n        };\n      }\n      else {return state}\n      \n      \n    \n    case REMOVE_NOTIFICATION:\n      return {\n      \t...state, \n      \tnotification: state.notification.filter(element => element.idNotification !== action.idNotification)\n      };\n    \n    \n    case ADD_RESULT:\n      \n      // 같은 id의 result 가 이미 존재하면 그거 먼저 빼놓기\n      \n      const listResultAlreday = state.planTeam.listResult.filter(element => element._id === action.result._id);\n      const listResultOthers = state.planTeam.listResult.filter(element => element._id !== action.result._id);\n      \n    \n      const listResultAll = [action.result, ...listResultOthers];\n      \n      const listResultLocal = listResultAll.filter(element => element._id === \"local\");\n      const listResultNotLocal = listResultAll.filter(element => element._id !== \"local\");\n      \n      const listResultAllSorted = [...listResultLocal, ...listResultNotLocal];\n      \n      return {\n      \t...state, \n      \tplanTeam: {\n      \t  ...state.planTeam\n      \t  , listResult: [...listResultAllSorted]\n      \t}\n      } // return\n      \n      \n    case DELETE_RESULT:\n      \n      const listResultFiltered = state.planTeam.listResult.filter(element => element._id !== action.idResult);\n      \n      return {\n      \t...state, \n      \tplanTeam: {\n      \t  ...state.planTeam\n      \t  , listResult: [...listResultFiltered]\n      \t}\n      } // return\n      \n      \n    case REPLACE_REGION:\n      return {\n      \t...state, \n      \t\n      \tplanTeam: {\n      \t  ...state.planTeam\n      \t  , option: {\n      \t    ...state.planTeam.option\n      \t    , region: action.region\n      \t  }\n      \t}\n      \t\n      };\n      \n    case REPLACE_NUMBER:\n      \n      let whichNumber;\n      let valueCurrent;\n      \n      if (action.which === \"team\") {\n        whichNumber = \"numberTeams\"\n        valueCurrent = action.pairNumber[0];\n      }\n      else if (action.which === \"group\") {\n        whichNumber = \"numberGroups\"\n        valueCurrent = action.pairNumber[1];\n      }\n      \n      \n        \n      \n      if (action.how === \"center\") {\n        return {\n          ...state,\n          planTeam: {\n            ...state.planTeam\n        \t  , option: {\n        \t    ...state.planTeam.option\n        \t    , [whichNumber]: 0\n        \t  }\n          }\n        }\n      }\n      else if  (action.how === \"plus\") {\n        return {\n          ...state,\n          planTeam: {\n            ...state.planTeam\n        \t  , option: {\n        \t    ...state.planTeam.option\n        \t    , [whichNumber]: ( (state.planTeam.option)[whichNumber] + 1)\n        \t  }\n          }\n        }\n      }\n      else if  (action.how === \"minus\" && !(valueCurrent == 0)) {\n        return {\n          ...state,\n          planTeam: {\n            ...state.planTeam\n        \t  , option: {\n        \t    ...state.planTeam.option\n        \t    , [whichNumber]: ( (state.planTeam.option)[whichNumber] - 1)\n        \t  }\n          }\n        }\n      }\n      else if  (action.how === \"minus\" && (valueCurrent == 0)) {\n        return {\n          ...state,\n          planTeam: {\n            ...state.planTeam\n        \t  , option: {\n        \t    ...state.planTeam.option\n        \t    , [whichNumber]: 0\n        \t  }\n          }\n        }\n      }\n       \n      \n    case REPLACE_PLAYER_TAGS:\n      \n      const index1 = (state.planTeam.listPlayerEntry).findIndex( objPlayer => objPlayer._id === action.battletag);\n      \n      \n      return {\n        ...state, \n      \t\n      \tplanTeam: {\n      \t  ...state.planTeam\n      \t  \n      \t  , listPlayerEntry: state.planTeam.listPlayerEntry.map(\n      \t      objPlayer => (objPlayer._id === action.battletag)? \n      \t        {...objPlayer, tags:toggleArrayElement(state.planTeam.listPlayerEntry[index1][\"tags\"], action.tag, action.true_false) }\n      \t        : objPlayer\n      \t    )\n      \t}\n      }\n    \n    case REPLACE_PLAYER_STATUS:\n      \n\n      return {\n        ...state, \n      \t\n      \tplanTeam: {\n      \t  ...state.planTeam\n      \t  \n      \t  , listPlayerEntry: state.planTeam.listPlayerEntry.map(\n      \t      objPlayer => (objPlayer._id === action.battletag)? \n      \t        {...objPlayer, status:action.status }\n      \t        : objPlayer\n      \t    )\n      \t}\n      }\n      \n    default:\n      return state;\n  }\n};\n\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}