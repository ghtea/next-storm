{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/AddingPlayer.js\";\nimport dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Div, Input, Button } from '../styles/DefaultStyles';\nimport useInput from '../tools/hooks/useInput';\nimport { getTimeStamp } from '../tools/vanilla/time'; //import {ahr} from '../api';\n\n/*\ndotenv.config({ \n  path: './.env' \n});\n*/\n\nconst DivAddingPlayer = styled(Div)`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n`;\nconst DivId = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`;\nconst DivBody = styled(Div)`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`;\nconst DivInputAdd = styled(Div)`\n\n\theight: 2rem;\n\t\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`;\nconst InputBattletag = styled(Input)`\n\twidth: 160px;\n\theight: 100%;\n`;\nconst ButtonAddFirst = styled(Button)`\n  width: 60px;\n  height: 100%;\n`;\n\nconst AddingPlayer = ({\n  match,\n  location,\n  loading,\n  ready,\n  planTeam,\n  readPlanTeam,\n  addRemoveNotification,\n  notification\n}) => {\n  const idPlanTeam = match.params.idPlanTeam;\n  const inputBattletag = useInput(\"\");\n\n  const onClick_ButtonAdd = async event => {\n    if (inputBattletag.value) {\n      const battletag = inputBattletag.value;\n      let status = {};\n\n      try {\n        await axios.put(`${process.env.REACT_APP_URL_AHR}/PlayerMmr`, reqPutPlayerMmr(battletag));\n        addRemoveNotification(\"success\", \"player has been added!\", 2000);\n        status.mmr = true; // mmr 작업이 잘되었다고 표시\n      } catch (error) {\n        addRemoveNotification(\"error\", \"battletag is wrong\", 4000);\n        status.mmr = false; // mmr 작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n      }\n\n      if (status.mmr === true) {\n        try {\n          await axios.put(`${process.env.REACT_APP_URL_AHR}/PlanTeam`, reqAddPlayerToListPlayerEntry(idPlanTeam, battletag));\n        } catch (error) {//addRemoveNotification(\"error\", \"api of Parallel Storm is not working\", 5000);\n        }\n      }\n\n      inputBattletag.setValue(\"\"); // input value 초기화\n    } else {\n      // 애초에 battletag를 입력 안했다면.\n      console.log(\"type battletag first\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DivAddingPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \" Team Generator \"), /*#__PURE__*/React.createElement(DivId, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, \" \", `id: ${idPlanTeam}`, \" \")), /*#__PURE__*/React.createElement(DivBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DivInputAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(InputBattletag, Object.assign({}, inputBattletag, {\n    placeholder: \"battletag#1234\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(ButtonAdd, {\n    onClick: onClick_ButtonAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, \" Add \"))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    ready: state.ready,\n    loading: state.loading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingPlayer);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/AddingPlayer.js"],"names":["dotenv","React","styled","axios","connect","addRemoveNotification","NavLink","useHistory","Div","Input","Button","useInput","getTimeStamp","DivAddingPlayer","DivHeader","DivTitle","DivId","props","theme","color_weak","DivBody","DivInputAdd","InputBattletag","ButtonAddFirst","AddingPlayer","match","location","loading","ready","planTeam","readPlanTeam","notification","idPlanTeam","params","inputBattletag","onClick_ButtonAdd","event","value","battletag","status","put","process","env","REACT_APP_URL_AHR","reqPutPlayerMmr","mmr","error","reqAddPlayerToListPlayerEntry","setValue","console","log","mapStateToProps","state","mapDispatchToProps","dispatch","situation","message","time"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AAGA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AAEA,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,MAApB,QAAiC,yBAAjC;AAGA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAAQC,YAAR,QAA2B,uBAA3B,C,CAEA;;AACA;;;;;;AAMA,MAAMC,eAAe,GAAGX,MAAM,CAACM,GAAD,CAAM;;;;;;;;CAApC;AAWA,MAAMM,SAAS,GAAGZ,MAAM,CAACM,GAAD,CAAM;;;;;CAA9B;AAOA,MAAMO,QAAQ,GAAGb,MAAM,CAACM,GAAD,CAAM;;CAA7B;AAGA,MAAMQ,KAAK,GAAGd,MAAM,CAACM,GAAD,CAAM;WACfS,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,UAAW;CAD3C;AAKA,MAAMC,OAAO,GAAGlB,MAAM,CAACM,GAAD,CAAM;;;;;;;CAA5B;AASA,MAAMa,WAAW,GAAGnB,MAAM,CAACM,GAAD,CAAM;;;;;;;;;;;;;CAAhC;AAgBA,MAAMc,cAAc,GAAGpB,MAAM,CAACO,KAAD,CAAQ;;;CAArC;AAOA,MAAMc,cAAc,GAAGrB,MAAM,CAACQ,MAAD,CAAS;;;CAAtC;;AAUC,MAAMc,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA,KAA3B;AAAkCC,EAAAA,QAAlC;AAA4CC,EAAAA,YAA5C;AAA0DzB,EAAAA,qBAA1D;AAAiF0B,EAAAA;AAAjF,CAAD,KAAoG;AAExH,QAAMC,UAAU,GAAGP,KAAK,CAACQ,MAAN,CAAaD,UAAhC;AAEA,QAAME,cAAc,GAAGvB,QAAQ,CAAC,EAAD,CAA/B;;AAIA,QAAMwB,iBAAiB,GAAG,MAAOC,KAAP,IAAiB;AAEzC,QAAIF,cAAc,CAACG,KAAnB,EAA0B;AAGxB,YAAMC,SAAS,GAAGJ,cAAc,CAACG,KAAjC;AAEA,UAAIE,MAAM,GAAG,EAAb;;AAEA,UAAI;AACF,cAAMpC,KAAK,CAACqC,GAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAA5C,EAAyDC,eAAe,CAACN,SAAD,CAAxE,CAAN;AAEAjC,QAAAA,qBAAqB,CAAC,SAAD,EAAY,wBAAZ,EAAsC,IAAtC,CAArB;AACAkC,QAAAA,MAAM,CAACM,GAAP,GAAa,IAAb,CAJE,CAIiB;AAEpB,OAND,CAOA,OAAMC,KAAN,EAAa;AAEXzC,QAAAA,qBAAqB,CAAC,OAAD,EAAU,oBAAV,EAAgC,IAAhC,CAArB;AAEAkC,QAAAA,MAAM,CAACM,GAAP,GAAa,KAAb,CAJW,CAIS;AACrB;;AAID,UAAIN,MAAM,CAACM,GAAP,KAAe,IAAnB,EAAyB;AACvB,YAAI;AACF,gBAAM1C,KAAK,CAACqC,GAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,WAA5C,EAAwDI,6BAA6B,CAACf,UAAD,EAAaM,SAAb,CAArF,CAAN;AAED,SAHD,CAIA,OAAMQ,KAAN,EAAa,CACX;AAED;AACF;;AAEDZ,MAAAA,cAAc,CAACc,QAAf,CAAwB,EAAxB,EAlCwB,CAoCxB;AAED,KAtCD,MAsCO;AAAE;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AACF,GA3CD;;AAgDA,sBACA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAU,OAAMlB,UAAW,EAA3B,MAHF,CAFF,eAUC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD,oBAAoBE,cAApB;AAAoC,IAAA,WAAW,EAAC,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAEG,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAIC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFH,CAFF,CAVD,CADA;AAyBD,CAjFA;;AAsFD,SAASgB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLxB,IAAAA,KAAK,EAAEwB,KAAK,CAACxB,KADR;AAEJD,IAAAA,OAAO,EAAEyB,KAAK,CAACzB;AAFX,GAAP;AAID;;AAED,SAAS0B,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLjD,IAAAA,qBAAqB,EAAE,CAACkD,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,KAA8BH,QAAQ,CAAEjD,qBAAqB,CAACkD,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,CAAvB;AADxD,GAAP;AAGD,C,CAED;;;AACA,eAAerD,OAAO,CAAC+C,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C7B,YAA7C,CAAf","sourcesContent":["import dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\n\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport {Div, Input, Button} from '../styles/DefaultStyles';\n\n\nimport useInput from '../tools/hooks/useInput';\nimport {getTimeStamp} from '../tools/vanilla/time';\n\n//import {ahr} from '../api';\n/*\ndotenv.config({ \n  path: './.env' \n});\n*/\n\nconst DivAddingPlayer = styled(Div)`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\n\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n`\nconst DivId = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`\n\n\nconst DivBody = styled(Div)`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`\n\nconst DivInputAdd = styled(Div)`\n\n\theight: 2rem;\n\t\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`\n\n\nconst InputBattletag = styled(Input)`\n\twidth: 160px;\n\theight: 100%;\n`\n\n\n\nconst ButtonAddFirst = styled(Button)`\n  width: 60px;\n  height: 100%;\n`\n\n\n\n\n\n\n const AddingPlayer = ({match, location, loading, ready, planTeam, readPlanTeam, addRemoveNotification, notification}) => {\n\n  const idPlanTeam = match.params.idPlanTeam;\n  \n  const inputBattletag = useInput(\"\");\n  \n  \n  \n  const onClick_ButtonAdd = async (event) => {\n    \n    if (inputBattletag.value) {\n       \n        \n      const battletag = inputBattletag.value;\n      \n      let status = {};\n      \n      try {    \n        await axios.put (`${process.env.REACT_APP_URL_AHR}/PlayerMmr`, reqPutPlayerMmr(battletag));\n        \n        addRemoveNotification(\"success\", \"player has been added!\", 2000);\n        status.mmr = true; // mmr 작업이 잘되었다고 표시\n        \n      }\n      catch(error) {\n        \n        addRemoveNotification(\"error\", \"battletag is wrong\", 4000);\n\n        status.mmr = false; // mmr 작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n      }\n      \n      \n      \n      if (status.mmr === true) {\n        try {\n          await axios.put( `${process.env.REACT_APP_URL_AHR}/PlanTeam`, reqAddPlayerToListPlayerEntry(idPlanTeam, battletag) ); \n          \n        }\n        catch(error) {\n          //addRemoveNotification(\"error\", \"api of Parallel Storm is not working\", 5000);\n          \n        }\n      }\n      \n      inputBattletag.setValue(\"\");\n      \n      // input value 초기화\n      \n    } else { // 애초에 battletag를 입력 안했다면.\n      console.log(\"type battletag first\")\n    }\n  }\n  \n  \n  \n  \n  return (\n  <DivAddingPlayer>\n        \n    <DivHeader>\n      <DivTitle> Team Generator </DivTitle>\n      \n      <DivId> {`id: ${idPlanTeam}`} </DivId>\n    </DivHeader>\n    \n    \n    \n   <DivBody>\n\n\t    <DivInputAdd>\n\t      <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n        <ButtonAdd onClick = {onClick_ButtonAdd} > Add </ButtonAdd>\n\t    </DivInputAdd>\n\t    \n   </DivBody>\n  \n  </DivAddingPlayer>\n        \n  \n  )\n\n}\n  \n\t  \n\n\nfunction mapStateToProps(state) { \n  return { \n    ready: state.ready \n    ,loading: state.loading\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingPlayer);"]},"metadata":{},"sourceType":"module"}