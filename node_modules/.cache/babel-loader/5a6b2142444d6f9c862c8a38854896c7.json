{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/routes/TeamGeneratorDoor.js\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\nimport { replaceRerender } from \"../redux/store\";\nimport { replaceWorking } from \"../redux/store\";\nimport { replaceLoading } from \"../redux/store\";\nimport { replaceReady } from \"../redux/store\";\nimport { replaceData } from \"../redux/store\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport { Div, Input, Button } from '../styles/DefaultStyles'; //import Player from '../components/Player'\n\nimport CreatingPlan from '../components/TeamGenerator/CreatingPlan';\nimport SearchingPlan from '../components/TeamGenerator/SearchingPlan';\nimport AddingPlayer from '../components/TeamGenerator/AddingPlayer';\nimport Entry from '../components/TeamGenerator/Entry';\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  @media (max-width: ${props => props.theme.media.mid_big - 1}px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"A\"\n      \"B\"\n      \"C\"\n      \"D\"\n  }\n \n\n  @media (min-width:  ${props => props.theme.media.mid_big}px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 1fr;\n    grid-template-areas: \n      \"A B\"\n      \"C D\";\n  }\n\n`;\nconst DivA = styled(Div)`\n  grid-area: A;\n`;\nconst DivB = styled(Div)`\n  grid-area: B;\n`;\nconst DivC = styled(Div)`\n  grid-area: C;\n`;\nconst DivD = styled(Div)`\n  grid-area: D;\n`; // https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\n\nconst TeamGeneratorDoor = ({\n  match,\n  location,\n  rerenderPlanTeam,\n  loading,\n  ready,\n  authority,\n  replaceData,\n  idPlanTeam,\n  planTeam,\n  readPlanTeam,\n  addRemoveNotification,\n  replaceReady,\n  replaceLoading\n}) => {\n  //const [rerender, SetRerender] = useState(\"\");\n  const onAccess = async () => {\n    if (match.path === \"/team-generator/:idPlanTeam\") {\n      const idPlanTeamTrying = match.params.idPlanTeam;\n\n      try {\n        // below includes replaceLoading, etc...\n        readPlanTeam(idPlanTeamTrying);\n      } catch (error) {\n        addRemoveNotification(\"error\", \"failed to load plan\", 4000);\n      }\n\n      if (ready.planTeam === true) {\n        const idPlanTeamTrying = match.params.idPlanTeam;\n        const query = queryString.parse(location.search);\n        const passwordPlanTeamTrying = query.pw;\n        replaceData(\"idPlanTeam\", idPlanTeamTrying); // if password is right\n\n        if (passwordPlanTeamTrying === planTeam.password) {\n          replaceData(\"authority\", \"administrator\");\n          addRemoveNotification(\"success\", \"welcome administrator!\", 2000); //replaceRerender(\"planTeam\") // planTeam 에 의존하는 것들을 다시 렌더링하자는 뜻 doesn't work...\n        } // if password is wrong\n        else {\n            replaceData(\"authority\", \"viewer\");\n            addRemoveNotification(\"error\", \"password is wrong\", 4000);\n          }\n      }\n    }\n  };\n\n  useEffect(() => {\n    onAccess();\n  }, [location.pathname]);\n  return /*#__PURE__*/React.createElement(DivTeamGenerator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivA, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CreatingPlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DivC, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchingPlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })));\n}; //TeamGenerator\n\n\nfunction mapStateToProps(state) {\n  return {\n    planTeam: state.planTeam,\n    idPlanTeam: state.idPlanTeam,\n    rerenderPlanTeam: state.rerender.planTeam,\n    ready: state.ready,\n    loading: state.loading,\n    authority: state.authority\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    readPlanTeam: idPlanTeam => dispatch(readPlanTeam(idPlanTeam)) //,replaceRerender: (which) => dispatch(replaceRerender(which))\n    ,\n    replaceData: (which, newData) => dispatch(replaceData(which, newData)),\n    replaceLoading: (which, true_false) => dispatch(replaceLoading(which, true_false)),\n    replaceReady: (which, true_false) => dispatch(replaceReady(which, true_false)),\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGeneratorDoor);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/routes/TeamGeneratorDoor.js"],"names":["React","useEffect","styled","axios","queryString","connect","readPlanTeam","replaceRerender","replaceWorking","replaceLoading","replaceReady","replaceData","addRemoveNotification","Div","Input","Button","CreatingPlan","SearchingPlan","AddingPlayer","Entry","useAxiosGet","useInput","DivTeamGenerator","props","theme","media","mid_big","DivA","DivB","DivC","DivD","TeamGeneratorDoor","match","location","rerenderPlanTeam","loading","ready","authority","idPlanTeam","planTeam","onAccess","path","idPlanTeamTrying","params","error","query","parse","search","passwordPlanTeamTrying","pw","password","pathname","mapStateToProps","state","rerender","mapDispatchToProps","dispatch","which","newData","true_false","situation","message","time"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport queryString from 'query-string';\n\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\n\nimport {replaceRerender} from \"../redux/store\";\nimport {replaceWorking} from \"../redux/store\";\nimport {replaceLoading} from \"../redux/store\";\nimport {replaceReady} from \"../redux/store\";\nimport {replaceData} from \"../redux/store\";\n\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\nimport {Div, Input, Button} from '../styles/DefaultStyles';\n//import Player from '../components/Player'\n\n\n\nimport CreatingPlan from '../components/TeamGenerator/CreatingPlan';\nimport SearchingPlan from '../components/TeamGenerator/SearchingPlan';\n\nimport AddingPlayer from '../components/TeamGenerator/AddingPlayer';\nimport Entry from '../components/TeamGenerator/Entry';\n\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\n\n\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"A\"\n      \"B\"\n      \"C\"\n      \"D\"\n  }\n \n\n  @media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 1fr;\n    grid-template-areas: \n      \"A B\"\n      \"C D\";\n  }\n\n`;\n\n\nconst DivA = styled(Div)`\n  grid-area: A;\n`\nconst DivB = styled(Div)`\n  grid-area: B;\n`\nconst DivC = styled(Div)`\n  grid-area: C;\n`\nconst DivD = styled(Div)`\n  grid-area: D;\n`\n\n\n\n// https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\nconst TeamGeneratorDoor = ({match, location, rerenderPlanTeam, loading, ready, authority, replaceData, idPlanTeam, planTeam, readPlanTeam, addRemoveNotification, replaceReady, replaceLoading}) => {\n  \n  //const [rerender, SetRerender] = useState(\"\");\n  \n  const onAccess = async () => {\n    \n    if (match.path === \"/team-generator/:idPlanTeam\") {\n      \n      const idPlanTeamTrying = match.params.idPlanTeam;\n\n      \n      try {\n        // below includes replaceLoading, etc...\n        readPlanTeam(idPlanTeamTrying);\n      }\n      catch (error) {\n        addRemoveNotification(\"error\", \"failed to load plan\", 4000);\n      }\n      \n      \n      if (ready.planTeam === true) {\n      const idPlanTeamTrying = match.params.idPlanTeam;\n      const query = queryString.parse(location.search);\n      const passwordPlanTeamTrying = query.pw;\n  \n      replaceData(\"idPlanTeam\", idPlanTeamTrying);\n      \n      \n      // if password is right\n      if (passwordPlanTeamTrying === planTeam.password) {\n        replaceData(\"authority\", \"administrator\");\n        addRemoveNotification(\"success\", \"welcome administrator!\", 2000);\n        \n        //replaceRerender(\"planTeam\") // planTeam 에 의존하는 것들을 다시 렌더링하자는 뜻 doesn't work...\n      }\n      \n      // if password is wrong\n      else {\n        replaceData(\"authority\", \"viewer\");\n        addRemoveNotification(\"error\", \"password is wrong\", 4000);\n      }\n    }\n      \n      \n    }\n  }  \n  \n  useEffect( () => {onAccess()},[location.pathname]);\n  \n  \n    \n    return (\n    \n    <DivTeamGenerator>\n      \n      <DivA>\n        <CreatingPlan /> \n      </DivA>\n      \n      <DivC>\n        <SearchingPlan />\n      </DivC>\n    \n    </DivTeamGenerator>\n    )\n  \n\n    \n} //TeamGenerator\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    planTeam: state.planTeam\n    ,idPlanTeam: state.idPlanTeam\n    ,rerenderPlanTeam: state.rerender.planTeam\n    ,ready: state.ready \n    ,loading: state.loading\n    ,authority: state.authority\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n    //,replaceRerender: (which) => dispatch(replaceRerender(which))\n    ,replaceData: (which, newData) => dispatch(replaceData(which, newData))\n    ,replaceLoading: (which, true_false) => dispatch(replaceLoading(which, true_false)) \n    ,replaceReady: (which, true_false) => dispatch(replaceReady(which, true_false)) \n    ,addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGeneratorDoor);\n"]},"metadata":{},"sourceType":"module"}