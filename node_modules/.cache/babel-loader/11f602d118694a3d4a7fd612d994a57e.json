{"ast":null,"code":"import _taggedTemplateLiteral from\"/usr/projects/parallel-storm/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  \\n  @media (max-width: \",\"px ) {\\n    margin-top: 50px; /* height of sub */\\n  \\t\\n\\t}\\n \\n\\t @media (min-width:  \",\"px) {\\n\\t  margin-left: 120px; /* width of sub */\\n\\t \\n\\t\\t\\n\\t }\\n  \\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect}from'react';import{BrowserRouter,Route,Switch}from\"react-router-dom\";import styled from'styled-components';import{connect}from\"react-redux\";import _replaceTheme from\"./redux/thunks/replaceTheme\";import Sub from\"./routes/Sub\";import Notification from\"./routes/Notification\";import Home from\"./routes/Home\";import TeamGenerator from\"./routes/TeamGenerator\";import TeamGeneratorDoor from\"./routes/TeamGeneratorDoor\";import{ThemeProvider}from'styled-components';import themes from\"./styles/themes\";import{GlobalStyle,Div}from'./styles/DefaultStyles';import fonts from'./styles/fonts';// env 사용할때 각변수 앞에 REACT_APP_ 를 붙혀야한다 https://hello-bryan.tistory.com/134\nvar DivContent=styled(Div)(_templateObject(),function(props){return props.theme.media.mid_big-1;},function(props){return props.theme.media.mid_big;});var isDarkMode=function isDarkMode(){if(window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches){return true;}else{return false;}};var App=function App(_ref){var themeName=_ref.themeName,replaceTheme=_ref.replaceTheme,notification=_ref.notification;/*\n  \n  */ /*\n  constructor(props){\n      super(props);\n      \n      this.state = {\n          themeApp: 'light'\n      };\n      \n  }\n  */useEffect(function(){console.log(notification);var themeDeviceStr=isDarkMode()?'dark':'light';replaceTheme(themeDeviceStr);},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ThemeProvider,{theme:themes[themeName]},/*#__PURE__*/React.createElement(GlobalStyle,null),/*#__PURE__*/React.createElement(BrowserRouter,null,/*#__PURE__*/React.createElement(Route,{path:\"/\",component:Sub}),/*#__PURE__*/React.createElement(Route,{path:\"/\",component:Notification}),/*#__PURE__*/React.createElement(DivContent,null,/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true,component:Home}),/*#__PURE__*/React.createElement(Route,{path:\"/team-generator\",exact:true,component:TeamGeneratorDoor}),/*#__PURE__*/React.createElement(Route,{path:\"/team-generator/:idPlanTeam\",component:TeamGenerator}))))));};function mapStateToProps(state){return{themeName:state.themeName,notification:state.notification};}function mapDispatchToProps(dispatch){return{replaceTheme:function replaceTheme(themeName){return dispatch(_replaceTheme(themeName));}};}// Home 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/App.js"],"names":["React","useEffect","BrowserRouter","Route","Switch","styled","connect","replaceTheme","Sub","Notification","Home","TeamGenerator","TeamGeneratorDoor","ThemeProvider","themes","GlobalStyle","Div","fonts","DivContent","props","theme","media","mid_big","isDarkMode","window","matchMedia","matches","App","themeName","notification","console","log","themeDeviceStr","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nimport { connect } from \"react-redux\";\nimport replaceTheme from \"./redux/thunks/replaceTheme\";\n\nimport Sub from \"./routes/Sub\";\nimport Notification from \"./routes/Notification\";\nimport Home from \"./routes/Home\";\nimport TeamGenerator from \"./routes/TeamGenerator\";\nimport TeamGeneratorDoor from \"./routes/TeamGeneratorDoor\";\n\nimport {ThemeProvider } from 'styled-components';\nimport themes from \"./styles/themes\"\nimport { GlobalStyle, Div} from './styles/DefaultStyles';\nimport fonts from './styles/fonts';\n\n\n// env 사용할때 각변수 앞에 REACT_APP_ 를 붙혀야한다 https://hello-bryan.tistory.com/134\n\nconst DivContent = styled(Div)`\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    margin-top: 50px; /* height of sub */\n  \t\n\t}\n \n\t @media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n\t  margin-left: 120px; /* width of sub */\n\t \n\t\t\n\t }\n  \n`;\n\n\nconst isDarkMode = () => {\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return true;\n  }\n  else {\n    return false;\n  }\n}  \n\n\nconst App = ({themeName, replaceTheme, notification}) => {\n  \n  /*\n  \n  */\n  \n  /*\n  constructor(props){\n      super(props);\n      \n      this.state = {\n          themeApp: 'light'\n      };\n      \n  }\n  */\n  useEffect(()=>{\n    console.log(notification);\n    const themeDeviceStr = isDarkMode() ? 'dark' : 'light';\n    replaceTheme(themeDeviceStr);\n  }, [])\n  \n  \n  return (\n    <>\n    \n    <ThemeProvider theme={themes[themeName]}>\n    \n    \n    <GlobalStyle/>\n    \n    <BrowserRouter>\n      \n      \n      <Route path=\"/\" component={Sub} />\n      <Route path=\"/\" component={Notification} />\n      \n      <DivContent>\n      <Switch >\n      <Route path=\"/\" exact={true} component={Home} />\n      \n      <Route path=\"/team-generator\" exact={true} component={TeamGeneratorDoor} />\n      <Route path=\"/team-generator/:idPlanTeam\"  component={TeamGenerator} />\n      \n      </Switch >\n      </DivContent>\n      \n    </BrowserRouter>\n    \n    \n    </ThemeProvider>\n    </>\n  );\n\n}\n\n\nfunction mapStateToProps(state) { \n  return { \n    themeName: state.themeName,\n    notification: state.notification\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    replaceTheme: (themeName) => dispatch(replaceTheme(themeName)) \n  }; \n}\n\n// Home 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}