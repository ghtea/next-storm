{"ast":null,"code":"export const toggleArrayElement = (array, value, true_false) => {\n  let index = array.indexOf(value);\n\n  if (true_false) {\n    // value should exist in array now\n    if (index === -1) {\n      array.push(value);\n    } else {}\n  } else {\n    // value should not exist in array now\n    if (index === -1) {} else {\n      array.splice(index, 1);\n    }\n  }\n\n  return array;\n};\n\nfunction getRandom(arr, n) {\n  var result = new Array(n),\n      len = arr.length,\n      taken = new Array(len);\n  if (n > len) throw new RangeError(\"getRandom: more elements taken than available\");\n\n  while (n--) {\n    var x = Math.floor(Math.random() * len);\n    result[n] = arr[x in taken ? taken[x] : x];\n    taken[x] = --len in taken ? taken[len] : len;\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/tools/vanilla/array.js"],"names":["toggleArrayElement","array","value","true_false","index","indexOf","push","splice","getRandom","arr","n","result","Array","len","length","taken","RangeError","x","Math","floor","random"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,UAAf,KAA8B;AAC5D,MAAIC,KAAK,GAAGH,KAAK,CAACI,OAAN,CAAcH,KAAd,CAAZ;;AAEF,MAAIC,UAAJ,EAAgB;AAAE;AACf,QAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdH,MAAAA,KAAK,CAACK,IAAN,CAAWJ,KAAX;AACH,KAFD,MAEO,CAAE;AACX,GAJD,MAKK;AAAE;AACJ,QAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB,CAAE,CAApB,MACK;AACDH,MAAAA,KAAK,CAACM,MAAN,CAAaH,KAAb,EAAoB,CAApB;AACH;AACH;;AAEC,SAAOH,KAAP;AACH,CAhBM;;AAmBP,SAASO,SAAT,CAAmBC,GAAnB,EAAwBC,CAAxB,EAA2B;AACvB,MAAIC,MAAM,GAAG,IAAIC,KAAJ,CAAUF,CAAV,CAAb;AAAA,MACIG,GAAG,GAAGJ,GAAG,CAACK,MADd;AAAA,MAEIC,KAAK,GAAG,IAAIH,KAAJ,CAAUC,GAAV,CAFZ;AAGA,MAAIH,CAAC,GAAGG,GAAR,EACI,MAAM,IAAIG,UAAJ,CAAe,+CAAf,CAAN;;AACJ,SAAON,CAAC,EAAR,EAAY;AACR,QAAIO,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,GAA3B,CAAR;AACAF,IAAAA,MAAM,CAACD,CAAD,CAAN,GAAYD,GAAG,CAACQ,CAAC,IAAIF,KAAL,GAAaA,KAAK,CAACE,CAAD,CAAlB,GAAwBA,CAAzB,CAAf;AACAF,IAAAA,KAAK,CAACE,CAAD,CAAL,GAAW,EAAEJ,GAAF,IAASE,KAAT,GAAiBA,KAAK,CAACF,GAAD,CAAtB,GAA8BA,GAAzC;AACH;;AACD,SAAOF,MAAP;AACH","sourcesContent":["export const toggleArrayElement = (array, value, true_false) => {\n    let index = array.indexOf(value);\n\t\t\n\t\tif (true_false) { // value should exist in array now\n\t    if (index === -1) {\n\t        array.push(value);\n\t    } else {}\n\t\t}\n\t\telse { // value should not exist in array now\n\t    if (index === -1) {} \n\t    else {\n\t        array.splice(index, 1);\n\t    }\n\t\t}\n    \n    return array;\n}\n\n\nfunction getRandom(arr, n) {\n    var result = new Array(n),\n        len = arr.length,\n        taken = new Array(len);\n    if (n > len)\n        throw new RangeError(\"getRandom: more elements taken than available\");\n    while (n--) {\n        var x = Math.floor(Math.random() * len);\n        result[n] = arr[x in taken ? taken[x] : x];\n        taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n}"]},"metadata":{},"sourceType":"module"}