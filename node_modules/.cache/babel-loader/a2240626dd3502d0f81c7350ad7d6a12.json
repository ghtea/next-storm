{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/Result.js\";\nimport dotenv from 'dotenv';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios'; //import path from 'path'\n\nimport { NavLink, useParams } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { addResult } from \"../../redux/store\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\"; // https://reacttraining.com/blog/react-router-v5-1/\n\nimport { Div, Table, Tr, Td } from '../../styles/DefaultStyles';\nimport IconLoading from '../../svgs/IconLoading';\nimport IconConfirmed from '../../svgs/IconConfirmed';\nimport IconPending from '../../svgs/IconPending';\nimport IconInfo from '../../svgs/IconInfo'; // 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\n//dotenv.config() ;\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\n\nconst DivResult = styled(Div)`\n  width: 100%;\n  max-width: 600px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n  padding-bottom: 10px;\n`;\nconst DivTitle = styled(Div)`\n  margin-top: 10px;\n  font-size: 1.2rem;\n  font-weight: bold;\n  \n  margin-bottom: 10px;\n`;\nconst DivTableEntry = styled(Div)`\n  \n  padding-left: 20px;\n  padding-right: 20px;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n`;\nconst DivIconLoading = styled(Div)`\n  margin-top: 10px;\n`;\n/*\ndisplay:grid;\n*/\n\nconst DivRowHeader = styled(Div)`\n  color: ${props => props.theme.color_weak};\n\n  display: grid;\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; /* min entire = 400 - 20*2 = 360 */\n  grid-template-rows: 24px;\n  \n  & > Div {\n    font-weight: thin;\n  }\n  //background-color: ${props => props.theme.COLOR_normal};\n   \n  //border-radius:  8px;\n`;\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; // min entire = 400 - 20*2 = 360\n  grid-template-rows: 40px;\n  \n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  &:last-child {\n    border-bottom-style: none;\n  }\n`;\n/*\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr 60px ${30*4}px 40px 40px; \n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(2) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  10px;\n    \n    border-bottom-style: none;\n    \n  }\n\n*/\n\nconst DivBattletagHeader = styled(Div)`\n  padding-left: 10px;\n  \n  display: block;\n  text-algin: left;\n`;\nconst DivBattletag = styled(Div)`\n  padding-left: 10px;\n  display: block;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst RowPlayer = ({\n  battletag,\n  mmr,\n  statusPlayer\n}) => {\n  useEffect(() => {\n    console.log(\"Each row has been rerendered\");\n  });\n  const IconStatus = {\n    pending: /*#__PURE__*/React.createElement(IconPending, {\n      width: \"20px\",\n      height: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 14\n      }\n    }),\n    confirmed: /*#__PURE__*/React.createElement(IconConfirmed, {\n      width: \"20px\",\n      height: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(DivRowPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivBattletag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, battletag), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"(roles)\"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, mmr), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, IconStatus[statusPlayer]), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconInfo, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Result = ({\n  listPlayerEntry,\n  option,\n  listResult,\n  addResult\n}) => {\n  const [result, setResult] = useState(0); //useEffect(()=>{console.log(\"Entry has been rerendered\")})\n  ///\n\n  const numberTeams = 2;\n\n  for (var i = 0; i < numberTeams; i++) {} // first, check number of players\n\n\n  let listPlayer = Object.keys(listPlayerEntry).map(element => listPlayerEntry[element]._id); // list of battletags\n\n  const listPlayerConfirmed = listPlayer.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n    return objPlayer.status === \"confirmed\";\n  });\n  const listPlayerConfirmedLeader = listPlayerConfirmed.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n    return objPlayer.tags.includes(\"leader\");\n  });\n  const listPlayerConfirmedNonLeader = listPlayerConfirmed.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n    return !objPlayer.tags.includes(\"leader\");\n  });\n  const listPlayerPending = listPlayer.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n    return objPlayer.status === \"pending\";\n  });\n  const listPlayerShowing = [...listPlayerConfirmedLeader, ...listPlayerConfirmedNonLeader, ...listPlayerPending]; ///\n  //let listPlayer = (Object.keys(listPlayerEntry)).map(element=>listPlayerEntry[element]._id); // list of battletags\n\n  let orderPlayer;\n  let objTeams = {};\n  let listTeamName = [];\n  const region = option.region; // 1. confirmed - 2. leader - 3. less roles player(2, 1) - 4. rest\n\n  const onClick_generateTeams = event => {\n    orderPlayer = listPlayer.sort((player1, player2) => {\n      // mmr 높은순으로 list of battletags\n      const objPlayer1 = listPlayerEntry.find(objPlayer => objPlayer._id === player1);\n      const objPlayer2 = listPlayerEntry.find(objPlayer => objPlayer._id === player2);\n      return objPlayer2.mmr.standard.region - objPlayer1.mmr.standard.region; // ex 3333, 222, 1111\n    });\n    const listPlayerConfirmed = orderPlayer.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n      return objPlayer.status === \"confirmed\";\n    });\n    const listPlayerConfirmedLeader = listPlayerConfirmed.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n      return objPlayer.tags.includes(\"leader\");\n    });\n    const listPlayerConfirmedNonLeader = listPlayerConfirmed.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n      return !objPlayer.tags.includes(\"leader\");\n    });\n    const listPlayerLeader = orderPlayer.filter(battletagPlayer => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletagPlayer);\n      return objPlayer.tags.includes(\"leader\");\n    });\n    console.log(listPlayerLeader); //orderPlayer = \n    //console.log(orderPlayer)\n\n    for (var i = 0; i < numberTeams; i++) {\n      const teamName = `team${i + 1}`;\n      objTeams[teamName] = `it is ${teamName}`;\n      listTeamName.push(teamName);\n    }\n\n    setResult(result + 1);\n    console.log(result);\n    console.log(objTeams);\n    /*\n    {\n      _id: String,\n      listPlayerBattletag: [String],\n      name: String,\n      group: String\n    }\n    */\n\n    let team1 = {\n      _id: Date.now(),\n      listPlayerBattletag: [\"mbcat#1234\", \"mbcat#1703\"],\n      name: \"dragon team\"\n    };\n    let resultTeam = {\n      added: Date.now(),\n      listTeam: [team1]\n    };\n    addResult(resultTeam);\n  };\n\n  return /*#__PURE__*/React.createElement(DivResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }\n  }, \" Result \"), /*#__PURE__*/React.createElement(Div, {\n    onClick: onClick_generateTeams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 5\n    }\n  }, \"button\"), result && listTeamName.map(element => /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, \" \", element, \" \")));\n};\n/*\n{(readyPlanTeam)? orderPlayerEntry[0][\"_id\"] : \"loading...\" }\n    {(readyPlanTeam)? orderPlayerEntry[9][\"_id\"] : \"loading...\"}\n*/\n\n/*\n\n    <DivTableEntry> \n    \n    <DivRowHeader> \n      <DivBattletagHeader>  battletag </DivBattletagHeader>\n      <Div> roles </Div>\n      <Div> mmr </Div>\n      <Div> status </Div>\n      \n       \n      <Div> </Div>\n    </DivRowHeader>\n    \n    { \n      ( listPlayerEntry ).map( (player, i) =>\n      \n        < RowPlayer \n          key={ `${player._id}_${(new Date().getTime()).toString()}` }\n          battletag={player._id} \n          mmr={player.mmr.standard.NA} \n          statusPlayer={player.status} \n        /> \n      )\n    }\n      \n    </DivTableEntry>\n    \n*/\n//<button onClick= {refetch} > Refectch </button>\n\n\nfunction mapStateToProps(state) {\n  return {\n    listPlayerEntry: state.planTeam.listPlayerEntry,\n    option: state.planTeam.option,\n    listResult: state.planTeam.listResult //listPlayerEntry: [...state.planTeam.listPlayerEntry]\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\n    //,readyPlanTeam: state.ready.planTeam\n    //,loading: state.loading\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addResult: resultTeam => dispatch(addResult(resultTeam))\n  };\n} // TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/Result.js"],"names":["dotenv","React","useState","useEffect","styled","axios","NavLink","useParams","connect","addResult","readPlanTeam","Div","Table","Tr","Td","IconLoading","IconConfirmed","IconPending","IconInfo","DivResult","DivTitle","DivTableEntry","DivIconLoading","DivRowHeader","props","theme","color_weak","COLOR_normal","DivRowPlayer","color_very_weak","DivBattletagHeader","DivBattletag","RowPlayer","battletag","mmr","statusPlayer","console","log","IconStatus","pending","confirmed","Result","listPlayerEntry","option","listResult","result","setResult","numberTeams","i","listPlayer","Object","keys","map","element","_id","listPlayerConfirmed","filter","objPlayer","find","status","listPlayerConfirmedLeader","tags","includes","listPlayerConfirmedNonLeader","listPlayerPending","listPlayerShowing","orderPlayer","objTeams","listTeamName","region","onClick_generateTeams","event","sort","player1","player2","objPlayer1","objPlayer2","standard","listPlayerLeader","battletagPlayer","teamName","push","team1","Date","now","listPlayerBattletag","name","resultTeam","added","listTeam","mapStateToProps","state","planTeam","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\nimport React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n//import path from 'path'\nimport { NavLink, useParams } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\n\nimport {addResult} from \"../../redux/store\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\n// https://reacttraining.com/blog/react-router-v5-1/\n\nimport {Div, Table, Tr, Td} from '../../styles/DefaultStyles';\n\nimport IconLoading from '../../svgs/IconLoading'\n\nimport IconConfirmed from '../../svgs/IconConfirmed'\nimport IconPending from '../../svgs/IconPending'\nimport IconInfo from '../../svgs/IconInfo'\n\n// 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\n//dotenv.config() ;\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\n\nconst DivResult = styled(Div)`\n  width: 100%;\n  max-width: 600px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n  padding-bottom: 10px;\n`;\n\nconst DivTitle = styled(Div)`\n  margin-top: 10px;\n  font-size: 1.2rem;\n  font-weight: bold;\n  \n  margin-bottom: 10px;\n`\n\n\nconst DivTableEntry = styled(Div)`\n  \n  padding-left: 20px;\n  padding-right: 20px;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n`\n\nconst DivIconLoading = styled(Div)`\n  margin-top: 10px;\n`\n\n/*\ndisplay:grid;\n*/\n\nconst DivRowHeader = styled(Div)`\n  color: ${props => props.theme.color_weak};\n\n  display: grid;\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; /* min entire = 400 - 20*2 = 360 */\n  grid-template-rows: 24px;\n  \n  & > Div {\n    font-weight: thin;\n  }\n  //background-color: ${props => props.theme.COLOR_normal};\n   \n  //border-radius:  8px;\n`\n\n\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; // min entire = 400 - 20*2 = 360\n  grid-template-rows: 40px;\n  \n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  &:last-child {\n    border-bottom-style: none;\n  }\n`\n\n/*\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr 60px ${30*4}px 40px 40px; \n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(2) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  10px;\n    \n    border-bottom-style: none;\n    \n  }\n\n*/\n\n\nconst DivBattletagHeader = styled(Div)`\n  padding-left: 10px;\n  \n  display: block;\n  text-algin: left;\n`\n\nconst DivBattletag = styled(Div)`\n  padding-left: 10px;\n  display: block;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\n\n\n\nconst RowPlayer = ({battletag, mmr, statusPlayer}) => {\n  \n  useEffect(()=>{console.log(\"Each row has been rerendered\")})\n  \n  const IconStatus = {\n    pending: <IconPending width={\"20px\"} height={\"20px\"} />\n    ,confirmed: <IconConfirmed width={\"20px\"} height={\"20px\"} />\n  };\n\n  return (\n    \n    <DivRowPlayer >\n      \n      <DivBattletag> \n        {battletag}\n      </DivBattletag>\n      \n      <Div> \n        (roles)\n      </Div>\n      \n      \n      <Div> \n        {mmr}\n      </Div>\n       \n      <Div> \n        {IconStatus[statusPlayer]}\n      </Div>\n        \n       \n      <Div> \n        <IconInfo\n          width={\"20px\"}\n          height={\"20px\"}\n        /> \n      </Div>\n         \n    </DivRowPlayer>\n  )\n}\n\n\n\n\n\n\nconst Result = ({\n  listPlayerEntry, option, listResult\n  , addResult\n  \n}) => {\n  \n  const [result, setResult] = useState(0);\n  //useEffect(()=>{console.log(\"Entry has been rerendered\")})\n  \n  ///\n  const numberTeams = 2;\n  \n  for (var i =0; i<numberTeams; i++) {\n    \n  }\n  \n  \n  \n  // first, check number of players\n  let listPlayer = (Object.keys(listPlayerEntry)).map(element=>listPlayerEntry[element]._id); // list of battletags\n  \n  \n  const listPlayerConfirmed = listPlayer.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\n    return objPlayer.status === \"confirmed\"\n  } )\n  \n  const listPlayerConfirmedLeader = listPlayerConfirmed.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\n    return objPlayer.tags.includes(\"leader\");\n  } )\n  \n  const listPlayerConfirmedNonLeader= listPlayerConfirmed.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\n    return !(objPlayer.tags.includes(\"leader\"));\n  } )\n  \n\n  const listPlayerPending = listPlayer.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\n    return objPlayer.status === \"pending\"\n  } )\n  \n  const listPlayerShowing = [...listPlayerConfirmedLeader, ...listPlayerConfirmedNonLeader, ...listPlayerPending];\n  \n  \n  ///\n  \n  //let listPlayer = (Object.keys(listPlayerEntry)).map(element=>listPlayerEntry[element]._id); // list of battletags\n  \n  let orderPlayer;\n  let objTeams = {};\n  let listTeamName = [];\n  const region = option.region;\n  \n  // 1. confirmed - 2. leader - 3. less roles player(2, 1) - 4. rest\n  const onClick_generateTeams = (event) => {\n    \n    \n    orderPlayer = listPlayer.sort( (player1, player2) => {    // mmr 높은순으로 list of battletags\n      \n      const objPlayer1 = listPlayerEntry.find(objPlayer => objPlayer._id === player1)\n      const objPlayer2 = listPlayerEntry.find(objPlayer => objPlayer._id === player2)\n      \n      return (objPlayer2.mmr.standard.region - objPlayer1.mmr.standard.region);\n      // ex 3333, 222, 1111\n    });\n    \n    \n    const listPlayerConfirmed = orderPlayer.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\n      return objPlayer.status === \"confirmed\"\n    } )\n  \n    const listPlayerConfirmedLeader = listPlayerConfirmed.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\n      return objPlayer.tags.includes(\"leader\");\n    } )\n    \n    const listPlayerConfirmedNonLeader= listPlayerConfirmed.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\n      return !(objPlayer.tags.includes(\"leader\"));\n    } )\n    \n  \n    const listPlayerLeader = orderPlayer.filter(\n      battletagPlayer => {\n        const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletagPlayer)\n        return (objPlayer.tags.includes(\"leader\"))\n      }\n    )\n    \n    console.log(listPlayerLeader);\n    //orderPlayer = \n    //console.log(orderPlayer)\n    \n    for (var i =0; i<numberTeams; i++) {\n      const teamName = `team${i+1}`;\n      objTeams[teamName] = `it is ${teamName}`\n      listTeamName.push(teamName);\n    }\n    \n    setResult(result+1);\n    console.log(result)\n    console.log(objTeams);\n    \n    /*\n    {\n      _id: String,\n      listPlayerBattletag: [String],\n      name: String,\n      group: String\n    }\n    */\n    \n    let team1 = {\n      _id: Date.now()\n      ,listPlayerBattletag: [\"mbcat#1234\", \"mbcat#1703\"]\n      ,name: \"dragon team\"\n    }\n    \n    let resultTeam = {\n      added: Date.now()\n      ,listTeam: [\n        team1\n        \n      ]\n    }\n    \n    addResult(resultTeam);\n  }\n  \n  \n  \n  return (\n  \n  <DivResult>\n    \n    <DivTitle> Result </DivTitle>\n    \n    <Div onClick={onClick_generateTeams}> \n      button\n    </Div>\n  \n    {result && listTeamName.map(element=>\n      <Div> {element} </Div>\n    )}\n    \n    \n  </DivResult>\n    \n  )\n}\n\n/*\n{(readyPlanTeam)? orderPlayerEntry[0][\"_id\"] : \"loading...\" }\n    {(readyPlanTeam)? orderPlayerEntry[9][\"_id\"] : \"loading...\"}\n*/\n\n/*\n\n    <DivTableEntry> \n    \n    <DivRowHeader> \n      <DivBattletagHeader>  battletag </DivBattletagHeader>\n      <Div> roles </Div>\n      <Div> mmr </Div>\n      <Div> status </Div>\n      \n       \n      <Div> </Div>\n    </DivRowHeader>\n    \n    { \n      ( listPlayerEntry ).map( (player, i) =>\n      \n        < RowPlayer \n          key={ `${player._id}_${(new Date().getTime()).toString()}` }\n          battletag={player._id} \n          mmr={player.mmr.standard.NA} \n          statusPlayer={player.status} \n        /> \n      )\n    }\n      \n    </DivTableEntry>\n    \n*/\n//<button onClick= {refetch} > Refectch </button>\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    listPlayerEntry: state.planTeam.listPlayerEntry\n    ,option: state.planTeam.option\n    ,listResult: state.planTeam.listResult\n    //listPlayerEntry: [...state.planTeam.listPlayerEntry]\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\n    //,readyPlanTeam: state.ready.planTeam\n    //,loading: state.loading\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    addResult: (resultTeam) => dispatch( addResult(resultTeam) ) \n  }; \n}\n\n\n// TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);"]},"metadata":{},"sourceType":"module"}