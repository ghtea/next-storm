{"ast":null,"code":"import axios from 'axios';\nimport dotenv from 'dotenv';\nimport { REPLACE_READY, REPLACE_LOADING, REPLACE_DATA, ADD_NOTIFICATION, REMOVE_NOTIFICATION } from '../'; // fundamental action creator\n\nexport const replaceReady = (which, true_false) => {\n  return {\n    type: REPLACE_READY,\n    which: which,\n    true_false: true_false\n  };\n};\nexport const replaceLoading = (which, true_false) => {\n  return {\n    type: REPLACE_LOADING,\n    which: which,\n    true_false: true_false\n  };\n};\nexport const replaceData = (which, newData) => {\n  return {\n    type: REPLACE_DATA,\n    which: which,\n    data: newData\n  };\n};\nexport const addNotification = (situation, message, idNotification) => {\n  return {\n    type: ADD_NOTIFICATION,\n    situation: situation,\n    message: message,\n    idNotification: idNotification\n  };\n};\nexport const removeNotification = idNotification => {\n  return {\n    type: REMOVE_NOTIFICATION,\n    idNotification: idNotification\n  };\n}; // functions that dispatch actions which are from return fundamental action creators\n\nconst readPlanTeam = idPlanTeam => {\n  return async (dispatch, getState, axios) => {\n    const onSuccess = newPlanTeam => {\n      dispatch(replaceData(\"planTeam\", newPlanTeam)); // 이게 먼저 돼고, 아래 loading, ready 수정해 주어야 한다!!!\n\n      dispatch(replaceReady(\"planTeam\", true));\n      dispatch(replaceLoading(\"planTeam\", false));\n      return;\n    };\n\n    const onError = error => {\n      dispatch(replaceReady(\"planTeam\", false));\n      dispatch(replaceLoading(\"planTeam\", false));\n      const idNotification = Date.now();\n      dispatch(addNotification(\"error\", \"Reading planTeam has failed\", idNotification));\n      setTimeout(dispatch(removeNotification(idNotification)), 5000);\n      return;\n    };\n\n    try {\n      dispatch(replaceReady(\"planTeam\", false));\n      dispatch(replaceLoading(\"planTeam\", true));\n      const response = await axios.get(`${process.env.REACT_APP_URL_AHR}/PlanTeam/${idPlanTeam}`);\n      const newPlanTeam = response.data;\n      console.log(newPlanTeam);\n      onSuccess(newPlanTeam);\n      return;\n    } // try\n    catch (error) {\n      onError(error);\n      return;\n    } //catch\n\n  };\n}; // readPlanTeam\n\n\nexport default readPlanTeam;","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/redux/thunks/readPlanTeam.js"],"names":["axios","dotenv","REPLACE_READY","REPLACE_LOADING","REPLACE_DATA","ADD_NOTIFICATION","REMOVE_NOTIFICATION","replaceReady","which","true_false","type","replaceLoading","replaceData","newData","data","addNotification","situation","message","idNotification","removeNotification","readPlanTeam","idPlanTeam","dispatch","getState","onSuccess","newPlanTeam","onError","error","Date","now","setTimeout","response","get","process","env","REACT_APP_URL_AHR","console","log"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\n\r\n\r\nimport {REPLACE_READY, REPLACE_LOADING, REPLACE_DATA, ADD_NOTIFICATION, REMOVE_NOTIFICATION} from '../'\r\n\r\n\r\n// fundamental action creator\r\nexport const replaceReady = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_READY,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nexport const replaceLoading = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_LOADING,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nexport const replaceData = (which, newData) => {\r\n  return {\r\n    type: REPLACE_DATA,\r\n    which: which,\r\n    data: newData\r\n  }\r\n  \r\n}\r\n\r\nexport const addNotification = (situation, message, idNotification) => {\r\n  return {\r\n    type: ADD_NOTIFICATION,\r\n    situation: situation,\r\n    message: message,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\nexport const removeNotification = (idNotification) => {\r\n  return {\r\n    type: REMOVE_NOTIFICATION,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// functions that dispatch actions which are from return fundamental action creators\r\nconst readPlanTeam = (idPlanTeam) => {   \r\n  \r\n  return async (dispatch, getState, axios) => { \r\n\r\n    const onSuccess = (newPlanTeam) => { \r\n      \r\n      \r\n      dispatch( replaceData(\"planTeam\", newPlanTeam) );  // 이게 먼저 돼고, 아래 loading, ready 수정해 주어야 한다!!!\r\n      \r\n      dispatch( replaceReady(\"planTeam\", true) );\r\n      dispatch( replaceLoading(\"planTeam\", false) ); \r\n      \r\n      return;\r\n    } \r\n\r\n\r\n    const onError = (error) =>{ \r\n      \r\n      dispatch( replaceReady(\"planTeam\", false) );\r\n      dispatch( replaceLoading(\"planTeam\", false) ); \r\n      \r\n      const idNotification = Date.now();\r\n      dispatch( addNotification(\"error\", \"Reading planTeam has failed\", idNotification) );\r\n      setTimeout(\r\n        dispatch( removeNotification(idNotification) )\r\n        , 5000);\r\n      \r\n      return; \r\n    } \r\n\r\n\r\n    try { \r\n      \r\n      dispatch( replaceReady(\"planTeam\", false) );\r\n      dispatch( replaceLoading(\"planTeam\", true) ); \r\n      \r\n      const response = await axios.get( `${process.env.REACT_APP_URL_AHR}/PlanTeam/${idPlanTeam}`);\r\n      \r\n      \r\n      \r\n      const newPlanTeam = response.data;\r\n      \r\n      console.log(newPlanTeam);\r\n      \r\n      onSuccess(newPlanTeam);\r\n  \r\n      return; \r\n      \r\n    } // try\r\n    \r\n    catch (error) { \r\n      \r\n      onError(error); \r\n      \r\n      return; \r\n      \r\n    } //catch\r\n\r\n  } \r\n} // readPlanTeam\r\n    \r\nexport default  readPlanTeam;"]},"metadata":{},"sourceType":"module"}