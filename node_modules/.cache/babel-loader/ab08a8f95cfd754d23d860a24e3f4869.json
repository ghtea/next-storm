{"ast":null,"code":"import{createStore,applyMiddleware}from'redux';import thunk from'redux-thunk';import axios from'axios';import dotenv from'dotenv';import reducer from'./reducer';export var REPLACE_READY=\"REPLACE_READY\";export var REPLACE_LOADING=\"REPLACE_LOADING\";export var REPLACE_DATA=\"REPLACE_DATA\";export var ADD_NOTIFICATION=\"ADD_NOTIFICATION\";export var REMOVE_NOTIFICATION=\"REMOVE_NOTIFICATION\";// fundamental action creator\nexport var replaceReady=function replaceReady(which,true_false){return{type:REPLACE_READY,which:which,true_false:true_false};};export var replaceLoading=function replaceLoading(which,true_false){return{type:REPLACE_LOADING,which:which,true_false:true_false};};export var replaceData=function replaceData(which,newData){return{type:REPLACE_DATA,which:which,data:newData};};export var addNotification=function addNotification(situation,message,idNotification){return{type:ADD_NOTIFICATION,situation:situation,message:message,idNotification:idNotification};};export var removeNotification=function removeNotification(idNotification){return{type:REMOVE_NOTIFICATION,idNotification:idNotification};};var store=createStore(reducer,applyMiddleware(thunk.withExtraArgument(axios)));export default store;//https://github.com/nomadcoders/vanilla-redux/blob/ccaa1acd081f27239f2cc8ad3c571bd0a9923f73/src/store.js","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","axios","dotenv","reducer","REPLACE_READY","REPLACE_LOADING","REPLACE_DATA","ADD_NOTIFICATION","REMOVE_NOTIFICATION","replaceReady","which","true_false","type","replaceLoading","replaceData","newData","data","addNotification","situation","message","idNotification","removeNotification","store","withExtraArgument"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAGA,MAAO,IAAMC,CAAAA,aAAa,CAAG,eAAtB,CACP,MAAO,IAAMC,CAAAA,eAAe,CAAG,iBAAxB,CACP,MAAO,IAAMC,CAAAA,YAAY,CAAG,cAArB,CAEP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CACP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CAIP;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,UAAR,CAAuB,CACjD,MAAO,CACLC,IAAI,CAAER,aADD,CAELM,KAAK,CAAEA,KAFF,CAGLC,UAAU,CAAEA,UAHP,CAAP,CAKD,CANM,CAQP,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACH,KAAD,CAAQC,UAAR,CAAuB,CACnD,MAAO,CACLC,IAAI,CAAEP,eADD,CAELK,KAAK,CAAEA,KAFF,CAGLC,UAAU,CAAEA,UAHP,CAAP,CAKD,CANM,CAQP,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACJ,KAAD,CAAQK,OAAR,CAAoB,CAC7C,MAAO,CACLH,IAAI,CAAEN,YADD,CAELI,KAAK,CAAEA,KAFF,CAGLM,IAAI,CAAED,OAHD,CAAP,CAMD,CAPM,CASP,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAYC,OAAZ,CAAqBC,cAArB,CAAwC,CACrE,MAAO,CACLR,IAAI,CAAEL,gBADD,CAELW,SAAS,CAAEA,SAFN,CAGLC,OAAO,CAAEA,OAHJ,CAILC,cAAc,CAAEA,cAJX,CAAP,CAMD,CAPM,CASP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACD,cAAD,CAAoB,CACpD,MAAO,CACLR,IAAI,CAAEJ,mBADD,CAELY,cAAc,CAAEA,cAFX,CAAP,CAID,CALM,CAWP,GAAME,CAAAA,KAAK,CAAGxB,WAAW,CACvBK,OADuB,CAEvBJ,eAAe,CAACC,KAAK,CAACuB,iBAAN,CAAwBtB,KAAxB,CAAD,CAFQ,CAAzB,CAMA,cAAeqB,CAAAA,KAAf,CAEA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\nimport reducer from './reducer';\r\n\r\n\r\nexport const REPLACE_READY = \"REPLACE_READY\";\r\nexport const REPLACE_LOADING = \"REPLACE_LOADING\";\r\nexport const REPLACE_DATA = \"REPLACE_DATA\";\r\n\r\nexport const ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\r\nexport const REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\r\n\r\n\r\n\r\n// fundamental action creator\r\nexport const replaceReady = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_READY,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nexport const replaceLoading = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_LOADING,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nexport const replaceData = (which, newData) => {\r\n  return {\r\n    type: REPLACE_DATA,\r\n    which: which,\r\n    data: newData\r\n  }\r\n  \r\n}\r\n\r\nexport const addNotification = (situation, message, idNotification) => {\r\n  return {\r\n    type: ADD_NOTIFICATION,\r\n    situation: situation,\r\n    message: message,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\nexport const removeNotification = (idNotification) => {\r\n  return {\r\n    type: REMOVE_NOTIFICATION,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunk.withExtraArgument(axios))\r\n)\r\n\r\n\r\nexport default store;\r\n\r\n//https://github.com/nomadcoders/vanilla-redux/blob/ccaa1acd081f27239f2cc8ad3c571bd0a9923f73/src/store.js"]},"metadata":{},"sourceType":"module"}