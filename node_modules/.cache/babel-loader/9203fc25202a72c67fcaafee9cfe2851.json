{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/AddingPlayer.js\";\nimport dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Div, Input, Button } from '../styles/DefaultStyles';\nimport useInput from '../tools/hooks/useInput';\nimport { getTimeStamp } from '../tools/vanilla/time'; // REQUSTS\n\nconst reqPutPlayerMmr = battletag => {\n  return {\n    filter: {\n      _id: battletag\n    }\n  };\n}; // \"listPlayerEntry._id\": { $ne: battletag }  }   //very important  // https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\n// https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\n\n\nconst reqAddPlayerToListPlayerEntry = (idPlanTeam, battletag) => {\n  return {\n    filter: {\n      _id: idPlanTeam,\n      \"listPlayerEntry._id\": {\n        $ne: battletag\n      } // it's important!\n\n    },\n    update: {\n      $addToSet: {\n        listPlayerEntry: {\n          _id: battletag\n        }\n      }\n    }\n  };\n};\n\nconst AddingPlayer = ({\n  match,\n  location,\n  loading,\n  ready,\n  planTeam,\n  readPlanTeam,\n  addRemoveNotification,\n  notification\n}) => {\n  const idPlanTeam = match.params.idPlanTeam;\n  const inputBattletag = useInput(\"\");\n\n  const onClick_ButtonAdd = async event => {\n    if (inputBattletag.value) {\n      const battletag = inputBattletag.value;\n      let status = {};\n\n      try {\n        await axios.put(`${process.env.REACT_APP_URL_AHR}/PlayerMmr`, reqPutPlayerMmr(battletag));\n        addRemoveNotification(\"success\", \"player has been added!\", 2000);\n        status.mmr = true; // mmr 작업이 잘되었다고 표시\n      } catch (error) {\n        addRemoveNotification(\"error\", \"battletag is wrong\", 4000);\n        status.mmr = false; // mmr 작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n      }\n\n      if (status.mmr === true) {\n        try {\n          await axios.put(`${process.env.REACT_APP_URL_AHR}/PlanTeam`, reqAddPlayerToListPlayerEntry(idPlanTeam, battletag));\n        } catch (error) {//addRemoveNotification(\"error\", \"api of Parallel Storm is not working\", 5000);\n        }\n      }\n\n      inputBattletag.setValue(\"\"); // input value 초기화\n    } else {\n      // 애초에 battletag를 입력 안했다면.\n      console.log(\"type battletag first\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DivAddingPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \" Team Generator \"), /*#__PURE__*/React.createElement(DivId, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \" \", `id: ${idPlanTeam}`, \" \")), /*#__PURE__*/React.createElement(DivBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DivInputAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(InputBattletag, Object.assign({}, inputBattletag, {\n    placeholder: \"battletag#1234\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(ButtonAdd, {\n    onClick: onClick_ButtonAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \" Add \"))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    ready: state.ready,\n    loading: state.loading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingPlayer);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/AddingPlayer.js"],"names":["dotenv","React","styled","axios","connect","addRemoveNotification","NavLink","useHistory","Div","Input","Button","useInput","getTimeStamp","reqPutPlayerMmr","battletag","filter","_id","reqAddPlayerToListPlayerEntry","idPlanTeam","$ne","update","$addToSet","listPlayerEntry","AddingPlayer","match","location","loading","ready","planTeam","readPlanTeam","notification","params","inputBattletag","onClick_ButtonAdd","event","value","status","put","process","env","REACT_APP_URL_AHR","mmr","error","setValue","console","log","mapStateToProps","state","mapDispatchToProps","dispatch","situation","message","time"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\n\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport {Div, Input, Button} from '../styles/DefaultStyles';\n\n\nimport useInput from '../tools/hooks/useInput';\nimport {getTimeStamp} from '../tools/vanilla/time';\n\n\n\n\n\n// REQUSTS\nconst reqPutPlayerMmr = (battletag) => {  \n  return {\n    filter: {_id: battletag }\n  }\n};\n\n// \"listPlayerEntry._id\": { $ne: battletag }  }   //very important  // https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\n\n\n// https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\nconst reqAddPlayerToListPlayerEntry = (idPlanTeam, battletag) => {  \n  return ({\n    \n    filter: {\n      _id: idPlanTeam,\n    \t\"listPlayerEntry._id\": { $ne: battletag }  // it's important!\n    }\t\t\n    \n    ,update: {\n      $addToSet: { \n        listPlayerEntry: { _id: battletag }\n    \t}\n  \t}\n  \t\n  })\n};\n\n\n\n\n\n\n const AddingPlayer = ({match, location, loading, ready, planTeam, readPlanTeam, addRemoveNotification, notification}) => {\n\n  const idPlanTeam = match.params.idPlanTeam;\n  \n  const inputBattletag = useInput(\"\");\n  \n  \n  \n  const onClick_ButtonAdd = async (event) => {\n    \n    if (inputBattletag.value) {\n       \n        \n      const battletag = inputBattletag.value;\n      \n      let status = {};\n      \n      try {    \n        await axios.put (`${process.env.REACT_APP_URL_AHR}/PlayerMmr`, reqPutPlayerMmr(battletag));\n        \n        addRemoveNotification(\"success\", \"player has been added!\", 2000);\n        status.mmr = true; // mmr 작업이 잘되었다고 표시\n        \n      }\n      catch(error) {\n        \n        addRemoveNotification(\"error\", \"battletag is wrong\", 4000);\n\n        status.mmr = false; // mmr 작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n      }\n      \n      \n      \n      if (status.mmr === true) {\n        try {\n          await axios.put( `${process.env.REACT_APP_URL_AHR}/PlanTeam`, reqAddPlayerToListPlayerEntry(idPlanTeam, battletag) ); \n          \n        }\n        catch(error) {\n          //addRemoveNotification(\"error\", \"api of Parallel Storm is not working\", 5000);\n          \n        }\n      }\n      \n      inputBattletag.setValue(\"\");\n      \n      // input value 초기화\n      \n    } else { // 애초에 battletag를 입력 안했다면.\n      console.log(\"type battletag first\")\n    }\n  }\n  \n  \n  \n  \n  return (\n  <DivAddingPlayer>\n        \n    <DivHeader>\n      <DivTitle> Team Generator </DivTitle>\n      \n      <DivId> {`id: ${idPlanTeam}`} </DivId>\n    </DivHeader>\n    \n    \n    \n   <DivBody>\n\n\t    <DivInputAdd>\n\t      <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n        <ButtonAdd onClick = {onClick_ButtonAdd} > Add </ButtonAdd>\n\t    </DivInputAdd>\n\t    \n   </DivBody>\n  \n  </DivAddingPlayer>\n        \n  \n  )\n\n}\n  \n\t  \n\n\nfunction mapStateToProps(state) { \n  return { \n    ready: state.ready \n    ,loading: state.loading\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingPlayer);"]},"metadata":{},"sourceType":"module"}