{"ast":null,"code":"import defaultAxios from 'axios'; // if we not use existing axios instance, use default axios instance\n\nconst useAxios = (options, axios = defaultAxios) => {\n  const [state, setState] = useState({\n    loading: true,\n    error: null,\n    data: null\n  });\n  const [trigger, setTrigger] = useState(0);\n\n  if (!options.url) {\n    return;\n  }\n\n  useEffect(() => {\n    axios(options).then(data => {\n      setState({ ...state,\n        loading: false,\n        data: data\n      });\n    }).catch(error => {\n      setState({ ...state,\n        loading: false,\n        error\n      });\n    });\n  }, []);\n  return state;\n};","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/tools/hooks/useAxios.js"],"names":["defaultAxios","useAxios","options","axios","state","setState","useState","loading","error","data","trigger","setTrigger","url","useEffect","then","catch"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,OAAzB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,KAAK,GAAGH,YAAlB,KAAmC;AAEnD,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC;AAClCC,IAAAA,OAAO,EAAC,IAD0B;AAElCC,IAAAA,KAAK,EAAE,IAF2B;AAGlCC,IAAAA,IAAI,EAAE;AAH4B,GAAD,CAAlC;AAMA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;;AACA,MAAI,CAACJ,OAAO,CAACU,GAAb,EAAkB;AACjB;AACA;;AAEDC,EAAAA,SAAS,CAAC,MAAI;AACbV,IAAAA,KAAK,CAACD,OAAD,CAAL,CAAeY,IAAf,CAAoBL,IAAI,IAAI;AAC3BJ,MAAAA,QAAQ,CAAC,EACR,GAAGD,KADK;AAERG,QAAAA,OAAO,EAAE,KAFD;AAGRE,QAAAA,IAAI,EAAEA;AAHE,OAAD,CAAR;AAKA,KAND,EAMGM,KANH,CAMSP,KAAK,IAAI;AACjBH,MAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWG,QAAAA,OAAO,EAAE,KAApB;AAA2BC,QAAAA;AAA3B,OAAD,CAAR;AACA,KARD;AASA,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAOJ,KAAP;AACA,CA1BD","sourcesContent":["import defaultAxios from 'axios';\n\n// if we not use existing axios instance, use default axios instance\nconst useAxios = (options, axios = defaultAxios) => {\n\t\n\tconst [state, setState] = useState({\n\t\tloading:true,\n\t\terror: null,\n\t\tdata: null\n\t});\n\t\n\tconst [trigger, setTrigger] = useState(0)\n\tif (!options.url) {\n\t\treturn;\n\t}\n\t\n\tuseEffect(()=>{\n\t\taxios(options).then(data => {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tdata: data\n\t\t\t})\n\t\t}).catch(error => {\n\t\t\tsetState({...state, loading: false, error})\n\t\t})\n\t}, []);\n\t\n\treturn state;\n}"]},"metadata":{},"sourceType":"module"}