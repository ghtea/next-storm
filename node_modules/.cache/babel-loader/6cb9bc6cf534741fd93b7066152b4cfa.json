{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/routes/Home.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Div } from '../styles/DefaultStyles';\nconst GET_AlBUMS = gql`\n  {\n    getAlbums {\n      _id\n      urlRym\n      \n      title\n      artist\n      year\n      \n      rating\n      review\n    }\n  }\n`;\nconst DivLibrary = styled(Div)`\n  \n  @media (max-width: 540px) {\n    margin-top: 200px; \n  \t\n\t}\n \n\t @media (min-width: 541px) {\n\t  margin-top: 120px; \n\t\t\n\t }\n  \n`;\n\nfunction Library() {\n  const {\n    loading,\n    data\n  } = useQuery(GET_AlBUMS);\n  return /*#__PURE__*/React.createElement(DivLibrary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default Library;\n/*\n\n <DivAlbums> \n      {loading && <Div>Loading...</Div>}\n      {!loading &&\n        data.getAlbums &&\n        data.getAlbums.map(album => \n        \n        <Album \n          key={album._id} \n          album = {album}\n        />\n        \n        )}\n    </DivAlbums>\n\n*/","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/routes/Home.js"],"names":["React","styled","Div","GET_AlBUMS","gql","DivLibrary","Library","loading","data","useQuery"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,SAAQC,GAAR,QAAkB,yBAAlB;AAGA,MAAMC,UAAU,GAAGC,GAAI;;;;;;;;;;;;;;CAAvB;AAkBA,MAAMC,UAAU,GAAGJ,MAAM,CAACC,GAAD,CAAM;;;;;;;;;;;;CAA/B;;AAcA,SAASI,OAAT,GAAmB;AAEjB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBC,QAAQ,CAACN,UAAD,CAAlC;AAEA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD;;AAED,eAAeG,OAAf;AAIA","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\n\nimport {Div} from '../styles/DefaultStyles';\n\n\nconst GET_AlBUMS = gql`\n  {\n    getAlbums {\n      _id\n      urlRym\n      \n      title\n      artist\n      year\n      \n      rating\n      review\n    }\n  }\n`;\n\n\n\nconst DivLibrary = styled(Div)`\n  \n  @media (max-width: 540px) {\n    margin-top: 200px; \n  \t\n\t}\n \n\t @media (min-width: 541px) {\n\t  margin-top: 120px; \n\t\t\n\t }\n  \n`;\n\nfunction Library() {\n  \n  const { loading, data } = useQuery(GET_AlBUMS);\n   \n  return (\n    <DivLibrary>\n    \n    \n   \n    \n    </DivLibrary>\n  );\n}\n\nexport default Library;\n\n\n\n/*\n\n <DivAlbums> \n      {loading && <Div>Loading...</Div>}\n      {!loading &&\n        data.getAlbums &&\n        data.getAlbums.map(album => \n        \n        <Album \n          key={album._id} \n          album = {album}\n        />\n        \n        )}\n    </DivAlbums>\n\n*/"]},"metadata":{},"sourceType":"module"}