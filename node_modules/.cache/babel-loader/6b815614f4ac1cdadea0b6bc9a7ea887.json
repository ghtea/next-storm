{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/routes/TeamGenerator.js\";\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\nimport { replaceRerender } from \"../redux/store\";\nimport { replaceWorking } from \"../redux/store\";\nimport { replaceLoading } from \"../redux/store\";\nimport { replaceReady } from \"../redux/store\";\nimport { replaceData } from \"../redux/store\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport { Div, Input, Button } from '../styles/DefaultStyles'; //import Player from '../components/Player'\n\nimport CreatingPlan from '../components/TeamGenerator/CreatingPlan';\nimport SearchingPlan from '../components/TeamGenerator/SearchingPlan';\nimport AddingPlayer from '../components/TeamGenerator/AddingPlayer';\nimport Entry from '../components/TeamGenerator/Entry';\nimport Option from '../components/TeamGenerator/Option';\nimport Result from '../components/TeamGenerator/Result';\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  @media (max-width: ${props => props.theme.media.mid_big - 1}px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"A\"\n      \"B\"\n      \"C\"\n      \"D\"\n  }\n \n\n  @media (min-width:  ${props => props.theme.media.mid_big}px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 240px 1fr;\n    grid-template-areas: \n      \"A B\"\n      \"C D\";\n  }\n\n`;\nconst DivA = styled(Div)`\n  grid-area: A;\n  max-heigth: 240px;\n  overflow: hidden\n  \n`;\nconst DivB = styled(Div)`\n  grid-area: B;\n  max-heigth: 240px;\n`;\nconst DivC = styled(Div)`\n  grid-area: C;\n  max-heigth: 400px;\n`;\nconst DivD = styled(Div)`\n  grid-area: D;\n  max-heigth: 400px;\n`; // https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\n\nconst TeamGenerator = ({\n  match,\n  location,\n  authority,\n  loadingPlanTeam,\n  readyPlanTeam,\n  idPlanTeam,\n  passwordPlanTeam,\n  rerenderPlanTeamA,\n  readPlanTeam,\n  replaceData,\n  addRemoveNotification\n}) => {\n  //const [rerender, SetRerender] = useState(\"\");\n  const history = useHistory();\n  const isFirstRun = useRef(true);\n  const idPlanTeamTrying = match.params.idPlanTeam;\n  useEffect(() => {\n    readPlanTeam(idPlanTeamTrying);\n  }, []); // 처음 마운트 (loading X -> O) 는 무시, 뒤의 O -> X 일때 플랜 아이디 확인\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    if (!loadingPlanTeam && !readyPlanTeam) {\n      // (readyPlanTeam === false)\n      replaceData(\"authority\", \"unknown\");\n      addRemoveNotification(\"error\", \"plan id is wrong\");\n      history.push(`/team-generator`);\n    }\n  }, [loadingPlanTeam]); // 처음 마운트는 무시, readyPlanTeam X -> O 일때 플랜 비번확인\n\n  useEffect(() => {\n    const query = queryString.parse(location.search);\n    const passwordPlanTeamTrying = query.pw; //if (isFirstRun.current) {isFirstRun.current = false; return; } // 처음 렌더링 넘어가기 (아직 스토어 업데이트 반영 잘 못해서..)\n    // 참고1 https://stackoverflow.com/questions/53351517/react-hooks-skip-first-run-in-useeffect\n    // 참고2 https://reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables\n\n    if (!loadingPlanTeam && readyPlanTeam && authority === \"unknown\") {\n      if (!passwordPlanTeamTrying) {\n        replaceData(\"authority\", \"viewer\");\n        addRemoveNotification(\"success\", \"welcome viewer!\");\n      } else if (passwordPlanTeamTrying === passwordPlanTeam) {\n        replaceData(\"authority\", \"administrator\");\n        addRemoveNotification(\"success\", \"welcome administrator!\");\n      } // 문제 정상적인 비번인데, 정보를 받는 과정에서 잠시동안 두 비번이 불일치 하는것으로 나와서 => plan 생성시에 조금 지연후에 이곳 페이지로 이동하는 등 시도 중\n      // 정안되면 비번 틀린거는 알람이 아니라 일반 표시로 하기..\n      // if password is wrong\n      else {\n          replaceData(\"authority\", \"unknown\");\n          addRemoveNotification(\"error\", \"password is wrong\");\n        }\n    }\n  }, [loadingPlanTeam, readyPlanTeam]);\n  useEffect(() => {\n    console.log(\"rerendered\");\n  });\n\n  if (loadingPlanTeam || !readyPlanTeam) {\n    return /*#__PURE__*/React.createElement(DivTeamGenerator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DivA, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, \"loading...\"), /*#__PURE__*/React.createElement(DivB, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, \"loading...\"), /*#__PURE__*/React.createElement(DivC, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, \"loading...\"), /*#__PURE__*/React.createElement(DivD, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, \"loading...\"));\n  } else {\n    // (!loadingPlanTeam && readyPlanTeam) \n    return /*#__PURE__*/React.createElement(DivTeamGenerator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(DivA, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AddingPlayer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(DivB, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(DivC, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Entry, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(DivD, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Result, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    })));\n  }\n}; //TeamGenerator\n\n\nfunction mapStateToProps(state) {\n  return {\n    authority: state.authority,\n    idPlanTeam: state.idPlanTeam,\n    passwordPlanTeam: state.planTeam.password,\n    loadingPlanTeam: state.loading.planTeam,\n    readyPlanTeam: state.ready.planTeam,\n    rerenderPlanTeamA: state.rerender.planTeam.A //,loading: state.loading\n    //,authority: state.authority\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    readPlanTeam: idPlanTeam => dispatch(readPlanTeam(idPlanTeam)) //,replaceRerender: (which) => dispatch(replaceRerender(which))\n    ,\n    replaceData: (which, newData) => dispatch(replaceData(which, newData)),\n    replaceLoading: (which, true_false) => dispatch(replaceLoading(which, true_false)),\n    replaceReady: (which, true_false) => dispatch(replaceReady(which, true_false)),\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGenerator);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/routes/TeamGenerator.js"],"names":["React","useEffect","useRef","styled","axios","queryString","NavLink","useHistory","connect","readPlanTeam","replaceRerender","replaceWorking","replaceLoading","replaceReady","replaceData","addRemoveNotification","Div","Input","Button","CreatingPlan","SearchingPlan","AddingPlayer","Entry","Option","Result","useAxiosGet","useInput","DivTeamGenerator","props","theme","media","mid_big","DivA","DivB","DivC","DivD","TeamGenerator","match","location","authority","loadingPlanTeam","readyPlanTeam","idPlanTeam","passwordPlanTeam","rerenderPlanTeamA","history","isFirstRun","idPlanTeamTrying","params","current","push","query","parse","search","passwordPlanTeamTrying","pw","console","log","mapStateToProps","state","planTeam","password","loading","ready","rerender","A","mapDispatchToProps","dispatch","which","newData","true_false","situation","message","time"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\n\nimport {replaceRerender} from \"../redux/store\";\nimport {replaceWorking} from \"../redux/store\";\nimport {replaceLoading} from \"../redux/store\";\nimport {replaceReady} from \"../redux/store\";\nimport {replaceData} from \"../redux/store\";\n\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\n\nimport {Div, Input, Button} from '../styles/DefaultStyles';\n//import Player from '../components/Player'\n\n\n\nimport CreatingPlan from '../components/TeamGenerator/CreatingPlan';\nimport SearchingPlan from '../components/TeamGenerator/SearchingPlan';\n\nimport AddingPlayer from '../components/TeamGenerator/AddingPlayer';\nimport Entry from '../components/TeamGenerator/Entry';\nimport Option from '../components/TeamGenerator/Option';\nimport Result from '../components/TeamGenerator/Result';\n\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\n\n\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"A\"\n      \"B\"\n      \"C\"\n      \"D\"\n  }\n \n\n  @media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 240px 1fr;\n    grid-template-areas: \n      \"A B\"\n      \"C D\";\n  }\n\n`;\n\n\nconst DivA = styled(Div)`\n  grid-area: A;\n  max-heigth: 240px;\n  overflow: hidden\n  \n`\nconst DivB = styled(Div)`\n  grid-area: B;\n  max-heigth: 240px;\n`\nconst DivC = styled(Div)`\n  grid-area: C;\n  max-heigth: 400px;\n`\nconst DivD = styled(Div)`\n  grid-area: D;\n  max-heigth: 400px;\n`\n\n\n\n// https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\nconst TeamGenerator = ({\n  match, location\n  , authority\n  , loadingPlanTeam\n  , readyPlanTeam\n  , idPlanTeam, passwordPlanTeam\n  \n  , rerenderPlanTeamA\n  \n  , readPlanTeam\n  , replaceData\n  , addRemoveNotification\n}) => {\n  \n  //const [rerender, SetRerender] = useState(\"\");\n  const history = useHistory();\n  const isFirstRun = useRef(true);\n  \n  const idPlanTeamTrying = match.params.idPlanTeam;\n  \n  useEffect(()=>{\n    readPlanTeam(idPlanTeamTrying);\n  }, []);\n  \n  \n  // 처음 마운트 (loading X -> O) 는 무시, 뒤의 O -> X 일때 플랜 아이디 확인\n  useEffect(()=>{\n    if (isFirstRun.current) {isFirstRun.current = false; return; }\n    \n    if (!loadingPlanTeam && !readyPlanTeam)  {  // (readyPlanTeam === false)\n      replaceData(\"authority\", \"unknown\");\n      addRemoveNotification(\"error\", \"plan id is wrong\");\n      \n      history.push(`/team-generator`);\n    }\n  }, [loadingPlanTeam]);\n  \n  \n  // 처음 마운트는 무시, readyPlanTeam X -> O 일때 플랜 비번확인\n  useEffect(()=>{\n    \n    const query = queryString.parse(location.search);\n    const passwordPlanTeamTrying = query.pw;\n    \n    //if (isFirstRun.current) {isFirstRun.current = false; return; } // 처음 렌더링 넘어가기 (아직 스토어 업데이트 반영 잘 못해서..)\n    // 참고1 https://stackoverflow.com/questions/53351517/react-hooks-skip-first-run-in-useeffect\n    // 참고2 https://reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables\n    \n    \n    if (!loadingPlanTeam && readyPlanTeam && (authority === \"unknown\") ) {\n      \n      if (!passwordPlanTeamTrying) {\n        replaceData(\"authority\", \"viewer\");\n        addRemoveNotification(\"success\", \"welcome viewer!\");\n      }\n      \n      else if ( passwordPlanTeamTrying === passwordPlanTeam ) {\n        replaceData(\"authority\", \"administrator\");\n        addRemoveNotification(\"success\", \"welcome administrator!\");\n      }\n      \n      // 문제 정상적인 비번인데, 정보를 받는 과정에서 잠시동안 두 비번이 불일치 하는것으로 나와서 => plan 생성시에 조금 지연후에 이곳 페이지로 이동하는 등 시도 중\n      // 정안되면 비번 틀린거는 알람이 아니라 일반 표시로 하기..\n      // if password is wrong\n      else {\n        replaceData(\"authority\", \"unknown\");\n        addRemoveNotification(\"error\", \"password is wrong\");\n      }\n      \n    }\n    \n  }, [loadingPlanTeam, readyPlanTeam] )\n    \n    \n    \n  useEffect(()=>{\n    console.log(\"rerendered\")\n  } )\n  \n  \n  if (loadingPlanTeam || !readyPlanTeam) {\n    return (\n      <DivTeamGenerator>\n        \n        <DivA>\n          loading...\n        </DivA>\n        \n        <DivB>\n          loading...\n        </DivB>\n      \n      \n        <DivC>\n          loading...\n        </DivC>\n      \n      \n        <DivD>\n          loading...\n        </DivD>\n        \n      </DivTeamGenerator>\n    )\n  } \n  \n  else  { // (!loadingPlanTeam && readyPlanTeam) \n   return (\n   <DivTeamGenerator>\n      \n      <DivA>\n        <AddingPlayer />\n      </DivA>\n      \n      <DivB>\n        <Option /> \n      </DivB>\n    \n    \n      <DivC>\n        <Entry />\n      </DivC>\n    \n    \n      <DivD>\n        <Result /> \n      </DivD>\n    \n    </DivTeamGenerator>\n    )\n  }\n\n \n    \n} //TeamGenerator\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    authority: state.authority\n    \n    ,idPlanTeam: state.idPlanTeam\n    ,passwordPlanTeam: state.planTeam.password\n    \n    , loadingPlanTeam: state.loading.planTeam\n    , readyPlanTeam: state.ready.planTeam\n    \n    , rerenderPlanTeamA: state.rerender.planTeam.A\n    \n    //,loading: state.loading\n    //,authority: state.authority\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n    //,replaceRerender: (which) => dispatch(replaceRerender(which))\n    ,replaceData: (which, newData) => dispatch(replaceData(which, newData))\n    ,replaceLoading: (which, true_false) => dispatch(replaceLoading(which, true_false)) \n    ,replaceReady: (which, true_false) => dispatch(replaceReady(which, true_false)) \n    ,addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGenerator);\n"]},"metadata":{},"sourceType":"module"}