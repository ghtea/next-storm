{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/routes/Notification.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from \"react-redux\";\nimport { addNotification } from \"../redux/store\";\nimport { removeNotification } from \"../redux/store\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport { Div } from '../styles/DefaultStyles';\nconst DivNotification = styled(Div)`\n\t\n  position: fixed;\n  \n  left: 50%;\n  transform: translateX(-50%);\n  \n  display: flex;\n  flex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n  \n  @media (max-width: ${props => props.theme.media.mid_big - 1}px ) {\n  \n  \twidth: 100%;\n  \tmax-width: 360px;\n  \theight: auto;\n  \t\n\t}\n \n\t@media (min-width:  ${props => props.theme.media.mid_big}px) {\n\t\twidth: 360px;\n\t  height: auto;\n\t  \n\t  top: \n\t \n\t\t\n\t }\n  \n`;\nconst DivNotificationItem = styled(Div)`\n\t\n\tbox-sizing: border-box;\n\tpadding: 8px;\n\t\n\tmagin-bottom: 2px;\n\tmargin-top: 2px;\n\t\n\tborder-radius: 8px;\n`; // img (svg) https://www.svgrepo.com/svg/154720/hexagon\n\nconst Notification = ({\n  notification\n}) => {\n  return /*#__PURE__*/React.createElement(DivNotification, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, notification.map((element, i) => /*#__PURE__*/React.createElement(DivNotificationItem, {\n    key: element.idNotification,\n    className: element.situation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, element.message)));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    notification: state.notification\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time)),\n    addNotification: (situation, message, idNotification) => dispatch(addNotification(situation, message, idNotification)),\n    removeNotification: idNotification => dispatch(removeNotification(idNotification))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/routes/Notification.js"],"names":["React","styled","connect","addNotification","removeNotification","addRemoveNotification","Div","DivNotification","props","theme","media","mid_big","DivNotificationItem","Notification","notification","map","element","i","idNotification","situation","message","mapStateToProps","state","mapDispatchToProps","dispatch","time"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAAQC,kBAAR,QAAiC,gBAAjC;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AAGA,SAAQC,GAAR,QAAkB,yBAAlB;AAIA,MAAMC,eAAe,GAAGN,MAAM,CAACK,GAAD,CAAM;;;;;;;;;;;;uBAYbE,KAAK,IAAKA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,OAAlB,GAA2B,CAAI;;;;;;;;uBAQzCH,KAAK,IAAKA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,OAAU;;;;;;;;;CApB7D;AAmCA,MAAMC,mBAAmB,GAAGX,MAAM,CAACK,GAAD,CAAM;;;;;;;;;CAAxC,C,CAcA;;AACA,MAAMO,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AACxC,sBAGC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEA,YAAY,CAACC,GAAb,CAAkB,CAACC,OAAD,EAAUC,CAAV,kBAElB,oBAAC,mBAAD;AAAqB,IAAA,GAAG,EAAID,OAAO,CAACE,cAApC;AAAoD,IAAA,SAAS,EAAEF,OAAO,CAACG,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAACI,OADX,CAFA,CAFF,CAHD;AAgBA,CAjBD;;AAoBA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLR,IAAAA,YAAY,EAAEQ,KAAK,CAACR;AADf,GAAP;AAGD;;AAED,SAASS,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLnB,IAAAA,qBAAqB,EAAE,CAACc,SAAD,EAAYC,OAAZ,EAAqBK,IAArB,KAA8BD,QAAQ,CAAEnB,qBAAqB,CAACc,SAAD,EAAYC,OAAZ,EAAqBK,IAArB,CAAvB,CADxD;AAEJtB,IAAAA,eAAe,EAAE,CAACgB,SAAD,EAAYC,OAAZ,EAAqBF,cAArB,KAAwCM,QAAQ,CAAErB,eAAe,CAACgB,SAAD,EAAYC,OAAZ,EAAqBF,cAArB,CAAjB,CAF7D;AAGJd,IAAAA,kBAAkB,EAAGc,cAAD,IAAoBM,QAAQ,CAACpB,kBAAkB,CAACc,cAAD,CAAnB;AAH5C,GAAP;AAKD;;AAGD,eAAehB,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,YAA7C,CAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { connect } from \"react-redux\";\nimport {addNotification} from \"../redux/store\";\nimport {removeNotification} from \"../redux/store\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\n\nimport {Div} from '../styles/DefaultStyles';\n\n\n\nconst DivNotification = styled(Div)`\n\t\n  position: fixed;\n  \n  left: 50%;\n  transform: translateX(-50%);\n  \n  display: flex;\n  flex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n  \n  \twidth: 100%;\n  \tmax-width: 360px;\n  \theight: auto;\n  \t\n\t}\n \n\t@media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n\t\twidth: 360px;\n\t  height: auto;\n\t  \n\t  top: \n\t \n\t\t\n\t }\n  \n`;\n\n\n\n\n\nconst DivNotificationItem = styled(Div)`\n\t\n\tbox-sizing: border-box;\n\tpadding: 8px;\n\t\n\tmagin-bottom: 2px;\n\tmargin-top: 2px;\n\t\n\tborder-radius: 8px;\n`;\n\n\n\n\n// img (svg) https://www.svgrepo.com/svg/154720/hexagon\nconst Notification = ({notification}) => {\n\treturn (\n \n\t\n  <DivNotification>\n  \t\n  \t{notification.map( (element, i) =>\n  \t\n  \t\t<DivNotificationItem key = {element.idNotification} className={element.situation}>\n  \t\t\t\t{element.message}\n  \t\t</DivNotificationItem>\n  \t\t\n  \t)}\n  \t\n\t</DivNotification>\n\t\n\t)\n}\n\n\nfunction mapStateToProps(state) { \n  return { \n    notification: state.notification\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n    ,addNotification: (situation, message, idNotification) => dispatch( addNotification(situation, message, idNotification) )\n    ,removeNotification: (idNotification) => dispatch(removeNotification(idNotification))\n  }; \n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);"]},"metadata":{},"sourceType":"module"}