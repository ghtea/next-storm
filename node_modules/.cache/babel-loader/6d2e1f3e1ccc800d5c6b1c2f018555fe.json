{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/AddingPlayer.js\";\nimport dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { replaceWorking } from \"../redux/store\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Div, Input, Button } from '../styles/DefaultStyles';\nimport useInput from '../tools/hooks/useInput';\nimport { getTimeStamp } from '../tools/vanilla/time'; // STYLES\n\nconst DivAddingPlayer = styled(Div)`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n`;\nconst DivId = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`;\nconst DivBody = styled(Div)`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`;\nconst DivInputAdd = styled(Div)`\n\n\theight: 2rem;\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`;\nconst InputBattletag = styled(Input)`\n\twidth: 160px;\n\theight: 100%;\n`;\nconst ButtonAdd = styled(Button)`\n  width: 60px;\n  height: 100%;\n`; // ~ DivAdd\n// REQUSTS\n\nconst reqPutPlayerMmr = battletag => {\n  return {\n    filter: {\n      _id: battletag\n    }\n  };\n}; // \"listPlayerEntry._id\": { $ne: battletag }  }   //very important  // https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\n// https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\n\n\nconst reqAddPlayerToListPlayerEntry = (idPlanTeam, battletag) => {\n  return {\n    filter: {\n      _id: idPlanTeam,\n      \"listPlayerEntry._id\": {\n        $ne: battletag\n      } // it's important!\n\n    },\n    update: {\n      $addToSet: {\n        listPlayerEntry: {\n          _id: battletag\n        }\n      }\n    }\n  };\n};\n\nconst AddingPlayer = ({\n  idPlanTeam,\n  loading,\n  ready,\n  readPlanTeam,\n  addRemoveNotification,\n  notification,\n  replaceWorking\n}) => {\n  const inputBattletag = useInput(\"\");\n\n  const onClick_ButtonAdd = async event => {\n    if (inputBattletag.value) {\n      const battletag = inputBattletag.value;\n      let status = {};\n\n      try {\n        replaceWorking(\"putPlayerMmr\", true);\n        await axios.put(`${process.env.REACT_APP_URL_AHR}/PlayerMmr`, reqPutPlayerMmr(battletag));\n        replaceWorking(\"putPlayerMmr\", false);\n        addRemoveNotification(\"success\", \"player has been added!\", 2000);\n        status.mmr = true; // mmr 작업이 잘되었다고 표시\n      } catch (error) {\n        replaceWorking(\"putPlayerMmr\", false);\n        addRemoveNotification(\"error\", \"battletag is wrong\", 4000);\n        status.mmr = false; // mmr 작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n      }\n\n      if (status.mmr === true) {\n        try {\n          await axios.put(`${process.env.REACT_APP_URL_AHR}/PlanTeam`, reqAddPlayerToListPlayerEntry(idPlanTeam, battletag));\n        } catch (error) {//addRemoveNotification(\"error\", \"api of Parallel Storm is not working\", 5000);\n        }\n      }\n\n      inputBattletag.setValue(\"\"); // input value 초기화\n    } else {\n      // 애초에 battletag를 입력 안했다면.\n      console.log(\"type battletag first\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DivAddingPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, \" Team Generator \"), /*#__PURE__*/React.createElement(DivId, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, \" \", `id: ${idPlanTeam}`, \" \")), /*#__PURE__*/React.createElement(DivBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DivInputAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(InputBattletag, Object.assign({}, inputBattletag, {\n    placeholder: \"battletag#1234\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 8\n    }\n  })), working.putPlayerMmr ? /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 32\n    }\n  }, \" working... \") : /*#__PURE__*/React.createElement(ButtonAdd, {\n    onClick: onClick_ButtonAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 58\n    }\n  }, \" Add \"))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    ready: state.ready,\n    loading: state.loading,\n    working: state.working\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    readPlanTeam: idPlanTeam => dispatch(readPlanTeam(idPlanTeam)),\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time)),\n    replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingPlayer);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/AddingPlayer.js"],"names":["dotenv","React","styled","axios","connect","replaceWorking","readPlanTeam","addRemoveNotification","NavLink","useHistory","Div","Input","Button","useInput","getTimeStamp","DivAddingPlayer","DivHeader","DivTitle","DivId","props","theme","color_weak","DivBody","DivInputAdd","InputBattletag","ButtonAdd","reqPutPlayerMmr","battletag","filter","_id","reqAddPlayerToListPlayerEntry","idPlanTeam","$ne","update","$addToSet","listPlayerEntry","AddingPlayer","loading","ready","notification","inputBattletag","onClick_ButtonAdd","event","value","status","put","process","env","REACT_APP_URL_AHR","mmr","error","setValue","console","log","working","putPlayerMmr","mapStateToProps","state","mapDispatchToProps","dispatch","situation","message","time","which","true_false"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport {replaceWorking} from \"../redux/store\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\n\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport {Div, Input, Button} from '../styles/DefaultStyles';\n\n\nimport useInput from '../tools/hooks/useInput';\nimport {getTimeStamp} from '../tools/vanilla/time';\n\n\n// STYLES\nconst DivAddingPlayer = styled(Div)`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n`\nconst DivId = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`\n\n\nconst DivBody = styled(Div)`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`\n\nconst DivInputAdd = styled(Div)`\n\n\theight: 2rem;\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`\n\nconst InputBattletag = styled(Input)`\n\twidth: 160px;\n\theight: 100%;\n`\n\nconst ButtonAdd = styled(Button)`\n  width: 60px;\n  height: 100%;\n`\n// ~ DivAdd\n\n\n\n// REQUSTS\nconst reqPutPlayerMmr = (battletag) => {  \n  return {\n    filter: {_id: battletag }\n  }\n};\n\n// \"listPlayerEntry._id\": { $ne: battletag }  }   //very important  // https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\n\n\n// https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\nconst reqAddPlayerToListPlayerEntry = (idPlanTeam, battletag) => {  \n  return ({\n    \n    filter: {\n      _id: idPlanTeam,\n    \t\"listPlayerEntry._id\": { $ne: battletag }  // it's important!\n    }\t\t\n    \n    ,update: {\n      $addToSet: { \n        listPlayerEntry: { _id: battletag }\n    \t}\n  \t}\n  \t\n  })\n};\n\n\n\n\n\n\n const AddingPlayer = ({idPlanTeam, loading, ready, readPlanTeam, addRemoveNotification, notification, replaceWorking}) => {\n\n  const inputBattletag = useInput(\"\");\n  \n  \n  \n  const onClick_ButtonAdd = async (event) => {\n    \n    if (inputBattletag.value) {\n       \n        \n      const battletag = inputBattletag.value;\n      \n      let status = {};\n      \n      try {\n        \n        replaceWorking(\"putPlayerMmr\", true)\n        await axios.put (`${process.env.REACT_APP_URL_AHR}/PlayerMmr`, reqPutPlayerMmr(battletag));\n        \n        replaceWorking(\"putPlayerMmr\", false)\n        addRemoveNotification(\"success\", \"player has been added!\", 2000);\n        status.mmr = true; // mmr 작업이 잘되었다고 표시\n        \n      }\n      catch(error) {\n        replaceWorking(\"putPlayerMmr\", false)\n        addRemoveNotification(\"error\", \"battletag is wrong\", 4000);\n\n        status.mmr = false; // mmr 작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n      }\n      \n      \n      \n      if (status.mmr === true) {\n        try {\n          await axios.put( `${process.env.REACT_APP_URL_AHR}/PlanTeam`, reqAddPlayerToListPlayerEntry(idPlanTeam, battletag) ); \n          \n        }\n        catch(error) {\n          //addRemoveNotification(\"error\", \"api of Parallel Storm is not working\", 5000);\n          \n        }\n      }\n      \n      inputBattletag.setValue(\"\");\n      \n      // input value 초기화\n      \n    } else { // 애초에 battletag를 입력 안했다면.\n      console.log(\"type battletag first\")\n    }\n  }\n  \n  \n  \n  \n  return (\n  <DivAddingPlayer>\n        \n    <DivHeader>\n      <DivTitle> Team Generator </DivTitle>\n      \n      <DivId> {`id: ${idPlanTeam}`} </DivId>\n    </DivHeader>\n    \n    \n    \n   <DivBody>\n\n\t    <DivInputAdd>\n\t      <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n\t      \n\t      {working.putPlayerMmr ? <Div> working... </Div> : <ButtonAdd onClick = {onClick_ButtonAdd} > Add </ButtonAdd> }\n        \n\t    </DivInputAdd>\n\t    \n   </DivBody>\n  \n  </DivAddingPlayer>\n        \n  \n  )\n\n}\n  \n\t  \n\n\nfunction mapStateToProps(state) { \n  return { \n    ready: state.ready \n    ,loading: state.loading\n    ,working: state.working\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n    ,addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n    ,replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingPlayer);"]},"metadata":{},"sourceType":"module"}