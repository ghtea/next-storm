{"ast":null,"code":"import axios from 'axios';\nimport dotenv from 'dotenv';\nimport { REPLACE_READY, REPLACE_LOADING, REPLACE_DATA, ADD_NOTIFICATION, REMOVE_NOTIFICATION } from '../store';\nimport { replaceReady, replaceLoading, replaceData, addNotification, removeNotification } from '../store'; // functions that dispatch actions which are from return fundamental action creators\n\nconst readPlanTeam = idPlanTeam => {\n  return async (dispatch, getState, axios) => {\n    const onSuccess = newPlanTeam => {\n      dispatch(replaceData(\"planTeam\", newPlanTeam)); // 이게 먼저 돼고, 아래 loading, ready 수정해 주어야 한다!!!\n\n      dispatch(replaceReady(\"planTeam\", true));\n      dispatch(replaceLoading(\"planTeam\", false));\n      return;\n    };\n\n    const onError = error => {\n      dispatch(replaceReady(\"planTeam\", false));\n      dispatch(replaceLoading(\"planTeam\", false));\n      const idNotification = Date.now();\n      dispatch(addNotification(\"error\", \"Reading planTeam has failed\", idNotification));\n      setTimeout(dispatch(removeNotification(idNotification)), 5000);\n      return;\n    };\n\n    try {\n      dispatch(replaceReady(\"planTeam\", false));\n      dispatch(replaceLoading(\"planTeam\", true));\n      const response = await axios.get(`${process.env.REACT_APP_URL_AHR}/PlanTeam/${idPlanTeam}`);\n      const newPlanTeam = response.data;\n      console.log(newPlanTeam);\n      onSuccess(newPlanTeam);\n      return;\n    } // try\n    catch (error) {\n      onError(error);\n      return;\n    } //catch\n\n  };\n}; // readPlanTeam\n\n\nexport default readPlanTeam;","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/redux/thunks/readPlanTeam.js"],"names":["axios","dotenv","REPLACE_READY","REPLACE_LOADING","REPLACE_DATA","ADD_NOTIFICATION","REMOVE_NOTIFICATION","replaceReady","replaceLoading","replaceData","addNotification","removeNotification","readPlanTeam","idPlanTeam","dispatch","getState","onSuccess","newPlanTeam","onError","error","idNotification","Date","now","setTimeout","response","get","process","env","REACT_APP_URL_AHR","data","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAAQC,aAAR,EAAuBC,eAAvB,EAAwCC,YAAxC,EAAsDC,gBAAtD,EAAwEC,mBAAxE,QAAkG,UAAlG;AACA,SAAQC,YAAR,EAAsBC,cAAtB,EAAsCC,WAAtC,EAAmDC,eAAnD,EAAoEC,kBAApE,QAA6F,UAA7F,C,CAGA;;AACA,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AAEnC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,EAA2Bf,KAA3B,KAAqC;AAE1C,UAAMgB,SAAS,GAAIC,WAAD,IAAiB;AAGjCH,MAAAA,QAAQ,CAAEL,WAAW,CAAC,UAAD,EAAaQ,WAAb,CAAb,CAAR,CAHiC,CAGkB;;AAEnDH,MAAAA,QAAQ,CAAEP,YAAY,CAAC,UAAD,EAAa,IAAb,CAAd,CAAR;AACAO,MAAAA,QAAQ,CAAEN,cAAc,CAAC,UAAD,EAAa,KAAb,CAAhB,CAAR;AAEA;AACD,KATD;;AAYA,UAAMU,OAAO,GAAIC,KAAD,IAAU;AAExBL,MAAAA,QAAQ,CAAEP,YAAY,CAAC,UAAD,EAAa,KAAb,CAAd,CAAR;AACAO,MAAAA,QAAQ,CAAEN,cAAc,CAAC,UAAD,EAAa,KAAb,CAAhB,CAAR;AAEA,YAAMY,cAAc,GAAGC,IAAI,CAACC,GAAL,EAAvB;AACAR,MAAAA,QAAQ,CAAEJ,eAAe,CAAC,OAAD,EAAU,6BAAV,EAAyCU,cAAzC,CAAjB,CAAR;AACAG,MAAAA,UAAU,CACRT,QAAQ,CAAEH,kBAAkB,CAACS,cAAD,CAApB,CADA,EAEN,IAFM,CAAV;AAIA;AACD,KAZD;;AAeA,QAAI;AAEFN,MAAAA,QAAQ,CAAEP,YAAY,CAAC,UAAD,EAAa,KAAb,CAAd,CAAR;AACAO,MAAAA,QAAQ,CAAEN,cAAc,CAAC,UAAD,EAAa,IAAb,CAAhB,CAAR;AAEA,YAAMgB,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,aAAYf,UAAW,EAAnE,CAAvB;AAIA,YAAMI,WAAW,GAAGO,QAAQ,CAACK,IAA7B;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AAEAD,MAAAA,SAAS,CAACC,WAAD,CAAT;AAEA;AAED,KAjBD,CAiBE;AAEF,WAAOE,KAAP,EAAc;AAEZD,MAAAA,OAAO,CAACC,KAAD,CAAP;AAEA;AAED,KAtDyC,CAsDxC;;AAEH,GAxDD;AAyDD,CA3DD,C,CA2DE;;;AAEF,eAAgBP,YAAhB","sourcesContent":["import axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\nimport {REPLACE_READY, REPLACE_LOADING, REPLACE_DATA, ADD_NOTIFICATION, REMOVE_NOTIFICATION} from '../store';\r\nimport {replaceReady, replaceLoading, replaceData, addNotification, removeNotification} from '../store'\r\n\r\n\r\n// functions that dispatch actions which are from return fundamental action creators\r\nconst readPlanTeam = (idPlanTeam) => {   \r\n  \r\n  return async (dispatch, getState, axios) => { \r\n\r\n    const onSuccess = (newPlanTeam) => { \r\n      \r\n      \r\n      dispatch( replaceData(\"planTeam\", newPlanTeam) );  // 이게 먼저 돼고, 아래 loading, ready 수정해 주어야 한다!!!\r\n      \r\n      dispatch( replaceReady(\"planTeam\", true) );\r\n      dispatch( replaceLoading(\"planTeam\", false) ); \r\n      \r\n      return;\r\n    } \r\n\r\n\r\n    const onError = (error) =>{ \r\n      \r\n      dispatch( replaceReady(\"planTeam\", false) );\r\n      dispatch( replaceLoading(\"planTeam\", false) ); \r\n      \r\n      const idNotification = Date.now();\r\n      dispatch( addNotification(\"error\", \"Reading planTeam has failed\", idNotification) );\r\n      setTimeout(\r\n        dispatch( removeNotification(idNotification) )\r\n        , 5000);\r\n      \r\n      return; \r\n    } \r\n\r\n\r\n    try { \r\n      \r\n      dispatch( replaceReady(\"planTeam\", false) );\r\n      dispatch( replaceLoading(\"planTeam\", true) ); \r\n      \r\n      const response = await axios.get( `${process.env.REACT_APP_URL_AHR}/PlanTeam/${idPlanTeam}`);\r\n      \r\n      \r\n      \r\n      const newPlanTeam = response.data;\r\n      \r\n      console.log(newPlanTeam);\r\n      \r\n      onSuccess(newPlanTeam);\r\n  \r\n      return; \r\n      \r\n    } // try\r\n    \r\n    catch (error) { \r\n      \r\n      onError(error); \r\n      \r\n      return; \r\n      \r\n    } //catch\r\n\r\n  } \r\n} // readPlanTeam\r\n    \r\nexport default  readPlanTeam;"]},"metadata":{},"sourceType":"module"}