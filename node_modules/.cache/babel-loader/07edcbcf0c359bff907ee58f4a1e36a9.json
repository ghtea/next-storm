{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TableEntry.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { Div, Table, Tr, Td } from '../styles/DefaultStyles';\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n/* \nhttps://github.com/nomadcoders/apollo-2020/tree/59e6b2c9d5eb9317282049e4420b8897f13ca8f2/src\nhttps://github.com/nomadcoders/apollo-2020/blob/59e6b2c9d5eb9317282049e4420b8897f13ca8f2/src/routes/Detail.js\n*/\n\nconst READ_PLAYER_MMR = gql`\n  query ReadPlayerMmr ($_id: ID!) {\n  \n    readPlayerMmr (_id: $_id) {\n    \n    _id\n    \n    NA {\n      QM {mmr games_played league_tier}\n      UD {mmr games_played league_tier}\n      SL {mmr games_played league_tier}\n    }\n    EU {\n      QM {mmr games_played league_tier}\n      UD {mmr games_played league_tier}\n      SL {mmr games_played league_tier}\n    }\n    KR {\n      QM {mmr games_played league_tier}\n      UD {mmr games_played league_tier}\n      SL {mmr games_played league_tier}\n    }\n    CN {\n      QM {mmr games_played league_tier}\n      UD {mmr games_played league_tier}\n      SL {mmr games_played league_tier}\n    }\n  }\n  \n}\n`;\nconst DivTableEntry = styled(Div)`\n  margin-left: 40px;\n  margin-right: 40px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n`;\n/*\ndisplay:grid;\n*/\n\nconst DivRow = styled(Div)`\n  display: grid;\n  grid-template-columns: minmax(200px, 250px) 80px 80px 40px 40px; // min entire = 400 - 40*2\n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(1) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n    \n    border-radius: 10px  0 0;\n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  1em 5em;\n    \n    border-radius: 0 0 10px 10px;\n    border-bottom-style: none;\n  }\n`;\n\nconst RowPlayer = ({\n  _id,\n  mmr\n}) => {\n  return /*#__PURE__*/React.createElement(DivRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivBattletag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 10\n    }\n  }, \" \", _id), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }\n  }, \" \", mmr), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }\n  }, \" Tank, Bruiser\"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }\n  }, \" A \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }\n  }, \" View \"));\n};\n\nconst DivBattletag = styled(Div)`\n  padding-left: 5px;\n  display: block;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst TableEntry = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(READ_PLAYER_MMR, {\n    variables: {\n      _id: \"mbcat#1703\"\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Div, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 24\n      }\n    }, \" Loading... \");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(Div, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 22\n      }\n    }, \" Error! \");\n  }\n\n  if (data && data.readPlayerMmr) {\n    let listPlayerMmr = [data.readPlayerMmr]; //listPlayerMmr.push(objPlayerMmr);\n\n    return /*#__PURE__*/React.createElement(DivTableEntry, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }\n    }, listPlayerMmr.map((element, i) => /*#__PURE__*/React.createElement(RowPlayer, {\n      _id: element[\"_id\"],\n      mmr: element[\"mmr\"],\n      key: element[\"_id\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 10\n      }\n    })));\n  }\n};\n\nexport default TableEntry;","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TableEntry.js"],"names":["React","styled","NavLink","Div","Table","Tr","Td","gql","useQuery","READ_PLAYER_MMR","DivTableEntry","DivRow","props","theme","COLOR_normal","color_very_weak","RowPlayer","_id","mmr","DivBattletag","TableEntry","loading","error","data","variables","readPlayerMmr","listPlayerMmr","map","element","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,EAApB,EAAwBC,EAAxB,QAAiC,yBAAjC;AAEA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAGA;;;;;AAIA,MAAMC,eAAe,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA5B;AAkCA,MAAMG,aAAa,GAAGT,MAAM,CAACE,GAAD,CAAM;;;;;;;;;CAAlC;AAYA;;;;AAIA,MAAMQ,MAAM,GAAGV,MAAM,CAACE,GAAD,CAAM;;;;;sBAKLS,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,YAAa;6BAC3BF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,eAAgB;;;;;;;;;;;;;;;;;;CANlE;;AA4BA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAD,KAAgB;AAChC,sBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEK,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAgBD,GAAhB,CAFL,eAGK,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOC,GAAP,CAHL,eAKK,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALL,eAMK,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANL,eAOK,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPL,CAFF;AAaD,CAdD;;AAkBA,MAAMC,YAAY,GAAGlB,MAAM,CAACE,GAAD,CAAM;;;;;;;CAAjC;;AAYC,MAAMiB,UAAU,GAAG,MAAM;AAGxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bf,QAAQ,CAACC,eAAD,EAAkB;AACzDe,IAAAA,SAAS,EAAE;AAAEP,MAAAA,GAAG,EAAG;AAAR;AAD8C,GAAlB,CAAzC;;AAIA,MAAII,OAAJ,EAAa;AAAC,wBAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAA+B;;AAC7C,MAAIC,KAAJ,EAAW;AAAC,wBAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAA2B;;AAEvC,MAAIC,IAAI,IAAIA,IAAI,CAACE,aAAjB,EAAgC;AAE9B,QAAIC,aAAa,GAAG,CAAEH,IAAI,CAACE,aAAP,CAApB,CAF8B,CAG7B;;AAED,wBAEA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGC,aAAa,CAACC,GAAd,CAAmB,CAACC,OAAD,EAAUC,CAAV,kBAEjB,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,OAAO,CAAC,KAAD,CAAvB;AAAgC,MAAA,GAAG,EAAEA,OAAO,CAAC,KAAD,CAA5C;AAAqD,MAAA,GAAG,EAAGA,OAAO,CAAC,KAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFH,CAFA;AAYD;AACF,CA5BA;;AAgCD,eAAeR,UAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\nimport {Div, Table, Tr, Td} from '../styles/DefaultStyles';\n\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\n\n/* \nhttps://github.com/nomadcoders/apollo-2020/tree/59e6b2c9d5eb9317282049e4420b8897f13ca8f2/src\nhttps://github.com/nomadcoders/apollo-2020/blob/59e6b2c9d5eb9317282049e4420b8897f13ca8f2/src/routes/Detail.js\n*/\nconst READ_PLAYER_MMR = gql`\n  query ReadPlayerMmr ($_id: ID!) {\n  \n    readPlayerMmr (_id: $_id) {\n    \n    _id\n    \n    NA {\n      QM {mmr games_played league_tier}\n      UD {mmr games_played league_tier}\n      SL {mmr games_played league_tier}\n    }\n    EU {\n      QM {mmr games_played league_tier}\n      UD {mmr games_played league_tier}\n      SL {mmr games_played league_tier}\n    }\n    KR {\n      QM {mmr games_played league_tier}\n      UD {mmr games_played league_tier}\n      SL {mmr games_played league_tier}\n    }\n    CN {\n      QM {mmr games_played league_tier}\n      UD {mmr games_played league_tier}\n      SL {mmr games_played league_tier}\n    }\n  }\n  \n}\n`;\n\n\n\nconst DivTableEntry = styled(Div)`\n  margin-left: 40px;\n  margin-right: 40px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n`\n\n\n/*\ndisplay:grid;\n*/\n\nconst DivRow = styled(Div)`\n  display: grid;\n  grid-template-columns: minmax(200px, 250px) 80px 80px 40px 40px; // min entire = 400 - 40*2\n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(1) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n    \n    border-radius: 10px  0 0;\n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  1em 5em;\n    \n    border-radius: 0 0 10px 10px;\n    border-bottom-style: none;\n  }\n`\n\n\n\nconst RowPlayer = ({_id, mmr}) => {\n  return (\n    \n    <DivRow >\n      \n         <DivBattletag> {_id}</DivBattletag>\n         <Div> {mmr}</Div>\n         \n         <Div> Tank, Bruiser</Div>\n         <Div> A </Div>\n         <Div> View </Div>\n         \n      </DivRow>\n  )\n}\n\n\n\nconst DivBattletag = styled(Div)`\n  padding-left: 5px;\n  display: block;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\n\n\n\n const TableEntry = () => {\n   \n  \n  const { loading, error, data } = useQuery(READ_PLAYER_MMR, {\n    variables: { _id : \"mbcat#1703\" }\n  });\n  \n  if (loading) {return <Div> Loading... </Div>}\n  if (error) {return <Div> Error! </Div>}\n  \n  if (data && data.readPlayerMmr) {\n    \n    let listPlayerMmr = [ data.readPlayerMmr ]\n     //listPlayerMmr.push(objPlayerMmr);\n    \n    return (\n    \n    <DivTableEntry>\n    \n      {listPlayerMmr.map( (element, i) => \n      \n        (<RowPlayer _id={element[\"_id\"]} mmr={element[\"mmr\"]} key={ element[\"_id\"] } />)\n  \n      )}\n    \n    </DivTableEntry>\n    )\n  }\n}\n  \n\t  \n\nexport default TableEntry;"]},"metadata":{},"sourceType":"module"}