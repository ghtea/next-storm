{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport axios from 'axios';\nimport dotenv from 'dotenv';\nimport reducer from './reducer';\nexport const REPLACE_READY = \"REPLACE_READY\";\nexport const REPLACE_LOADING = \"REPLACE_LOADING\";\nexport const REPLACE_DATA = \"REPLACE_DATA\";\nexport const ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\nexport const REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\"; // fundamental action creator\n\nexport const replaceReady = (which, true_false) => {\n  return {\n    type: REPLACE_READY,\n    which: which,\n    true_false: true_false\n  };\n};\nexport const replaceLoading = (which, true_false) => {\n  return {\n    type: REPLACE_LOADING,\n    which: which,\n    true_false: true_false\n  };\n};\nexport const replaceData = (which, newData) => {\n  return {\n    type: REPLACE_DATA,\n    which: which,\n    data: newData\n  };\n};\nexport const addNotification = (situation, message, idNotification) => {\n  return {\n    type: ADD_NOTIFICATION,\n    situation: situation,\n    message: message,\n    idNotification: idNotification\n  };\n};\nexport const removeNotification = idNotification => {\n  return {\n    type: REMOVE_NOTIFICATION,\n    idNotification: idNotification\n  };\n};\nconst store = createStore(reducer, applyMiddleware(thunk.withExtraArgument(axios)));\nexport default store; //https://github.com/nomadcoders/vanilla-redux/blob/ccaa1acd081f27239f2cc8ad3c571bd0a9923f73/src/store.js","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","logger","axios","dotenv","reducer","REPLACE_READY","REPLACE_LOADING","REPLACE_DATA","ADD_NOTIFICATION","REMOVE_NOTIFICATION","replaceReady","which","true_false","type","replaceLoading","replaceData","newData","data","addNotification","situation","message","idNotification","removeNotification","store","withExtraArgument"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAGA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B,C,CAIP;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACjD,SAAO;AACLC,IAAAA,IAAI,EAAER,aADD;AAELM,IAAAA,KAAK,EAAEA,KAFF;AAGLC,IAAAA,UAAU,EAAEA;AAHP,GAAP;AAKD,CANM;AAQP,OAAO,MAAME,cAAc,GAAG,CAACH,KAAD,EAAQC,UAAR,KAAuB;AACnD,SAAO;AACLC,IAAAA,IAAI,EAAEP,eADD;AAELK,IAAAA,KAAK,EAAEA,KAFF;AAGLC,IAAAA,UAAU,EAAEA;AAHP,GAAP;AAKD,CANM;AAQP,OAAO,MAAMG,WAAW,GAAG,CAACJ,KAAD,EAAQK,OAAR,KAAoB;AAC7C,SAAO;AACLH,IAAAA,IAAI,EAAEN,YADD;AAELI,IAAAA,KAAK,EAAEA,KAFF;AAGLM,IAAAA,IAAI,EAAED;AAHD,GAAP;AAMD,CAPM;AASP,OAAO,MAAME,eAAe,GAAG,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,cAArB,KAAwC;AACrE,SAAO;AACLR,IAAAA,IAAI,EAAEL,gBADD;AAELW,IAAAA,SAAS,EAAEA,SAFN;AAGLC,IAAAA,OAAO,EAAEA,OAHJ;AAILC,IAAAA,cAAc,EAAEA;AAJX,GAAP;AAMD,CAPM;AASP,OAAO,MAAMC,kBAAkB,GAAID,cAAD,IAAoB;AACpD,SAAO;AACLR,IAAAA,IAAI,EAAEJ,mBADD;AAELY,IAAAA,cAAc,EAAEA;AAFX,GAAP;AAID,CALM;AAWP,MAAME,KAAK,GAAGzB,WAAW,CACvBM,OADuB,EAEvBL,eAAe,CAACC,KAAK,CAACwB,iBAAN,CAAwBtB,KAAxB,CAAD,CAFQ,CAAzB;AAMA,eAAeqB,KAAf,C,CAEA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\nimport reducer from './reducer';\r\n\r\n\r\nexport const REPLACE_READY = \"REPLACE_READY\";\r\nexport const REPLACE_LOADING = \"REPLACE_LOADING\";\r\nexport const REPLACE_DATA = \"REPLACE_DATA\";\r\n\r\nexport const ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\r\nexport const REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\r\n\r\n\r\n\r\n// fundamental action creator\r\nexport const replaceReady = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_READY,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nexport const replaceLoading = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_LOADING,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nexport const replaceData = (which, newData) => {\r\n  return {\r\n    type: REPLACE_DATA,\r\n    which: which,\r\n    data: newData\r\n  }\r\n  \r\n}\r\n\r\nexport const addNotification = (situation, message, idNotification) => {\r\n  return {\r\n    type: ADD_NOTIFICATION,\r\n    situation: situation,\r\n    message: message,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\nexport const removeNotification = (idNotification) => {\r\n  return {\r\n    type: REMOVE_NOTIFICATION,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunk.withExtraArgument(axios))\r\n)\r\n\r\n\r\nexport default store;\r\n\r\n//https://github.com/nomadcoders/vanilla-redux/blob/ccaa1acd081f27239f2cc8ad3c571bd0a9923f73/src/store.js"]},"metadata":{},"sourceType":"module"}