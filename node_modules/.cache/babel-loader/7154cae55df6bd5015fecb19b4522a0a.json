{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/Result.js\";\nimport dotenv from 'dotenv';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { addResult } from \"../../redux/store\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\"; // https://reacttraining.com/blog/react-router-v5-1/\n\nimport { Div, Table, Tr, Td } from '../../styles/DefaultStyles';\nimport IconLoading from '../../svgs/IconLoading';\nimport IconConfirmed from '../../svgs/IconConfirmed';\nimport IconPending from '../../svgs/IconPending';\nimport IconInfo from '../../svgs/IconInfo';\nimport IconMagic from '../../svgs/basic/IconMagic';\nconst DivResult = styled(Div)`\n  width: 100%;\n  max-width: 600px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n  padding-bottom: 10px;\n`;\nconst DivTitle = styled(Div)`\n  margin-top: 10px;\n  font-size: 1.2rem;\n  font-weight: bold;\n  \n  margin-bottom: 10px;\n`;\n\nconst Result = ({\n  planTeam,\n  addResult\n}) => {\n  const [result, setResult] = useState(0); //useEffect(()=>{console.log(\"Entry has been rerendered\")})\n  ///\n\n  const numberTeams = 2;\n\n  for (var i = 0; i < numberTeams; i++) {} ///\n\n\n  const listPlayerEntry = planTeam.listPlayerEntry; // list of objPlayer\n\n  let listPlayer = Object.keys(listPlayerEntry).map(element => listPlayerEntry[element]._id); // list of battletags\n\n  let orderPlayer;\n  let objTeams = {};\n  let listTeamName = []; // 1. confirmed - 2. leader - 3. less roles player(2, 1) - 4. rest\n\n  const onClick_generateTeams = event => {\n    orderPlayer = listPlayer.sort((player1, player2) => {\n      // mmr 높은순으로 list of battletags\n      const objPlayer1 = listPlayerEntry.find(objPlayer => objPlayer._id === player1);\n      const objPlayer2 = listPlayerEntry.find(objPlayer => objPlayer._id === player2);\n      return objPlayer2.mmr.standard.NA - objPlayer1.mmr.standard.NA; // ex 3333, 222, 1111\n    });\n    const listPlayerLeader = orderPlayer.filter(battletagPlayer => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletagPlayer);\n      return objPlayer.tags.includes(\"leader\");\n    });\n    console.log(listPlayerLeader); //orderPlayer = \n    //console.log(orderPlayer)\n\n    for (var i = 0; i < numberTeams; i++) {\n      const teamName = `team${i + 1}`;\n      objTeams[teamName] = `it is ${teamName}`;\n      listTeamName.push(teamName);\n    }\n\n    setResult(result + 1);\n    console.log(result);\n    console.log(objTeams);\n    /*\r\n    {\r\n      _id: String,\r\n      listPlayerBattletag: [String],\r\n      name: String,\r\n      group: String\r\n    }\r\n    */\n\n    let team1 = {\n      _id: Date.now(),\n      listPlayerBattletag: [\"mbcat#1234\", \"mbcat#1703\"],\n      name: \"dragon team\"\n    };\n    let resultTeam = {\n      added: Date.now(),\n      listTeam: [team1]\n    };\n    addResult(resultTeam);\n  };\n\n  return /*#__PURE__*/React.createElement(DivResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, \" Result \"), /*#__PURE__*/React.createElement(Div, {\n    onClick: onClick_generateTeams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, \"button\"), result && listTeamName.map(element => /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, \" \", element, \" \")));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    planTeam: state.planTeam //listPlayerEntry: [...state.planTeam.listPlayerEntry]\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\n    //,readyPlanTeam: state.ready.planTeam\n    //,loading: state.loading\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addResult: resultTeam => dispatch(addResult(resultTeam))\n  };\n} // TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/Result.js"],"names":["dotenv","React","useState","useEffect","styled","axios","NavLink","useParams","connect","addResult","readPlanTeam","Div","Table","Tr","Td","IconLoading","IconConfirmed","IconPending","IconInfo","IconMagic","DivResult","DivTitle","Result","planTeam","result","setResult","numberTeams","i","listPlayerEntry","listPlayer","Object","keys","map","element","_id","orderPlayer","objTeams","listTeamName","onClick_generateTeams","event","sort","player1","player2","objPlayer1","find","objPlayer","objPlayer2","mmr","standard","NA","listPlayerLeader","filter","battletagPlayer","tags","includes","console","log","teamName","push","team1","Date","now","listPlayerBattletag","name","resultTeam","added","listTeam","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\r\nimport React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {addResult} from \"../../redux/store\";\r\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\r\n// https://reacttraining.com/blog/react-router-v5-1/\r\n\r\nimport {Div, Table, Tr, Td} from '../../styles/DefaultStyles';\r\n\r\nimport IconLoading from '../../svgs/IconLoading'\r\n\r\nimport IconConfirmed from '../../svgs/IconConfirmed'\r\nimport IconPending from '../../svgs/IconPending'\r\nimport IconInfo from '../../svgs/IconInfo'\r\nimport IconMagic from  '../../svgs/basic/IconMagic'\r\n\r\n\r\n\r\nconst DivResult = styled(Div)`\r\n  width: 100%;\r\n  max-width: 600px;\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  \r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst DivTitle = styled(Div)`\r\n  margin-top: 10px;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  \r\n  margin-bottom: 10px;\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Result = ({planTeam, addResult}) => {\r\n  \r\n  const [result, setResult] = useState(0);\r\n  //useEffect(()=>{console.log(\"Entry has been rerendered\")})\r\n  \r\n  ///\r\n  const numberTeams = 2;\r\n  \r\n  for (var i =0; i<numberTeams; i++) {\r\n    \r\n  }\r\n  \r\n  \r\n  ///\r\n  const listPlayerEntry = planTeam.listPlayerEntry; // list of objPlayer\r\n  let listPlayer = (Object.keys(listPlayerEntry)).map(element=>listPlayerEntry[element]._id); // list of battletags\r\n  \r\n  let orderPlayer;\r\n  let objTeams = {};\r\n  let listTeamName = [];\r\n\r\n  // 1. confirmed - 2. leader - 3. less roles player(2, 1) - 4. rest\r\n  const onClick_generateTeams = (event) => {\r\n    \r\n    \r\n    orderPlayer = listPlayer.sort( (player1, player2) => {    // mmr 높은순으로 list of battletags\r\n      \r\n      const objPlayer1 = listPlayerEntry.find(objPlayer => objPlayer._id === player1)\r\n      const objPlayer2 = listPlayerEntry.find(objPlayer => objPlayer._id === player2)\r\n      \r\n      return (objPlayer2.mmr.standard.NA - objPlayer1.mmr.standard.NA);\r\n      // ex 3333, 222, 1111\r\n    });\r\n    \r\n    const listPlayerLeader = orderPlayer.filter(\r\n      battletagPlayer => {\r\n        const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletagPlayer)\r\n        return (objPlayer.tags.includes(\"leader\"))\r\n      }\r\n    )\r\n    \r\n    console.log(listPlayerLeader);\r\n    //orderPlayer = \r\n    //console.log(orderPlayer)\r\n    \r\n    for (var i =0; i<numberTeams; i++) {\r\n      const teamName = `team${i+1}`;\r\n      objTeams[teamName] = `it is ${teamName}`\r\n      listTeamName.push(teamName);\r\n    }\r\n    \r\n    setResult(result+1);\r\n    console.log(result)\r\n    console.log(objTeams);\r\n    \r\n    /*\r\n    {\r\n      _id: String,\r\n      listPlayerBattletag: [String],\r\n      name: String,\r\n      group: String\r\n    }\r\n    */\r\n    \r\n    let team1 = {\r\n      _id: Date.now()\r\n      ,listPlayerBattletag: [\"mbcat#1234\", \"mbcat#1703\"]\r\n      ,name: \"dragon team\"\r\n    }\r\n    \r\n    let resultTeam = {\r\n      added: Date.now()\r\n      ,listTeam: [\r\n        team1\r\n        \r\n      ]\r\n    }\r\n    \r\n    addResult(resultTeam);\r\n  }\r\n  \r\n  \r\n  \r\n  return (\r\n  \r\n  <DivResult>\r\n    \r\n    <DivTitle> Result </DivTitle>\r\n    \r\n    <Div onClick={onClick_generateTeams}> \r\n      button\r\n    </Div>\r\n  \r\n    {result && listTeamName.map(element=>\r\n      <Div> {element} </Div>\r\n    )}\r\n    \r\n    \r\n  </DivResult>\r\n    \r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction mapStateToProps(state) { \r\n  return { \r\n    planTeam: state.planTeam\r\n    //listPlayerEntry: [...state.planTeam.listPlayerEntry]\r\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\r\n    //,readyPlanTeam: state.ready.planTeam\r\n    //,loading: state.loading\r\n  }; \r\n} \r\n\r\nfunction mapDispatchToProps(dispatch) { \r\n  return { \r\n    addResult: (resultTeam) => dispatch( addResult(resultTeam) ) \r\n  }; \r\n}\r\n\r\n\r\n// TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);"]},"metadata":{},"sourceType":"module"}