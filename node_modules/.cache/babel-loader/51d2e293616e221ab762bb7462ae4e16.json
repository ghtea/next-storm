{"ast":null,"code":"const REPLACE_READY = \"REPLACE_READY\";\nconst REPLACE_LOADING = \"REPLACE_LOADING\";\nconst REPLACE_DATA = \"REPLACE_DATA\";\nconst ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\nconst REPLACE_NOTIFICATION = \"REPLACE_NOTIFICATION\";\n\nconst reducerRoot = ( // 기본값 설정\nstate = {\n  // foundamental \n  ready: {\n    planTeam: false\n  },\n  loading: {\n    planTeam: false\n  },\n  notification: [],\n  // others\n  planTeam: {}\n}, // 액션별로 새로운 state 반환하기\naction) => {\n  switch (action.type) {\n    case REPLACE_DATA:\n      return { ...state,\n        [action.which]: action.data\n      };\n\n    case REPLACE_READY:\n      return { ...state,\n        ready: { ...state.ready,\n          [action.which]: action.true_false\n        }\n      };\n\n    case REPLACE_LOADING:\n      return { ...state,\n        loading: { ...state.loading,\n          [action.which]: action.true_false\n        }\n      };\n\n    case ADD_NOTIFICATION:\n      return { ...state,\n        notification: [...state.notification, {\n          situation: action.situation,\n          message: action.message\n        }]\n      };\n\n    case REMOVE_NOTIFICATION:\n      return { ...state,\n        notification: state.notification.filter(element => element.idNotification !== action.idNotification)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducerRoot;","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/reducers/root.js"],"names":["REPLACE_READY","REPLACE_LOADING","REPLACE_DATA","ADD_NOTIFICATION","REPLACE_NOTIFICATION","reducerRoot","state","ready","planTeam","loading","notification","action","type","which","data","true_false","situation","message","REMOVE_NOTIFICATION","filter","element","idNotification"],"mappings":"AAAA,MAAMA,aAAa,GAAG,eAAtB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,MAAMC,WAAW,GAAG,EAElB;AACAC,KAAK,GAAG;AAEN;AACAC,EAAAA,KAAK,EAAG;AACNC,IAAAA,QAAQ,EAAE;AADJ,GAHF;AAONC,EAAAA,OAAO,EAAG;AACRD,IAAAA,QAAQ,EAAE;AADF,GAPJ;AAWNE,EAAAA,YAAY,EAAG,EAXT;AAcN;AACAF,EAAAA,QAAQ,EAAE;AAfJ,CAHU,EAsBlB;AACAG,MAvBkB,KAuBP;AAEX,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKV,YAAL;AACE,aAAO,EACN,GAAGI,KADG;AAEN,SAACK,MAAM,CAACE,KAAR,GAAgBF,MAAM,CAACG;AAFjB,OAAP;;AAKF,SAAKd,aAAL;AACE,aAAO,EACN,GAAGM,KADG;AAENC,QAAAA,KAAK,EAAE,EACL,GAAGD,KAAK,CAACC,KADJ;AAEL,WAACI,MAAM,CAACE,KAAR,GAAgBF,MAAM,CAACI;AAFlB;AAFD,OAAP;;AAQF,SAAKd,eAAL;AACE,aAAO,EACN,GAAGK,KADG;AAENG,QAAAA,OAAO,EAAE,EACP,GAAGH,KAAK,CAACG,OADF;AAEP,WAACE,MAAM,CAACE,KAAR,GAAgBF,MAAM,CAACI;AAFhB;AAFH,OAAP;;AAQF,SAAKZ,gBAAL;AACE,aAAO,EACN,GAAGG,KADG;AAENI,QAAAA,YAAY,EAAE,CACZ,GAAGJ,KAAK,CAACI,YADG,EAEZ;AACEM,UAAAA,SAAS,EAAEL,MAAM,CAACK,SADpB;AAEGC,UAAAA,OAAO,EAAEN,MAAM,CAACM;AAFnB,SAFY;AAFR,OAAP;;AAWF,SAAKC,mBAAL;AACE,aAAO,EACN,GAAGZ,KADG;AAENI,QAAAA,YAAY,EAAEJ,KAAK,CAACI,YAAN,CAAmBS,MAAnB,CAA0BC,OAAO,IAAIA,OAAO,CAACC,cAAR,KAA2BV,MAAM,CAACU,cAAvE;AAFR,OAAP;;AASF;AACE,aAAOf,KAAP;AAjDJ;AAmDD,CA5ED;;AA+EA,eAAeD,WAAf","sourcesContent":["const REPLACE_READY = \"REPLACE_READY\";\nconst REPLACE_LOADING = \"REPLACE_LOADING\";\nconst REPLACE_DATA = \"REPLACE_DATA\";\n\nconst ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\nconst REPLACE_NOTIFICATION = \"REPLACE_NOTIFICATION\";\n\nconst reducerRoot = (\n  \n  // 기본값 설정\n  state = { \n    \n    // foundamental \n    ready : {\n      planTeam: false\n    },\n    \n    loading : {\n      planTeam: false\n    }, \n    \n    notification : [],\n    \n    \n    // others\n    planTeam: {}\n    \n  }, \n  \n  // 액션별로 새로운 state 반환하기\n  action) => {\n    \n  switch (action.type) {\n    \n    case REPLACE_DATA:\n      return {\n      \t...state, \n      \t[action.which]: action.data\n      };\n      \n    case REPLACE_READY:\n      return {\n      \t...state, \n      \tready: {\n      \t  ...state.ready,\n      \t  [action.which]: action.true_false\n      \t}\n      };\n      \n    case REPLACE_LOADING:\n      return {\n      \t...state, \n      \tloading: {\n      \t  ...state.loading,\n      \t  [action.which]: action.true_false\n      \t}\n      };\n      \n    case ADD_NOTIFICATION:\n      return {\n      \t...state, \n      \tnotification: [\n      \t  ...state.notification,\n      \t  {\n      \t    situation: action.situation\n      \t    ,message: action.message\n      \t  }\n      \t]\n      };\n    \n    case REMOVE_NOTIFICATION:\n      return {\n      \t...state, \n      \tnotification: state.notification.filter(element => element.idNotification !== action.idNotification)\n      };\n    \n    \n    \n    \n    \n    default:\n      return state;\n  }\n};\n\n\nexport default reducerRoot;\n"]},"metadata":{},"sourceType":"module"}