{"ast":null,"code":"var _jsxFileName = \"/usr/projects/next-storm/src/components/CompGallery/Gallery.js\";\nimport dotenv from 'dotenv';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\nimport { replaceWorking } from \"../../redux/store\";\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Div, Input, Button } from '../../styles/DefaultStyles';\nimport useInput from '../../tools/hooks/useInput';\nimport { getTimeStamp } from '../../tools/vanilla/time';\nimport IconWorking from '../../svgs/IconWorking';\nconst DivGallery = styled(Div)`\n  width: 100%;\n  height:100%;\n  \n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  \n  flex-wrap: wrap;\n`;\n\nconst Gallery = ({}) => {\n  return /*#__PURE__*/React.createElement(DivGallery, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, \"...\");\n};\n\nfunction mapStateToProps(state) {\n  return {//ready: state.ready \n    // ,loading: state.loading\n    ///,working: state.working\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {//readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n    //,addRemoveNotification: (situation, message, time, idNotification) => dispatch( addRemoveNotification(situation, message, time, idNotification) )\n    //,replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Gallery);","map":{"version":3,"sources":["/usr/projects/next-storm/src/components/CompGallery/Gallery.js"],"names":["dotenv","React","useState","styled","axios","connect","addRemoveNotification","replaceWorking","NavLink","useHistory","Div","Input","Button","useInput","getTimeStamp","IconWorking","DivGallery","Gallery","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,qBAAP,MAAkC,0CAAlC;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AAEA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AAEA,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,MAApB,QAAiC,4BAAjC;AAGA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,YAAR,QAA2B,0BAA3B;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AAKA,MAAMC,UAAU,GAAGb,MAAM,CAACO,GAAD,CAAM;;;;;;;;;;CAA/B;;AAcC,MAAMO,OAAO,GAAG,CAAC,EAAD,KAAQ;AAIvB,sBAEA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFA;AAQD,CAZA;;AAiBD,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO,CACL;AACD;AACC;AAHK,GAAP;AAKD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO,CACL;AACA;AACA;AAHK,GAAP;AAKD,C,CAED;;;AACA,eAAehB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CH,OAA7C,CAAf","sourcesContent":["import dotenv from 'dotenv';\nimport React, {useState} from 'react';\nimport styled from 'styled-components';\n\nimport axios from 'axios';\n\nimport { connect } from \"react-redux\";\n\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\nimport {replaceWorking} from \"../../redux/store\";\n\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport {Div, Input, Button} from '../../styles/DefaultStyles';\n\n\nimport useInput from '../../tools/hooks/useInput';\nimport {getTimeStamp} from '../../tools/vanilla/time';\n\nimport IconWorking from '../../svgs/IconWorking'\n\n\n\n\nconst DivGallery = styled(Div)`\n  width: 100%;\n  height:100%;\n  \n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  \n  flex-wrap: wrap;\n`;\n\n\n\n const Gallery = ({}) => {\n  \n\n  \n  return (\n  \n  <DivGallery>\n    ...\n  </DivGallery>\n  \n  )\n\n}\n  \n  \n\n\nfunction mapStateToProps(state) { \n  return { \n    //ready: state.ready \n   // ,loading: state.loading\n    ///,working: state.working\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    //readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n    //,addRemoveNotification: (situation, message, time, idNotification) => dispatch( addRemoveNotification(situation, message, time, idNotification) )\n    //,replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(Gallery);"]},"metadata":{},"sourceType":"module"}