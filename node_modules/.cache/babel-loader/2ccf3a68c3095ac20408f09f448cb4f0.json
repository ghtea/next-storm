{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport Sub from \"./routes/Sub\";\nimport Home from \"./routes/Home\";\nimport TeamGenerator from \"./routes/TeamGenerator\";\nimport { ThemeProvider } from 'styled-components';\nimport { dark, light } from \"./styles/themes\";\nimport { GlobalStyle, Div } from './styles/DefaultStyles';\nimport './styles/font.css';\nconst DivSubContainer = styled();\nconst DivContent = styled(Div)`\n   \n  \n  @media (max-width: 540px) {\n    margin-top: 50px; /* height of sub */\n  \t\n  \twidth: 100%;\n\t  height: 100%;\n  \t\n\t}\n \n\t @media (min-width: 541px) {\n\t  margin-left: 160px; /* width of nav */\n\t \n\t\twidth: 100%;\n\t  height: 100%;\n\t \n\t\t\n\t }\n  \n`;\n\nclass App extends React.Component {\n  isDarkMode() {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      themeApp: 'light'\n    };\n  }\n\n  componentDidMount() {\n    // we use as string here but we should use as object (without comma) when pass to theme in ThemeProvicer\n    let themeDevice = this.isDarkMode() ? 'dark' : 'light';\n    this.setState(prevState => {\n      return { ...prevState,\n        themeApp: themeDevice\n      };\n    });\n  }\n\n  render() {\n    const {\n      themeApp\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: themeApp === 'light' ? light : dark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GlobalStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DivSubContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      component: Sub,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(DivContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/team-generator\",\n      component: TeamGenerator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","styled","Sub","Home","TeamGenerator","ThemeProvider","dark","light","GlobalStyle","Div","DivSubContainer","DivContent","App","isDarkMode","window","matchMedia","matches","constructor","props","state","themeApp","componentDidMount","themeDevice","setState","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,SAAQC,aAAR,QAA6B,mBAA7B;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,iBAA1B;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAgC,wBAAhC;AAEA,OAAO,mBAAP;AAGA,MAAMC,eAAe,GAAGT,MAAM,EAA9B;AAEA,MAAMU,UAAU,GAAGV,MAAM,CAACQ,GAAD,CAAM;;;;;;;;;;;;;;;;;;;;CAA/B;;AAsBA,MAAMG,GAAN,SAAkBhB,KAAK,CAACC,SAAxB,CAAkC;AAEhCgB,EAAAA,UAAU,GAAG;AACX,QAAIC,MAAM,CAACC,UAAP,IAAqBD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAA3E,EAAoF;AAClF,aAAO,IAAP;AACD,KAFD,MAGK;AACH,aAAO,KAAP;AACD;AACF;;AAGDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACE,QAAIC,WAAW,GAAG,KAAKT,UAAL,KAAoB,MAApB,GAA6B,OAA/C;AAEA,SAAKU,QAAL,CAAcC,SAAS,IAAG;AACtB,aAAM,EACJ,GAAGA,SADC;AAEJJ,QAAAA,QAAQ,EAAEE;AAFN,OAAN;AAID,KALH;AAQH;;AAEDG,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEL,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AAEA,wBACE,uDACA,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEC,QAAQ,KAAK,OAAb,GAAuBb,KAAvB,GAA+BD,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAKA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEJ,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFF,eAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAE,IAAvB;AAA6B,MAAA,SAAS,EAAEC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA+B,MAAA,SAAS,EAAEC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADA,CANF,CALA,CADA,CADF;AA0BD;;AAjE+B;;AAoElC,eAAeQ,GAAf","sourcesContent":["import React, { Component }  from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nimport Sub from \"./routes/Sub\";\nimport Home from \"./routes/Home\";\nimport TeamGenerator from \"./routes/TeamGenerator\";\n\nimport {ThemeProvider } from 'styled-components';\nimport {dark, light} from \"./styles/themes\"\nimport { GlobalStyle, Div} from './styles/DefaultStyles';\n\nimport './styles/font.css';\n\n\nconst DivSubContainer = styled()\n\nconst DivContent = styled(Div)`\n   \n  \n  @media (max-width: 540px) {\n    margin-top: 50px; /* height of sub */\n  \t\n  \twidth: 100%;\n\t  height: 100%;\n  \t\n\t}\n \n\t @media (min-width: 541px) {\n\t  margin-left: 160px; /* width of nav */\n\t \n\t\twidth: 100%;\n\t  height: 100%;\n\t \n\t\t\n\t }\n  \n`;\n\nclass App extends React.Component {\n    \n  isDarkMode() {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }  \n    \n    \n  constructor(props){\n      super(props);\n      \n      this.state = {\n          themeApp: 'light'\n      };\n      \n  }\n  \n  componentDidMount() {\n    // we use as string here but we should use as object (without comma) when pass to theme in ThemeProvicer\n      let themeDevice = this.isDarkMode() ? 'dark' : 'light';\n      \n      this.setState(prevState =>{\n          return{\n            ...prevState,\n            themeApp: themeDevice\n          }\n        })\n      \n    \n  }\n  \n  render() {\n    \n    const { themeApp } = this.state;\n    \n    return (\n      <>\n      <ThemeProvider theme={themeApp === 'light' ? light : dark }>\n      \n      \n      <GlobalStyle/>\n      \n      <BrowserRouter>\n        \n        <DivSubContainer>\n        <Route path=\"/\" component={Sub} />\n        </DivSubContainer>\n        \n        <DivContent>\n        <Switch >\n        <Route path=\"/\" exact={true} component={Home} />\n        <Route path=\"/team-generator\"  component={TeamGenerator} />\n        </Switch >\n        </DivContent>\n        \n      </BrowserRouter>\n      \n      \n      </ThemeProvider>\n      </>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}