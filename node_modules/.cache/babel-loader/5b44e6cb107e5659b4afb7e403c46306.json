{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/Result.js\";\nimport dotenv from 'dotenv';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios'; //import path from 'path'\n\nimport { NavLink, useParams } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { addResult } from \"../../redux/store\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\"; // https://reacttraining.com/blog/react-router-v5-1/\n\nimport { Div, Table, Tr, Td } from '../../styles/DefaultStyles';\nimport IconLoading from '../../svgs/IconLoading';\nimport IconConfirmed from '../../svgs/IconConfirmed';\nimport IconPending from '../../svgs/IconPending';\nimport IconInfo from '../../svgs/IconInfo'; // 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\n//dotenv.config() ;\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\n\nconst DivResult = styled(Div)`\n  width: 100%;\n  max-width: 600px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n  padding-bottom: 10px;\n`;\nconst DivTitle = styled(Div)`\n  margin-top: 10px;\n  font-size: 1.2rem;\n  font-weight: bold;\n  \n  margin-bottom: 10px;\n`;\nconst DivTableEntry = styled(Div)`\n  \n  padding-left: 20px;\n  padding-right: 20px;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n`;\nconst DivIconLoading = styled(Div)`\n  margin-top: 10px;\n`;\n/*\r\ndisplay:grid;\r\n*/\n\nconst DivRowHeader = styled(Div)`\n  color: ${props => props.theme.color_weak};\n  display: grid;\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; /* min entire = 400 - 20*2 = 360 */\n  grid-template-rows: 24px;\n  \n  & > Div {\n    font-weight: thin;\n  }\n  //background-color: ${props => props.theme.COLOR_normal};\n   \n  //border-radius:  8px;\n`;\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; // min entire = 400 - 20*2 = 360\n  grid-template-rows: 40px;\n  \n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  &:last-child {\n    border-bottom-style: none;\n  }\n`;\n/*\r\nconst DivRowPlayer = styled(Div)`\r\n  display: grid;\r\n  grid-template-columns: 1fr 60px ${30*4}px 40px 40px; \r\n  grid-template-rows: 40px;\r\n  \r\n  background-color: ${props => props.theme.COLOR_normal};\r\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\r\n  \r\n  \r\n  &:nth-child(2) {\r\n    border-top-left-radius:    10px;\r\n    border-top-right-radius:   10px;\r\n    \r\n  }\r\n  \r\n  &:last-child {\r\n    border-bottom-right-radius: 10px;\r\n    border-bottom-left-radius:  10px;\r\n    \r\n    border-bottom-style: none;\r\n    \r\n  }\r\n*/\n\nconst DivBattletagHeader = styled(Div)`\n  padding-left: 10px;\n  \n  display: block;\n  text-algin: left;\n`;\nconst DivBattletag = styled(Div)`\n  padding-left: 10px;\n  display: block;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst RowPlayer = ({\n  battletag,\n  mmr,\n  statusPlayer\n}) => {\n  useEffect(() => {\n    console.log(\"Each row has been rerendered\");\n  });\n  const IconStatus = {\n    pending: /*#__PURE__*/React.createElement(IconPending, {\n      width: \"20px\",\n      height: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 14\n      }\n    }),\n    confirmed: /*#__PURE__*/React.createElement(IconConfirmed, {\n      width: \"20px\",\n      height: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(DivRowPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivBattletag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, battletag), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, \"(roles)\"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, mmr), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, IconStatus[statusPlayer]), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconInfo, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Result = ({\n  planTeam,\n  addResult\n}) => {\n  const [result, setResult] = useState(0); //useEffect(()=>{console.log(\"Entry has been rerendered\")})\n  ///\n\n  const numberTeams = 2;\n\n  for (var i = 0; i < numberTeams; i++) {} ///\n\n\n  const listPlayerEntry = planTeam.listPlayerEntry; // list of objPlayer\n\n  let listPlayer = Object.keys(listPlayerEntry).map(element => listPlayerEntry[element]._id); // list of battletags\n\n  let orderPlayer;\n  let objTeams = {};\n  let listTeamName = []; // 1. confirmed - 2. leader - 3. less roles player(2, 1) - 4. rest\n\n  const onClick_generateTeams = event => {\n    orderPlayer = listPlayer.sort((player1, player2) => {\n      // mmr 높은순으로 list of battletags\n      const objPlayer1 = listPlayerEntry.find(objPlayer => objPlayer._id === player1);\n      const objPlayer2 = listPlayerEntry.find(objPlayer => objPlayer._id === player2);\n      return objPlayer2.mmr.standard.NA - objPlayer1.mmr.standard.NA; // ex 3333, 222, 1111\n    });\n    const listPlayerLeader = orderPlayer.filter(battletagPlayer => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletagPlayer);\n      return objPlayer.tags.includes(\"leader\");\n    });\n    console.log(listPlayerLeader); //orderPlayer = \n    //console.log(orderPlayer)\n\n    for (var i = 0; i < numberTeams; i++) {\n      const teamName = `team${i + 1}`;\n      objTeams[teamName] = `it is ${teamName}`;\n      listTeamName.push(teamName);\n    }\n\n    setResult(result + 1);\n    console.log(result);\n    console.log(objTeams);\n    /*\r\n    {\r\n      _id: String,\r\n      listPlayerBattletag: [String],\r\n      name: String,\r\n      group: String\r\n    }\r\n    */\n\n    let team1 = {\n      _id: Date.now(),\n      listPlayerBattletag: [\"mbcat#1234\", \"mbcat#1703\"],\n      name: \"dragon team\"\n    };\n    let resultTeam = {\n      added: Date.now(),\n      listTeam: [team1]\n    };\n    addResult(resultTeam);\n  };\n\n  return /*#__PURE__*/React.createElement(DivResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }\n  }, \" Result \"), /*#__PURE__*/React.createElement(Div, {\n    onClick: onClick_generateTeams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }\n  }, \"button\"), result && listTeamName.map(element => /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }, \" \", element, \" \")));\n};\n/*\r\n{(readyPlanTeam)? orderPlayerEntry[0][\"_id\"] : \"loading...\" }\r\n    {(readyPlanTeam)? orderPlayerEntry[9][\"_id\"] : \"loading...\"}\r\n*/\n\n/*\r\n    <DivTableEntry> \r\n    \r\n    <DivRowHeader> \r\n      <DivBattletagHeader>  battletag </DivBattletagHeader>\r\n      <Div> roles </Div>\r\n      <Div> mmr </Div>\r\n      <Div> status </Div>\r\n      \r\n       \r\n      <Div> </Div>\r\n    </DivRowHeader>\r\n    \r\n    { \r\n      ( listPlayerEntry ).map( (player, i) =>\r\n      \r\n        < RowPlayer \r\n          key={ `${player._id}_${(new Date().getTime()).toString()}` }\r\n          battletag={player._id} \r\n          mmr={player.mmr.standard.NA} \r\n          statusPlayer={player.status} \r\n        /> \r\n      )\r\n    }\r\n      \r\n    </DivTableEntry>\r\n    \r\n*/\n//<button onClick= {refetch} > Refectch </button>\n\n\nfunction mapStateToProps(state) {\n  return {\n    planTeam: state.planTeam //listPlayerEntry: [...state.planTeam.listPlayerEntry]\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\n    //,readyPlanTeam: state.ready.planTeam\n    //,loading: state.loading\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addResult: resultTeam => dispatch(addResult(resultTeam))\n  };\n} // TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/Result.js"],"names":["dotenv","React","useState","useEffect","styled","axios","NavLink","useParams","connect","addResult","readPlanTeam","Div","Table","Tr","Td","IconLoading","IconConfirmed","IconPending","IconInfo","DivResult","DivTitle","DivTableEntry","DivIconLoading","DivRowHeader","props","theme","color_weak","COLOR_normal","DivRowPlayer","color_very_weak","DivBattletagHeader","DivBattletag","RowPlayer","battletag","mmr","statusPlayer","console","log","IconStatus","pending","confirmed","Result","planTeam","result","setResult","numberTeams","i","listPlayerEntry","listPlayer","Object","keys","map","element","_id","orderPlayer","objTeams","listTeamName","onClick_generateTeams","event","sort","player1","player2","objPlayer1","find","objPlayer","objPlayer2","standard","NA","listPlayerLeader","filter","battletagPlayer","tags","includes","teamName","push","team1","Date","now","listPlayerBattletag","name","resultTeam","added","listTeam","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\r\nimport React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n//import path from 'path'\r\nimport { NavLink, useParams } from 'react-router-dom';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {addResult} from \"../../redux/store\";\r\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\r\n// https://reacttraining.com/blog/react-router-v5-1/\r\n\r\nimport {Div, Table, Tr, Td} from '../../styles/DefaultStyles';\r\n\r\nimport IconLoading from '../../svgs/IconLoading'\r\n\r\nimport IconConfirmed from '../../svgs/IconConfirmed'\r\nimport IconPending from '../../svgs/IconPending'\r\nimport IconInfo from '../../svgs/IconInfo'\r\n\r\n// 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\r\n//dotenv.config() ;\r\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\r\n\r\nconst DivResult = styled(Div)`\r\n  width: 100%;\r\n  max-width: 600px;\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  \r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst DivTitle = styled(Div)`\r\n  margin-top: 10px;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  \r\n  margin-bottom: 10px;\r\n`\r\n\r\n\r\nconst DivTableEntry = styled(Div)`\r\n  \r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  \r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  \r\n`\r\n\r\nconst DivIconLoading = styled(Div)`\r\n  margin-top: 10px;\r\n`\r\n\r\n/*\r\ndisplay:grid;\r\n*/\r\n\r\nconst DivRowHeader = styled(Div)`\r\n  color: ${props => props.theme.color_weak};\r\n  display: grid;\r\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; /* min entire = 400 - 20*2 = 360 */\r\n  grid-template-rows: 24px;\r\n  \r\n  & > Div {\r\n    font-weight: thin;\r\n  }\r\n  //background-color: ${props => props.theme.COLOR_normal};\r\n   \r\n  //border-radius:  8px;\r\n`\r\n\r\n\r\nconst DivRowPlayer = styled(Div)`\r\n  display: grid;\r\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; // min entire = 400 - 20*2 = 360\r\n  grid-template-rows: 40px;\r\n  \r\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\r\n  &:last-child {\r\n    border-bottom-style: none;\r\n  }\r\n`\r\n\r\n/*\r\nconst DivRowPlayer = styled(Div)`\r\n  display: grid;\r\n  grid-template-columns: 1fr 60px ${30*4}px 40px 40px; \r\n  grid-template-rows: 40px;\r\n  \r\n  background-color: ${props => props.theme.COLOR_normal};\r\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\r\n  \r\n  \r\n  &:nth-child(2) {\r\n    border-top-left-radius:    10px;\r\n    border-top-right-radius:   10px;\r\n    \r\n  }\r\n  \r\n  &:last-child {\r\n    border-bottom-right-radius: 10px;\r\n    border-bottom-left-radius:  10px;\r\n    \r\n    border-bottom-style: none;\r\n    \r\n  }\r\n*/\r\n\r\n\r\nconst DivBattletagHeader = styled(Div)`\r\n  padding-left: 10px;\r\n  \r\n  display: block;\r\n  text-algin: left;\r\n`\r\n\r\nconst DivBattletag = styled(Div)`\r\n  padding-left: 10px;\r\n  display: block;\r\n  text-algin: left;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\n\r\n\r\n\r\nconst RowPlayer = ({battletag, mmr, statusPlayer}) => {\r\n  \r\n  useEffect(()=>{console.log(\"Each row has been rerendered\")})\r\n  \r\n  const IconStatus = {\r\n    pending: <IconPending width={\"20px\"} height={\"20px\"} />\r\n    ,confirmed: <IconConfirmed width={\"20px\"} height={\"20px\"} />\r\n  };\r\n\r\n  return (\r\n    \r\n    <DivRowPlayer >\r\n      \r\n      <DivBattletag> \r\n        {battletag}\r\n      </DivBattletag>\r\n      \r\n      <Div> \r\n        (roles)\r\n      </Div>\r\n      \r\n      \r\n      <Div> \r\n        {mmr}\r\n      </Div>\r\n       \r\n      <Div> \r\n        {IconStatus[statusPlayer]}\r\n      </Div>\r\n        \r\n       \r\n      <Div> \r\n        <IconInfo\r\n          width={\"20px\"}\r\n          height={\"20px\"}\r\n        /> \r\n      </Div>\r\n         \r\n    </DivRowPlayer>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Result = ({planTeam, addResult}) => {\r\n  \r\n  const [result, setResult] = useState(0);\r\n  //useEffect(()=>{console.log(\"Entry has been rerendered\")})\r\n  \r\n  ///\r\n  const numberTeams = 2;\r\n  \r\n  for (var i =0; i<numberTeams; i++) {\r\n    \r\n  }\r\n  \r\n  \r\n  ///\r\n  const listPlayerEntry = planTeam.listPlayerEntry; // list of objPlayer\r\n  let listPlayer = (Object.keys(listPlayerEntry)).map(element=>listPlayerEntry[element]._id); // list of battletags\r\n  \r\n  let orderPlayer;\r\n  let objTeams = {};\r\n  let listTeamName = [];\r\n\r\n  // 1. confirmed - 2. leader - 3. less roles player(2, 1) - 4. rest\r\n  const onClick_generateTeams = (event) => {\r\n    \r\n    \r\n    orderPlayer = listPlayer.sort( (player1, player2) => {    // mmr 높은순으로 list of battletags\r\n      \r\n      const objPlayer1 = listPlayerEntry.find(objPlayer => objPlayer._id === player1)\r\n      const objPlayer2 = listPlayerEntry.find(objPlayer => objPlayer._id === player2)\r\n      \r\n      return (objPlayer2.mmr.standard.NA - objPlayer1.mmr.standard.NA);\r\n      // ex 3333, 222, 1111\r\n    });\r\n    \r\n    const listPlayerLeader = orderPlayer.filter(\r\n      battletagPlayer => {\r\n        const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletagPlayer)\r\n        return (objPlayer.tags.includes(\"leader\"))\r\n      }\r\n    )\r\n    \r\n    console.log(listPlayerLeader);\r\n    //orderPlayer = \r\n    //console.log(orderPlayer)\r\n    \r\n    for (var i =0; i<numberTeams; i++) {\r\n      const teamName = `team${i+1}`;\r\n      objTeams[teamName] = `it is ${teamName}`\r\n      listTeamName.push(teamName);\r\n    }\r\n    \r\n    setResult(result+1);\r\n    console.log(result)\r\n    console.log(objTeams);\r\n    \r\n    /*\r\n    {\r\n      _id: String,\r\n      listPlayerBattletag: [String],\r\n      name: String,\r\n      group: String\r\n    }\r\n    */\r\n    \r\n    let team1 = {\r\n      _id: Date.now()\r\n      ,listPlayerBattletag: [\"mbcat#1234\", \"mbcat#1703\"]\r\n      ,name: \"dragon team\"\r\n    }\r\n    \r\n    let resultTeam = {\r\n      added: Date.now()\r\n      ,listTeam: [\r\n        team1\r\n        \r\n      ]\r\n    }\r\n    \r\n    addResult(resultTeam);\r\n  }\r\n  \r\n  \r\n  \r\n  return (\r\n  \r\n  <DivResult>\r\n    \r\n    <DivTitle> Result </DivTitle>\r\n    \r\n    <Div onClick={onClick_generateTeams}> \r\n      button\r\n    </Div>\r\n  \r\n    {result && listTeamName.map(element=>\r\n      <Div> {element} </Div>\r\n    )}\r\n    \r\n    \r\n  </DivResult>\r\n    \r\n  )\r\n}\r\n\r\n/*\r\n{(readyPlanTeam)? orderPlayerEntry[0][\"_id\"] : \"loading...\" }\r\n    {(readyPlanTeam)? orderPlayerEntry[9][\"_id\"] : \"loading...\"}\r\n*/\r\n\r\n/*\r\n    <DivTableEntry> \r\n    \r\n    <DivRowHeader> \r\n      <DivBattletagHeader>  battletag </DivBattletagHeader>\r\n      <Div> roles </Div>\r\n      <Div> mmr </Div>\r\n      <Div> status </Div>\r\n      \r\n       \r\n      <Div> </Div>\r\n    </DivRowHeader>\r\n    \r\n    { \r\n      ( listPlayerEntry ).map( (player, i) =>\r\n      \r\n        < RowPlayer \r\n          key={ `${player._id}_${(new Date().getTime()).toString()}` }\r\n          battletag={player._id} \r\n          mmr={player.mmr.standard.NA} \r\n          statusPlayer={player.status} \r\n        /> \r\n      )\r\n    }\r\n      \r\n    </DivTableEntry>\r\n    \r\n*/\r\n//<button onClick= {refetch} > Refectch </button>\r\n\r\n\r\n\r\nfunction mapStateToProps(state) { \r\n  return { \r\n    planTeam: state.planTeam\r\n    //listPlayerEntry: [...state.planTeam.listPlayerEntry]\r\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\r\n    //,readyPlanTeam: state.ready.planTeam\r\n    //,loading: state.loading\r\n  }; \r\n} \r\n\r\nfunction mapDispatchToProps(dispatch) { \r\n  return { \r\n    addResult: (resultTeam) => dispatch( addResult(resultTeam) ) \r\n  }; \r\n}\r\n\r\n\r\n// TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);"]},"metadata":{},"sourceType":"module"}