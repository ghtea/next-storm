{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/routes/TeamGenerator.js\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\nimport { replaceRerender } from \"../redux/store\";\nimport { replaceWorking } from \"../redux/store\";\nimport { replaceLoading } from \"../redux/store\";\nimport { replaceReady } from \"../redux/store\";\nimport { replaceData } from \"../redux/store\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport { Div, Input, Button } from '../styles/DefaultStyles'; //import Player from '../components/Player'\n\nimport CreatingPlan from '../components/TeamGenerator/CreatingPlan';\nimport SearchingPlan from '../components/TeamGenerator/SearchingPlan';\nimport AddingPlayer from '../components/TeamGenerator/AddingPlayer';\nimport Entry from '../components/TeamGenerator/Entry';\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  @media (max-width: ${props => props.theme.media.mid_big - 1}px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"A\"\n      \"B\"\n      \"C\"\n      \"D\"\n  }\n \n\n  @media (min-width:  ${props => props.theme.media.mid_big}px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 1fr;\n    grid-template-areas: \n      \"A B\"\n      \"C D\";\n  }\n\n`;\nconst DivA = styled(Div)`\n  grid-area: A;\n`;\nconst DivB = styled(Div)`\n  grid-area: B;\n`;\nconst DivC = styled(Div)`\n  grid-area: C;\n`;\nconst DivD = styled(Div)`\n  grid-area: D;\n`; // https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\n\nconst TeamGenerator = ({\n  match,\n  location,\n  rerenderPlanTeam,\n  loading,\n  ready,\n  authority,\n  replaceData,\n  idPlanTeam,\n  planTeam,\n  readPlanTeam,\n  addRemoveNotification,\n  replaceReady,\n  replaceLoading\n}) => {\n  //const [rerender, SetRerender] = useState(\"\");\n  const idPlanTeamTrying = match.params.idPlanTeam;\n\n  try {\n    // below includes replaceLoading, etc...\n    readPlanTeam(idPlanTeamTrying);\n    replaceData(\"idPlanTeam\", idPlanTeamTrying);\n    const query = queryString.parse(location.search);\n    const passwordPlanTeamTrying = query.pw; // if password is right\n\n    if (passwordPlanTeamTrying === planTeam.password) {\n      replaceData(\"authority\", \"administrator\");\n      addRemoveNotification(\"success\", \"welcome administrator!\", 2000); //replaceRerender(\"planTeam\") // planTeam 에 의존하는 것들을 다시 렌더링하자는 뜻 doesn't work...\n    } // if password is wrong\n    else {\n        replaceData(\"authority\", \"viewer\");\n        addRemoveNotification(\"error\", \"password is wrong\", 4000);\n      }\n  } catch (error) {\n    addRemoveNotification(\"error\", \"failed to load plan\", 4000);\n  } //console.log(`idPlanTeam: ${idPlanTeam}`)\n\n\n  return /*#__PURE__*/React.createElement(DivTeamGenerator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DivA, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddingPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DivB, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, authority === \"administrator\" ? \"welcome administrator\" : \"hi viewer\"), /*#__PURE__*/React.createElement(DivC, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, \"entry\"), /*#__PURE__*/React.createElement(DivD, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, \"result\"));\n}; //TeamGenerator\n\n\nfunction mapStateToProps(state) {\n  return {\n    planTeam: state.planTeam,\n    idPlanTeam: state.idPlanTeam,\n    rerenderPlanTeam: state.rerender.planTeam,\n    ready: state.ready,\n    loading: state.loading,\n    authority: state.authority\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    readPlanTeam: idPlanTeam => dispatch(readPlanTeam(idPlanTeam)) //,replaceRerender: (which) => dispatch(replaceRerender(which))\n    ,\n    replaceData: (which, newData) => dispatch(replaceData(which, newData)),\n    replaceLoading: (which, true_false) => dispatch(replaceLoading(which, true_false)),\n    replaceReady: (which, true_false) => dispatch(replaceReady(which, true_false)),\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGenerator);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/routes/TeamGenerator.js"],"names":["React","useEffect","styled","axios","queryString","connect","readPlanTeam","replaceRerender","replaceWorking","replaceLoading","replaceReady","replaceData","addRemoveNotification","Div","Input","Button","CreatingPlan","SearchingPlan","AddingPlayer","Entry","useAxiosGet","useInput","DivTeamGenerator","props","theme","media","mid_big","DivA","DivB","DivC","DivD","TeamGenerator","match","location","rerenderPlanTeam","loading","ready","authority","idPlanTeam","planTeam","idPlanTeamTrying","params","query","parse","search","passwordPlanTeamTrying","pw","password","error","mapStateToProps","state","rerender","mapDispatchToProps","dispatch","which","newData","true_false","situation","message","time"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport queryString from 'query-string';\n\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\n\nimport {replaceRerender} from \"../redux/store\";\nimport {replaceWorking} from \"../redux/store\";\nimport {replaceLoading} from \"../redux/store\";\nimport {replaceReady} from \"../redux/store\";\nimport {replaceData} from \"../redux/store\";\n\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\nimport {Div, Input, Button} from '../styles/DefaultStyles';\n//import Player from '../components/Player'\n\n\n\nimport CreatingPlan from '../components/TeamGenerator/CreatingPlan';\nimport SearchingPlan from '../components/TeamGenerator/SearchingPlan';\n\nimport AddingPlayer from '../components/TeamGenerator/AddingPlayer';\nimport Entry from '../components/TeamGenerator/Entry';\n\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\n\n\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"A\"\n      \"B\"\n      \"C\"\n      \"D\"\n  }\n \n\n  @media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 1fr;\n    grid-template-areas: \n      \"A B\"\n      \"C D\";\n  }\n\n`;\n\n\nconst DivA = styled(Div)`\n  grid-area: A;\n`\nconst DivB = styled(Div)`\n  grid-area: B;\n`\nconst DivC = styled(Div)`\n  grid-area: C;\n`\nconst DivD = styled(Div)`\n  grid-area: D;\n`\n\n\n\n// https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\nconst TeamGenerator = ({match, location, rerenderPlanTeam, loading, ready, authority, replaceData, idPlanTeam, planTeam, readPlanTeam, addRemoveNotification, replaceReady, replaceLoading}) => {\n  \n  //const [rerender, SetRerender] = useState(\"\");\n  \n  \n    \n      \n      const idPlanTeamTrying = match.params.idPlanTeam;\n\n      \n      try {\n        // below includes replaceLoading, etc...\n        readPlanTeam(idPlanTeamTrying);\n        \n        \n        \n        replaceData(\"idPlanTeam\", idPlanTeamTrying);\n        const query = queryString.parse(location.search);\n        const passwordPlanTeamTrying = query.pw;\n        \n        \n        \n        // if password is right\n        if (passwordPlanTeamTrying === planTeam.password) {\n          replaceData(\"authority\", \"administrator\");\n          addRemoveNotification(\"success\", \"welcome administrator!\", 2000);\n          \n          //replaceRerender(\"planTeam\") // planTeam 에 의존하는 것들을 다시 렌더링하자는 뜻 doesn't work...\n        }\n        \n        // if password is wrong\n        else {\n          replaceData(\"authority\", \"viewer\");\n          addRemoveNotification(\"error\", \"password is wrong\", 4000);\n        }\n    \n        \n      }\n      catch (error) {\n        addRemoveNotification(\"error\", \"failed to load plan\", 4000);\n      }\n      \n      \n      \n      \n      \n    \n  \n  \n  \n  \n  //console.log(`idPlanTeam: ${idPlanTeam}`)\n  \n   \n    \n    \n  \n  \n   return (\n   <DivTeamGenerator>\n      \n      <DivA>\n        <AddingPlayer />\n      </DivA>\n      \n      <DivB>\n        {authority === \"administrator\" ? \"welcome administrator\" : \"hi viewer\" }\n      </DivB>\n    \n    \n      <DivC>\n        entry\n      </DivC>\n    \n    \n      <DivD>\n        result\n      </DivD>\n    \n    </DivTeamGenerator>\n    )\n\n \n    \n} //TeamGenerator\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    planTeam: state.planTeam\n    ,idPlanTeam: state.idPlanTeam\n    ,rerenderPlanTeam: state.rerender.planTeam\n    ,ready: state.ready \n    ,loading: state.loading\n    ,authority: state.authority\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n    //,replaceRerender: (which) => dispatch(replaceRerender(which))\n    ,replaceData: (which, newData) => dispatch(replaceData(which, newData))\n    ,replaceLoading: (which, true_false) => dispatch(replaceLoading(which, true_false)) \n    ,replaceReady: (which, true_false) => dispatch(replaceReady(which, true_false)) \n    ,addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGenerator);\n"]},"metadata":{},"sourceType":"module"}