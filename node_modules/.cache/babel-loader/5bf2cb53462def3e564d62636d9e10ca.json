{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/routes/TeamGenerator.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\nimport { addNotification } from \"../redux/store\";\nimport { removeNotification } from \"../redux/store\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport { Div, Input, Button } from '../styles/DefaultStyles'; //import Player from '../components/Player'\n\nimport CreatingPlan from '../components/CreatingPlan';\nimport AddingPlayer from '../components/AddingPlayer';\nimport TableEntry from '../components/TableEntry';\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height:100%;\n  \n  @media (max-width: ${props => props.theme.media.mid_big - 1}px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"add\"\n      \"option\"\n      \"entry\"\n      \"result\"\n  }\n \n\n  @media (min-width:  ${props => props.theme.media.mid_big}px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 1fr;\n    grid-template-areas: \n      \"add option\"\n      \"entry result\";\n  }\n\n`;\nconst DivOption = styled(Div)`\n  grid-area: option;\n`;\nconst DivEntry = styled(Div)`\n  grid-area: entry;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst DivResult = styled(Div)`\n  grid-area: result;\n`; // DivEntry ~\n\nconst DivEntryTitle = styled(Div)`\n  font-size: 1.2rem;\n`; // ~ DivEntry\n// https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\n\nconst TeamGenerator = ({\n  match,\n  location,\n  loading,\n  ready,\n  planTeam,\n  readPlanTeam,\n  addRemoveNotification\n}) => {\n  const idPlanTeam = match.params.idPlanTeam; //console.log(`idPlanTeam: ${idPlanTeam}`)\n\n  if (match.path === \"/team-generator\") {\n    return /*#__PURE__*/React.createElement(DivTeamGenerator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CreatingPlan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }));\n  } // if\n  else {\n      return;\n\n      /*#__PURE__*/\n      React.createElement(DivTeamGenerator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(AddingPlayer, {\n        idPlanTeam: idPlanTeam,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(DivOption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      }, \"Option\"), /*#__PURE__*/React.createElement(DivEntry, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DivEntryTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, \" Entry \"), /*#__PURE__*/React.createElement(TableEntry, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(DivResult, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }));\n    } // else\n\n}; //TeamGenerator\n\n\nfunction mapStateToProps(state) {\n  return {\n    planTeam: state.planTeam,\n    ready: state.ready,\n    loading: state.loading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    readPlanTeam: idPlanTeam => dispatch(readPlanTeam(idPlanTeam)),\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time)),\n    addNotification: (situation, message, idNotification) => dispatch(addNotification(situation, message, idNotification)),\n    removeNotification: idNotification => dispatch(removeNotification(idNotification))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGenerator);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/routes/TeamGenerator.js"],"names":["React","styled","axios","connect","readPlanTeam","addNotification","removeNotification","addRemoveNotification","Div","Input","Button","CreatingPlan","AddingPlayer","TableEntry","useAxiosGet","useInput","DivTeamGenerator","props","theme","media","mid_big","DivOption","DivEntry","DivResult","DivEntryTitle","TeamGenerator","match","location","loading","ready","planTeam","idPlanTeam","params","path","mapStateToProps","state","mapDispatchToProps","dispatch","situation","message","time","idNotification"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\nimport {addNotification} from \"../redux/store\";\nimport {removeNotification} from \"../redux/store\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\nimport {Div, Input, Button} from '../styles/DefaultStyles';\n//import Player from '../components/Player'\n\nimport CreatingPlan from '../components/CreatingPlan';\n\nimport AddingPlayer from '../components/AddingPlayer';\nimport TableEntry from '../components/TableEntry';\n\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\n\n\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height:100%;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"add\"\n      \"option\"\n      \"entry\"\n      \"result\"\n  }\n \n\n  @media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 1fr;\n    grid-template-areas: \n      \"add option\"\n      \"entry result\";\n  }\n\n`;\n\n\n\nconst DivOption = styled(Div)`\n  grid-area: option;\n`;\n\nconst DivEntry = styled(Div)`\n  grid-area: entry;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst DivResult = styled(Div)`\n  grid-area: result;\n`;\n\n\n\n\n// DivEntry ~\n\nconst DivEntryTitle = styled(Div)`\n  font-size: 1.2rem;\n`\n\n// ~ DivEntry\n\n\n\n\n  \n  \n  \n\n// https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\nconst TeamGenerator = ({match, location, loading, ready, planTeam, readPlanTeam, addRemoveNotification}) => {\n  \n  const idPlanTeam = match.params.idPlanTeam;\n  \n\n  //console.log(`idPlanTeam: ${idPlanTeam}`)\n  if (match.path === \"/team-generator\") {\n    \n    return (\n    \n    <DivTeamGenerator>\n    \n      <CreatingPlan /> \n    \n    </DivTeamGenerator>\n    )\n  } // if\n    \n    \n  else { \n   return\n   <DivTeamGenerator>\n        \n      <AddingPlayer idPlanTeam={idPlanTeam}/>\n    \n      <DivOption>\n        Option\n      </DivOption>\n    \n      <DivEntry>\n      \n        <DivEntryTitle> Entry </DivEntryTitle>\n      \n        <TableEntry />\n      </DivEntry>\n    \n    \n      <DivResult>\n      \n      </DivResult>\n    \n    </DivTeamGenerator>\n    \n   \n  } // else\n \n    \n} //TeamGenerator\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    planTeam: state.planTeam\n    ,ready: state.ready \n    ,loading: state.loading\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n    ,addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n    ,addNotification: (situation, message, idNotification) => dispatch( addNotification(situation, message, idNotification) )\n    ,removeNotification: (idNotification) => dispatch(removeNotification(idNotification))\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGenerator);\n"]},"metadata":{},"sourceType":"module"}