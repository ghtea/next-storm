{"ast":null,"code":"import defaultAxios from 'axios';\nimport React, { useState, useEffect } from 'react'; // if we not use existing axios instance, use default axios instance\n\nconst useAxiosGet = (options, axios = defaultAxios) => {\n  const [state, setState] = useState({\n    loading: true,\n    error: null,\n    response: null\n  });\n  const [trigger, setTrigger] = useState(0); // trigger: 내가 리렌더링 하고 싶을 때 변화시키는 존재\n\n  useEffect(() => {\n    axios(options).then(response => {\n      setState({ ...state,\n        loading: false,\n        response: response\n      });\n    }).catch(error => {\n      setState({ ...state,\n        loading: false,\n        error\n      });\n    });\n  }, [trigger]); //useEffect \n\n  if (!options.url) {\n    return;\n  }\n\n  const refetch = () => {\n    setState({ ...state,\n      loading: true\n    });\n    setTrigger(Date.now());\n  };\n\n  return { ...state,\n    refetch\n  };\n};\n\nexport default useAxiosGet;","map":{"version":3,"sources":["/usr/projects/next-storm/src/tools/hooks/useAxiosGet.js"],"names":["defaultAxios","React","useState","useEffect","useAxiosGet","options","axios","state","setState","loading","error","response","trigger","setTrigger","then","catch","url","refetch","Date","now"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,OAAzB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,KAAK,GAAGN,YAAlB,KAAmC;AAEtD,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAClCO,IAAAA,OAAO,EAAC,IAD0B;AAElCC,IAAAA,KAAK,EAAE,IAF2B;AAGlCC,IAAAA,QAAQ,EAAE;AAHwB,GAAD,CAAlC;AAMA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC,CARsD,CAUtD;;AACAC,EAAAA,SAAS,CAAE,MAAI;AAEdG,IAAAA,KAAK,CAACD,OAAD,CAAL,CAAeS,IAAf,CAAoBH,QAAQ,IAAI;AAC/BH,MAAAA,QAAQ,CAAC,EACR,GAAGD,KADK;AAERE,QAAAA,OAAO,EAAE,KAFD;AAGRE,QAAAA,QAAQ,EAAEA;AAHF,OAAD,CAAR;AAKA,KAND,EAMGI,KANH,CAMSL,KAAK,IAAI;AACjBF,MAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWE,QAAAA,OAAO,EAAE,KAApB;AAA2BC,QAAAA;AAA3B,OAAD,CAAR;AACA,KARD;AAUA,GAZQ,EAYN,CAACE,OAAD,CAZM,CAAT,CAXsD,CAyBnD;;AAGH,MAAI,CAACP,OAAO,CAACW,GAAb,EAAkB;AACjB;AACA;;AAED,QAAMC,OAAO,GAAG,MAAM;AACrBT,IAAAA,QAAQ,CAAC,EACR,GAAGD,KADK;AAERE,MAAAA,OAAO,EAAE;AAFD,KAAD,CAAR;AAIAI,IAAAA,UAAU,CAAEK,IAAI,CAACC,GAAL,EAAF,CAAV;AACA,GAND;;AAUA,SAAO,EAAC,GAAGZ,KAAJ;AAAWU,IAAAA;AAAX,GAAP;AACA,CA3CD;;AA6CA,eAAeb,WAAf","sourcesContent":["import defaultAxios from 'axios';\nimport React, {useState, useEffect} from 'react';\n\n// if we not use existing axios instance, use default axios instance\nconst useAxiosGet = (options, axios = defaultAxios) => {\n\t\n\tconst [state, setState] = useState({\n\t\tloading:true,\n\t\terror: null,\n\t\tresponse: null\n\t});\n\t\n\tconst [trigger, setTrigger] = useState(0);\n\t\n\t// trigger: 내가 리렌더링 하고 싶을 때 변화시키는 존재\n\tuseEffect( ()=>{\n\t\t\n\t\taxios(options).then(response => {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tresponse: response\n\t\t\t})\n\t\t}).catch(error => {\n\t\t\tsetState({...state, loading: false, error})\n\t\t})\n\t\t\n\t}, [trigger]\n\t\n\t); //useEffect \n\t\n\t\n\tif (!options.url) {\n\t\treturn;\n\t}\n\t\n\tconst refetch = () => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tloading: true\n\t\t});\n\t\tsetTrigger( Date.now() );\n\t}\n\t\n\t\n\t\n\treturn {...state, refetch };\n}\n\nexport default useAxiosGet"]},"metadata":{},"sourceType":"module"}