{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/Guide.js\";\nimport dotenv from 'dotenv';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Div, Input, Button } from '../../styles/DefaultStyles';\nimport IconPlus from '../../svgs/basic/IconPlus';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // STYLES\n\nconst DivGuide = styled(Div)`\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst DivGuideTitle = styled(Div)`\n  margin-top: 20px;\n  font-size: 1.2rem;\n  font-weight: bold;\n`;\nconst DivBody = styled(Div)`\n  \n  width: 100%;\n  max-width: 450px;\n  \n  margin-top: 20px;\n  margin-left: 10px;\n  margin-right: 10px;\n  \n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`;\nconst Part = styled(Div)`\n  height: 400px;\n  \n  margin-top: 6px;\n  margin-bottom: 6px;\n  \n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  \n`;\n/*\nborder-bottom: 1px solid ${props => props.theme.color_weak};\n  \n  &:last-child {\n    border: none;\n  }\n*/\n\nconst DivTitlePart = styled(Div)`\n  \n  width: 60px;\n  height: 100%;\n  \n  background-color: ${props => props.theme.COLOR_middle};\n`;\nconst DivGroupSentence = styled(Div)`\n  font-size: 0.9rem;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  \n  & > div {\n  \n    color: ${props => props.theme.color_normal};\n    display: block;\n    margin-left: 12px;\n    \n    margin-top: 3px;\n    margin-bottom: 3px;\n    \n    text-align: left;\n  }\n`;\n\nconst Guide = ({}) => {\n  return /*#__PURE__*/React.createElement(DivGuide, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivGuideTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, \" Guide \"), /*#__PURE__*/React.createElement(DivBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Part, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitlePart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \" LINK \"), /*#__PURE__*/React.createElement(DivGroupSentence, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \" viewer link: for players who request to join \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \" editing link: for administrator who manage event \"))), /*#__PURE__*/React.createElement(Part, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitlePart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \" TEAMS \"), /*#__PURE__*/React.createElement(DivGroupSentence, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \" automatically generated teams using data of mmr, roles, leaders, ... \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \" leaders (crown) join teams first, being separated into different teams \"))), /*#__PURE__*/React.createElement(Part, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitlePart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \" JOIN \"), /*#__PURE__*/React.createElement(DivGroupSentence, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \" pending (clock): not confirmed for joining \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \" confirmed (check): confirmed for joining \"))), /*#__PURE__*/React.createElement(Part, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitlePart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, \" MMR \"), /*#__PURE__*/React.createElement(DivGroupSentence, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \" required games: 100 (> 40 > 10) \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \" Storm League in current region > Quick Match in current region > Storm League in other region > ... \"))), /*#__PURE__*/React.createElement(Part, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitlePart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, \" ROLES \"), /*#__PURE__*/React.createElement(DivGroupSentence, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \" choose main roles for each playe based on game number of each role\"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \" the players who play less roles are separated into different teams \")))));\n}; // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default Guide;","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/Guide.js"],"names":["dotenv","React","useEffect","useState","styled","NavLink","useHistory","Div","Input","Button","IconPlus","CopyToClipboard","DivGuide","DivGuideTitle","DivBody","Part","DivTitlePart","props","theme","COLOR_middle","DivGroupSentence","color_normal","Guide"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\n\n\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport {Div, Input, Button} from '../../styles/DefaultStyles';\n\n\n\nimport IconPlus from '../../svgs/basic/IconPlus'\n\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\n\n\n// STYLES\nconst DivGuide = styled(Div)`\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\n\n\nconst DivGuideTitle = styled(Div)`\n  margin-top: 20px;\n  font-size: 1.2rem;\n  font-weight: bold;\n`\n\n\n\nconst DivBody = styled(Div)`\n  \n  width: 100%;\n  max-width: 450px;\n  \n  margin-top: 20px;\n  margin-left: 10px;\n  margin-right: 10px;\n  \n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`\n\nconst Part = styled(Div)`\n  height: 400px;\n  \n  margin-top: 6px;\n  margin-bottom: 6px;\n  \n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  \n`\n\n/*\nborder-bottom: 1px solid ${props => props.theme.color_weak};\n  \n  &:last-child {\n    border: none;\n  }\n*/\n\n\nconst DivTitlePart = styled(Div)`\n  \n  width: 60px;\n  height: 100%;\n  \n  background-color: ${props => props.theme.COLOR_middle};\n`\n\nconst DivGroupSentence = styled(Div)`\n  font-size: 0.9rem;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  \n  & > div {\n  \n    color: ${props => props.theme.color_normal};\n    display: block;\n    margin-left: 12px;\n    \n    margin-top: 3px;\n    margin-bottom: 3px;\n    \n    text-align: left;\n  }\n`\n\n\n\n\n\n const Guide = ({\n  \n   \n }) => {\n\n  \n  \n  return (\n  <DivGuide>\n    \n    <DivGuideTitle> Guide </DivGuideTitle>\n\n    \n   <DivBody>\n   \n    <Part>\n      <DivTitlePart> LINK </DivTitlePart>\n      <DivGroupSentence>\n        <Div> viewer link: for players who request to join </Div>\n        <Div> editing link: for administrator who manage event </Div>\n      </DivGroupSentence>\n    </Part>\n    \n    <Part>\n      <DivTitlePart> TEAMS </DivTitlePart>\n      <DivGroupSentence>\n        <Div> automatically generated teams using data of mmr, roles, leaders, ... </Div>\n        <Div> leaders (crown) join teams first, being separated into different teams </Div>\n      </DivGroupSentence>\n    </Part>\n    \n    <Part>\n      <DivTitlePart> JOIN </DivTitlePart>\n      <DivGroupSentence>\n        <Div> pending (clock): not confirmed for joining </Div>\n        <Div> confirmed (check): confirmed for joining </Div>\n      </DivGroupSentence>\n    </Part>\n    \n    <Part>\n      <DivTitlePart> MMR </DivTitlePart>\n      <DivGroupSentence>\n        <Div> required games: 100 (> 40 > 10) </Div>\n        <Div> Storm League in current region > Quick Match in current region > Storm League in other region > ... </Div>\n      </DivGroupSentence>\n    </Part>\n    \n    <Part>\n      <DivTitlePart> ROLES </DivTitlePart>\n      <DivGroupSentence>\n        <Div> choose main roles for each playe based on game number of each role</Div>\n        <Div> the players who play less roles are separated into different teams </Div>\n      </DivGroupSentence>\n    </Part>\n    \n  \n\t    \n   </DivBody>\n  \n  </DivGuide>\n        \n  \n  )\n}\n  \n  \n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default Guide;"]},"metadata":{},"sourceType":"module"}