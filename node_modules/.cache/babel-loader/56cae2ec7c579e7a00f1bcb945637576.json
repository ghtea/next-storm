{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport Sub from \"./routes/Sub\";\nimport Home from \"./routes/Home\";\nimport TeamGenerator from \"./routes/TeamGenerator\";\nimport { ThemeProvider } from 'styled-components';\nimport { dark, light } from \"./styles/themes\";\nimport { GlobalStyle, Div } from './styles/DefaultStyles';\nimport './styles/font.css'; // env 사용할때 각변수 앞에 REACT_APP_ 를 붙혀야한다 https://hello-bryan.tistory.com/134\n\nconst DivContent = styled(Div)`\n  \n  @media (max-width: ${props => props.theme.media.mid_big - 1}px ) {\n    margin-top: 50px; /* height of sub */\n  \t\n\t}\n \n\t @media (min-width:  ${props => props.theme.media.mid_big}px) {\n\t  margin-left: 120px; /* width of sub */\n\t \n\t\t\n\t }\n  \n`;\n\nconst App = () => {\n  /*\n  isDarkMode() {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }  \n  */\n\n  /*\n  constructor(props){\n      super(props);\n      \n      this.state = {\n          themeApp: 'light'\n      };\n      \n  }\n  */\n  useEffect(() => {}, []);\n  /*\n  componentDidMount() {\n    // we use as string here but we should use as object (without comma) when pass to theme in ThemeProvicer\n      let themeDevice = this.isDarkMode() ? 'dark' : 'light';\n      \n      this.setState(prevState =>{\n          return{\n            ...prevState,\n            themeApp: themeDevice\n          }\n        })\n      \n    \n  }\n  */\n  //const { themeApp } = this.state;\n\n  const themeApp = \"light\";\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: themeApp === 'light' ? light : dark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: Sub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DivContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/team-generator\",\n    exact: true,\n    component: TeamGenerator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/team-generator/:idPlanTeam\",\n    component: TeamGenerator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/App.js"],"names":["React","useEffect","BrowserRouter","Route","Switch","styled","Sub","Home","TeamGenerator","ThemeProvider","dark","light","GlobalStyle","Div","DivContent","props","theme","media","mid_big","App","themeApp"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,SAAQC,aAAR,QAA6B,mBAA7B;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,iBAA1B;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAgC,wBAAhC;AAEA,OAAO,mBAAP,C,CAEA;;AAEA,MAAMC,UAAU,GAAGT,MAAM,CAACQ,GAAD,CAAM;;uBAERE,KAAK,IAAKA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,OAAlB,GAA2B,CAAI;;;;;wBAKxCH,KAAK,IAAKA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,OAAU;;;;;;CAP9D;;AAeA,MAAMC,GAAG,GAAG,MAAM;AAEhB;;;;;;;;;;;AAWA;;;;;;;;;;AAUAlB,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEN,EAFM,CAAT;AAIA;;;;;;;;;;;;;;;AAkBE;;AACF,QAAMmB,QAAQ,GAAG,OAAjB;AACA,sBACE,uDAEA,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEA,QAAQ,KAAK,OAAb,GAAuBT,KAAvB,GAA+BD,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAKA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEJ,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,EAAE,IAAvB;AAA6B,IAAA,SAAS,EAAEC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAGA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAA8B,IAAA,KAAK,EAAE,IAArC;AAA2C,IAAA,SAAS,EAAEC,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAIA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,6BAAZ;AAA2C,IAAA,SAAS,EAAEA,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CADA,CANF,CALA,CAFA,CADF;AA+BD,CA9ED;;AAgFA,eAAeW,GAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nimport Sub from \"./routes/Sub\";\nimport Home from \"./routes/Home\";\nimport TeamGenerator from \"./routes/TeamGenerator\";\n\nimport {ThemeProvider } from 'styled-components';\nimport {dark, light} from \"./styles/themes\"\nimport { GlobalStyle, Div} from './styles/DefaultStyles';\n\nimport './styles/font.css';\n\n// env 사용할때 각변수 앞에 REACT_APP_ 를 붙혀야한다 https://hello-bryan.tistory.com/134\n\nconst DivContent = styled(Div)`\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    margin-top: 50px; /* height of sub */\n  \t\n\t}\n \n\t @media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n\t  margin-left: 120px; /* width of sub */\n\t \n\t\t\n\t }\n  \n`;\n\nconst App = () => {\n  \n  /*\n  isDarkMode() {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }  \n  */\n  \n  /*\n  constructor(props){\n      super(props);\n      \n      this.state = {\n          themeApp: 'light'\n      };\n      \n  }\n  */\n  useEffect(()=>{\n    \n  }, [])\n  \n  /*\n  componentDidMount() {\n    // we use as string here but we should use as object (without comma) when pass to theme in ThemeProvicer\n      let themeDevice = this.isDarkMode() ? 'dark' : 'light';\n      \n      this.setState(prevState =>{\n          return{\n            ...prevState,\n            themeApp: themeDevice\n          }\n        })\n      \n    \n  }\n  */\n  \n  \n\n    //const { themeApp } = this.state;\n  const themeApp = \"light\"\n  return (\n    <>\n    \n    <ThemeProvider theme={themeApp === 'light' ? light : dark }>\n    \n    \n    <GlobalStyle/>\n    \n    <BrowserRouter>\n      \n      \n      <Route path=\"/\" component={Sub} />\n      \n      \n      <DivContent>\n      <Switch >\n      <Route path=\"/\" exact={true} component={Home} />\n      \n      <Route path=\"/team-generator\" exact={true} component={TeamGenerator} />\n      <Route path=\"/team-generator/:idPlanTeam\"  component={TeamGenerator} />\n      \n      </Switch >\n      </DivContent>\n      \n    </BrowserRouter>\n    \n    \n    </ThemeProvider>\n    </>\n  );\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}