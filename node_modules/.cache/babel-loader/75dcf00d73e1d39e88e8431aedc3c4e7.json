{"ast":null,"code":"import _taggedTemplateLiteral from\"/usr/projects/parallel-storm/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n\\t\\n\\tbox-sizing: border-box;\\n\\tpadding: 8px;\\n\\t\\n\\tmagin-bottom: 2px;\\n\\tmargin-top: 2px;\\n\\t\\n\\tborder-radius: 8px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n\\t\\n  position: fixed;\\n  \\n  left: 50%;\\n  transform: translateX(-50%);\\n  \\n  display: flex;\\n  flex-direction: column;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n  \\n  @media (max-width: \",\"px ) {\\n  \\n  \\twidth: 100%;\\n  \\tmax-width: 360px;\\n  \\theight: auto;\\n  \\t\\n  \\ttop: 60px;\\n\\t}\\n \\n\\t@media (min-width:  \",\"px) {\\n\\t\\twidth: 360px;\\n\\t  height: auto;\\n\\t  \\n\\t  top: 10px;\\n\\t \\n\\t\\t\\n\\t }\\n  \\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import{connect}from\"react-redux\";import{addNotification as _addNotification}from\"../redux/store\";import{removeNotification as _removeNotification}from\"../redux/store\";import _addRemoveNotification from\"../redux/thunks/addRemoveNotification\";import{Div}from'../styles/DefaultStyles';var DivNotification=styled(Div)(_templateObject(),function(props){return props.theme.media.mid_big-1;},function(props){return props.theme.media.mid_big;});var DivNotificationItem=styled(Div)(_templateObject2());// img (svg) https://www.svgrepo.com/svg/154720/hexagon\nvar Notification=function Notification(_ref){var notification=_ref.notification;return/*#__PURE__*/React.createElement(DivNotification,null,notification.map(function(element,i){return/*#__PURE__*/React.createElement(DivNotificationItem,{key:element.idNotification,className:element.situation},element.message);}));};function mapStateToProps(state){return{notification:state.notification};}function mapDispatchToProps(dispatch){return{addRemoveNotification:function addRemoveNotification(situation,message,time,idNotification){return dispatch(_addRemoveNotification(situation,message,time,idNotification));},addNotification:function addNotification(situation,message,idNotification){return dispatch(_addNotification(situation,message,idNotification));},removeNotification:function removeNotification(idNotification){return dispatch(_removeNotification(idNotification));}};}export default connect(mapStateToProps,mapDispatchToProps)(Notification);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/routes/Notification.js"],"names":["React","styled","connect","addNotification","removeNotification","addRemoveNotification","Div","DivNotification","props","theme","media","mid_big","DivNotificationItem","Notification","notification","map","element","i","idNotification","situation","message","mapStateToProps","state","mapDispatchToProps","dispatch","time"],"mappings":"+6BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAAQC,eAAe,GAAfA,CAAAA,gBAAR,KAA8B,gBAA9B,CACA,OAAQC,kBAAkB,GAAlBA,CAAAA,mBAAR,KAAiC,gBAAjC,CACA,MAAOC,CAAAA,sBAAP,KAAkC,uCAAlC,CAGA,OAAQC,GAAR,KAAkB,yBAAlB,CAIA,GAAMC,CAAAA,eAAe,CAAGN,MAAM,CAACK,GAAD,CAAT,mBAYE,SAAAE,KAAK,QAAKA,CAAAA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,OAAlB,CAA2B,CAAhC,EAZP,CAqBE,SAAAH,KAAK,QAAKA,CAAAA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,OAAvB,EArBP,CAArB,CAoCA,GAAMC,CAAAA,mBAAmB,CAAGX,MAAM,CAACK,GAAD,CAAT,oBAAzB,CAcA;AACA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAoB,IAAlBC,CAAAA,YAAkB,MAAlBA,YAAkB,CACxC,mBAGC,oBAAC,eAAD,MAEEA,YAAY,CAACC,GAAb,CAAkB,SAACC,OAAD,CAAUC,CAAV,qBAElB,oBAAC,mBAAD,EAAqB,GAAG,CAAID,OAAO,CAACE,cAApC,CAAoD,SAAS,CAAEF,OAAO,CAACG,SAAvE,EACGH,OAAO,CAACI,OADX,CAFkB,EAAlB,CAFF,CAHD,CAgBA,CAjBD,CAoBA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,MAAO,CACLR,YAAY,CAAEQ,KAAK,CAACR,YADf,CAAP,CAGD,CAED,QAASS,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CACpC,MAAO,CACLnB,qBAAqB,CAAE,+BAACc,SAAD,CAAYC,OAAZ,CAAqBK,IAArB,CAA2BP,cAA3B,QAA8CM,CAAAA,QAAQ,CAAEnB,sBAAqB,CAACc,SAAD,CAAYC,OAAZ,CAAqBK,IAArB,CAA2BP,cAA3B,CAAvB,CAAtD,EADlB,CAEJf,eAAe,CAAE,yBAACgB,SAAD,CAAYC,OAAZ,CAAqBF,cAArB,QAAwCM,CAAAA,QAAQ,CAAErB,gBAAe,CAACgB,SAAD,CAAYC,OAAZ,CAAqBF,cAArB,CAAjB,CAAhD,EAFb,CAGJd,kBAAkB,CAAE,4BAACc,cAAD,QAAoBM,CAAAA,QAAQ,CAACpB,mBAAkB,CAACc,cAAD,CAAnB,CAA5B,EAHhB,CAAP,CAKD,CAGD,cAAehB,CAAAA,OAAO,CAACmB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CV,YAA7C,CAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { connect } from \"react-redux\";\nimport {addNotification} from \"../redux/store\";\nimport {removeNotification} from \"../redux/store\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\n\nimport {Div} from '../styles/DefaultStyles';\n\n\n\nconst DivNotification = styled(Div)`\n\t\n  position: fixed;\n  \n  left: 50%;\n  transform: translateX(-50%);\n  \n  display: flex;\n  flex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n  \n  \twidth: 100%;\n  \tmax-width: 360px;\n  \theight: auto;\n  \t\n  \ttop: 60px;\n\t}\n \n\t@media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n\t\twidth: 360px;\n\t  height: auto;\n\t  \n\t  top: 10px;\n\t \n\t\t\n\t }\n  \n`;\n\n\n\n\n\nconst DivNotificationItem = styled(Div)`\n\t\n\tbox-sizing: border-box;\n\tpadding: 8px;\n\t\n\tmagin-bottom: 2px;\n\tmargin-top: 2px;\n\t\n\tborder-radius: 8px;\n`;\n\n\n\n\n// img (svg) https://www.svgrepo.com/svg/154720/hexagon\nconst Notification = ({notification}) => {\n\treturn (\n \n\t\n  <DivNotification>\n  \t\n  \t{notification.map( (element, i) =>\n  \t\n  \t\t<DivNotificationItem key = {element.idNotification} className={element.situation}>\n  \t\t\t\t{element.message}\n  \t\t</DivNotificationItem>\n  \t\t\n  \t)}\n  \t\n\t</DivNotification>\n\t\n\t)\n}\n\n\nfunction mapStateToProps(state) { \n  return { \n    notification: state.notification\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    addRemoveNotification: (situation, message, time, idNotification) => dispatch( addRemoveNotification(situation, message, time, idNotification) )\n    ,addNotification: (situation, message, idNotification) => dispatch( addNotification(situation, message, idNotification) )\n    ,removeNotification: (idNotification) => dispatch(removeNotification(idNotification))\n  }; \n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);"]},"metadata":{},"sourceType":"module"}