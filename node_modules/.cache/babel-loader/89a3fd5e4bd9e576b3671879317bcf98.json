{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/CreatingPlan.js\";\nimport dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\nimport { replaceWorking } from \"../../redux/store\";\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Div, Input, Button } from '../../styles/DefaultStyles';\nimport useInput from '../../tools/hooks/useInput';\nimport { getTimeStamp } from '../../tools/vanilla/time';\nimport IconWorking from '../../svgs/IconWorking'; //import {ahr} from '../api';\n\n/*\ndotenv.config({ \n  path: './.env' \n});\n*/\n\nconst DivCreatingPlan = styled(Div)`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n`;\nconst DivId = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`;\nconst DivBody = styled(Div)`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`;\nconst DivInputAdd = styled(Div)`\n\n\theight: 36px;\n\t\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`;\nconst InputBattletag = styled(Input)`\n\twidth: 160px;\n\theight: 100%;\n`;\nconst ButtonAddFirst = styled(Button)`\n  width: 60px;\n  height: 100%;\n`;\nconst DivIconWorking = styled(Div)`\n  \n`;\n\nconst reqPutPlayerMmr = battletag => {\n  return {\n    filter: {\n      _id: battletag\n    }\n  };\n}; // \"listPlayerEntry._id\": { $ne: battletag }  }   //very important  // https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\n// already know there is no PlaTeam with same id\n\n\nconst reqCreatePlanTeam = (idPlanTeam, battletag) => {\n  return {\n    filter: {\n      _id: idPlanTeam\n    },\n    update: {\n      _id: idPlanTeam,\n      listPlayerEntry: [{\n        _id: battletag\n      }]\n    }\n  };\n};\n\nconst CreatingPlan = ({\n  addRemoveNotification,\n  loading,\n  ready,\n  working,\n  replaceWorking\n}) => {\n  //{value, onChange}\n  const inputBattletag = useInput(\"\");\n  const history = useHistory();\n\n  const onClick_ButtonAddFirst = async e => {\n    if (inputBattletag.value) {\n      const battletag = inputBattletag.value;\n      let status = {};\n\n      try {\n        replaceWorking(\"putPlayerMmr\", true);\n        await axios.put(`${process.env.REACT_APP_URL_AHR}/PlayerMmr`, reqPutPlayerMmr(battletag));\n        replaceWorking(\"putPlayerMmr\", false);\n        addRemoveNotification(\"success\", \"player has been added!\", 2000);\n        status.mmr = true; // mmr 작업이 잘되었다고 표시\n      } catch (error) {\n        replaceWorking(\"putPlayerMmr\", false);\n        addRemoveNotification(\"error\", \"battletag is wrong\", 4000);\n        status.mmr = false; // mmr 작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n      }\n\n      if (status.mmr === true) {\n        try {\n          const idPlanTeam = getTimeStamp();\n          await axios.put(`${process.env.REACT_APP_URL_AHR}/PlanTeam`, reqCreatePlanTeam(idPlanTeam, battletag)); // pass id of new PlanTeam to body of request\n\n          history.push(`/team-generator/${idPlanTeam}`);\n          addRemoveNotification(\"success\", \"new plan has been created!\", 2000);\n        } catch (error) {}\n      }\n\n      inputBattletag.setValue(\"\");\n    } else {\n      // 애초에 battletag를 입력 안했다면.\n      console.log(\"type battletag first\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DivCreatingPlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DivHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, \" Team Generator \"), /*#__PURE__*/React.createElement(DivId, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, \" add battletag first to start \"), \" \"), /*#__PURE__*/React.createElement(DivBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DivInputAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputBattletag, Object.assign({}, inputBattletag, {\n    placeholder: \"battletag#1234\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  })), working.putPlayerMmr ? /*#__PURE__*/React.createElement(ButtonAddFirst, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DivIconWorking, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconWorking, {\n    width: \"27px\",\n    height: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }), \"   \"), \" \") : /*#__PURE__*/React.createElement(ButtonAddFirst, {\n    onClick: onClick_ButtonAddFirst,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 54\n    }\n  }, \" Add \"))));\n};\n/*\n <DivCreatingPlan>\n        \n    <DivHeader>\n      <DivTitle> Team Generator </DivTitle>\n      \n      <DivId> add battletag first to start </DivId>\n    </DivHeader>\n    \n    <DivBody>\n\t   \n\t\t    <DivInputAdd>\n\t\t      <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n\t\t      \n          {working.putPlayerMmr ? \n\t        <ButtonAddFirst> \n  \t        <DivIconWorking>\n              <IconWorking \n                width={\"27px\"}\n                height={\"24px\"}\n              />  \n            </DivIconWorking>\n\t        </ButtonAddFirst> \n\t       : <ButtonAddFirst onClick = {onClick_ButtonAddFirst} > Add </ButtonAddFirst> }\n        \n        \n\t\t    </DivInputAdd>\n\t\t    \n\t    \n\t   </DivBody>\n  \n  </DivCreatingPlan>\n */\n\n\nfunction mapStateToProps(state) {\n  return {\n    ready: state.ready,\n    loading: state.loading,\n    working: state.working\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time)),\n    replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatingPlan);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/CreatingPlan.js"],"names":["dotenv","React","styled","axios","connect","addRemoveNotification","replaceWorking","NavLink","useHistory","Div","Input","Button","useInput","getTimeStamp","IconWorking","DivCreatingPlan","DivHeader","DivTitle","DivId","props","theme","color_weak","DivBody","DivInputAdd","InputBattletag","ButtonAddFirst","DivIconWorking","reqPutPlayerMmr","battletag","filter","_id","reqCreatePlanTeam","idPlanTeam","update","listPlayerEntry","CreatingPlan","loading","ready","working","inputBattletag","history","onClick_ButtonAddFirst","e","value","status","put","process","env","REACT_APP_URL_AHR","mmr","error","push","setValue","console","log","putPlayerMmr","mapStateToProps","state","mapDispatchToProps","dispatch","situation","message","time","which","true_false"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,OADF,QAGK,aAHL;AAIA,OAAOC,qBAAP,MAAkC,0CAAlC;AACA,SACEC,cADF,QAGK,mBAHL;AAKA,SACEC,OADF,EACWC,UADX,QAGK,kBAHL;AAKA,SACEC,GADF,EACOC,KADP,EACcC,MADd,QAGK,4BAHL;AAMA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SACEC,YADF,QAGK,0BAHL;AAKA,OAAOC,WAAP,MAAwB,wBAAxB,C,CAEA;;AACA;;;;;;AAMA,MAAMC,eAAe,GAAGb,MAAM,CAACO,GAAD,CAC7B;;;;;;;;CADD;AAYA,MAAMO,SAAS,GAAGd,MAAM,CAACO,GAAD,CACvB;;;;;CADD;AAQA,MAAMQ,QAAQ,GAAGf,MAAM,CAACO,GAAD,CACtB;;CADD;AAIA,MAAMS,KAAK,GAAGhB,MAAM,CAACO,GAAD,CACnB;WACUU,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,UAAW;CAF3C;AAMA,MAAMC,OAAO,GAAGpB,MAAM,CAACO,GAAD,CACrB;;;;;;;CADD;AAUA,MAAMc,WAAW,GAAGrB,MAAM,CAACO,GAAD,CACzB;;;;;;;;;;;;;CADD;AAiBA,MAAMe,cAAc,GAAGtB,MAAM,CAACQ,KAAD,CAC5B;;;CADD;AAQA,MAAMe,cAAc,GAAGvB,MAAM,CAACS,MAAD,CAC5B;;;CADD;AAMA,MAAMe,cAAc,GAAGxB,MAAM,CAACO,GAAD,CAC5B;;CADD;;AAOA,MAAMkB,eAAe,GAAIC,SAAD,IAAe;AACrC,SAAO;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEF;AADC;AADH,GAAP;AAKD,CAND,C,CAQA;AAGA;;;AACA,MAAMG,iBAAiB,GAAG,CAACC,UAAD,EAAaJ,SAAb,KAA2B;AACnD,SAAO;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEE;AADC,KADH;AAMLC,IAAAA,MAAM,EAAE;AACNH,MAAAA,GAAG,EAAEE,UADC;AAENE,MAAAA,eAAe,EAAE,CAAC;AAChBJ,QAAAA,GAAG,EAAEF;AADW,OAAD;AAFX;AANH,GAAP;AAaD,CAdD;;AAsBA,MAAMO,YAAY,GAAG,CAAC;AAClB9B,EAAAA,qBADkB;AACK+B,EAAAA,OADL;AACcC,EAAAA,KADd;AACqBC,EAAAA,OADrB;AAC8BhC,EAAAA;AAD9B,CAAD,KAEb;AAEJ;AACA,QAAMiC,cAAc,GAAG3B,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAM4B,OAAO,GAAGhC,UAAU,EAA1B;;AAKA,QAAMiC,sBAAsB,GAAG,MAAMC,CAAN,IAAY;AAEzC,QAAIH,cAAc,CAACI,KAAnB,EAA0B;AAGxB,YAAMf,SAAS,GAAGW,cAAc,CAACI,KAAjC;AAEA,UAAIC,MAAM,GAAG,EAAb;;AAEA,UAAI;AACFtC,QAAAA,cAAc,CAAC,cAAD,EAAiB,IAAjB,CAAd;AACA,cAAMH,KAAK,CAAC0C,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAA3C,EAAwDrB,eAAe,CAACC,SAAD,CAAvE,CAAN;AAEAtB,QAAAA,cAAc,CAAC,cAAD,EAAiB,KAAjB,CAAd;AACAD,QAAAA,qBAAqB,CAAC,SAAD,EAAY,wBAAZ,EAAsC,IAAtC,CAArB;AACAuC,QAAAA,MAAM,CAACK,GAAP,GAAa,IAAb,CANE,CAMiB;AACpB,OAPD,CAOE,OAAOC,KAAP,EAAc;AACd5C,QAAAA,cAAc,CAAC,cAAD,EAAiB,KAAjB,CAAd;AACAD,QAAAA,qBAAqB,CAAC,OAAD,EAAU,oBAAV,EAAgC,IAAhC,CAArB;AACAuC,QAAAA,MAAM,CAACK,GAAP,GAAa,KAAb,CAHc,CAGM;AACrB;;AAGD,UAAIL,MAAM,CAACK,GAAP,KAAe,IAAnB,EAAyB;AACvB,YAAI;AACF,gBAAMjB,UAAU,GAAGnB,YAAY,EAA/B;AACA,gBAAMV,KAAK,CAAC0C,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,WAA3C,EAAuDjB,iBAAiB,CAACC,UAAD,EAAaJ,SAAb,CAAxE,CAAN,CAFE,CAEsG;;AACxGY,UAAAA,OAAO,CAACW,IAAR,CAAc,mBAAkBnB,UAAW,EAA3C;AAEA3B,UAAAA,qBAAqB,CAAC,SAAD,EAAY,4BAAZ,EAA0C,IAA1C,CAArB;AACD,SAND,CAME,OAAO6C,KAAP,EAAc,CAEf;AACF;;AAGDX,MAAAA,cAAc,CAACa,QAAf,CAAwB,EAAxB;AAED,KApCD,MAoCO;AAAE;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AACF,GAzCD;;AA+CA,sBAEE,oBAAE,eAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAE,SAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAE,QAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAGA,oBAAE,KAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHA,MAFA,eAOA,oBAAE,OAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAE,WAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAE,cAAF,oBAAqBf,cAArB;AAEA,IAAA,WAAW,EAAG,gBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA,EAMED,OAAO,CAACiB,YAAR,gBACE,oBAAE,cAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAE,cAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAE,WAAF;AACF,IAAA,KAAK,EACH,MAFA;AAIF,IAAA,MAAM,EACJ,MALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,QADA,MADF,gBAU6C,oBAAE,cAAF;AAAiB,IAAA,OAAO,EACnEd,sBAD2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhB/C,CAFA,CAPA,CAFF;AAyCC,CApGL;AAuGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,SAASe,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLpB,IAAAA,KAAK,EAAEoB,KAAK,CAACpB,KADR;AAELD,IAAAA,OAAO,EAAEqB,KAAK,CAACrB,OAFV;AAGLE,IAAAA,OAAO,EAAEmB,KAAK,CAACnB;AAHV,GAAP;AAKD;;AAED,SAASoB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLtD,IAAAA,qBAAqB,EAAE,CAACuD,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,KAA8BH,QAAQ,CAACtD,qBAAqB,CAACuD,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,CAAtB,CADxD;AAELxD,IAAAA,cAAc,EAAE,CAACyD,KAAD,EAAQC,UAAR,KAAuBL,QAAQ,CAACrD,cAAc,CAACyD,KAAD,EAAQC,UAAR,CAAf;AAF1C,GAAP;AAID,C,CAED;;;AACA,eAAe5D,OAAO,CAACoD,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CvB,YAA7C,CAAf","sourcesContent":["import dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport axios from 'axios';\n\nimport {\n  connect\n}\nfrom \"react-redux\";\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\nimport {\n  replaceWorking\n}\nfrom \"../../redux/store\";\n\nimport {\n  NavLink, useHistory\n}\nfrom 'react-router-dom';\n\nimport {\n  Div, Input, Button\n}\nfrom '../../styles/DefaultStyles';\n\n\nimport useInput from '../../tools/hooks/useInput';\nimport {\n  getTimeStamp\n}\nfrom '../../tools/vanilla/time';\n\nimport IconWorking from '../../svgs/IconWorking'\n\n//import {ahr} from '../api';\n/*\ndotenv.config({ \n  path: './.env' \n});\n*/\n\nconst DivCreatingPlan = styled(Div)\n`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\n\nconst DivHeader = styled(Div)\n`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nconst DivTitle = styled(Div)\n`\n  font-size: 1.6rem;\n`\nconst DivId = styled(Div)\n`\n  color: ${props => props.theme.color_weak};\n`\n\n\nconst DivBody = styled(Div)\n`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`\n\nconst DivInputAdd = styled(Div)\n`\n\n\theight: 36px;\n\t\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`\n\n\nconst InputBattletag = styled(Input)\n`\n\twidth: 160px;\n\theight: 100%;\n`\n\n\n\nconst ButtonAddFirst = styled(Button)\n`\n  width: 60px;\n  height: 100%;\n`\n\nconst DivIconWorking = styled(Div)\n`\n  \n`\n\n\n\nconst reqPutPlayerMmr = (battletag) => {\n  return {\n    filter: {\n      _id: battletag\n    }\n  }\n};\n\n// \"listPlayerEntry._id\": { $ne: battletag }  }   //very important  // https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\n\n\n// already know there is no PlaTeam with same id\nconst reqCreatePlanTeam = (idPlanTeam, battletag) => {\n  return {\n    filter: {\n      _id: idPlanTeam\n    }\n\n    ,\n    update: {\n      _id: idPlanTeam,\n      listPlayerEntry: [{\n        _id: battletag\n      }]\n    }\n  }\n};\n\n\n\n\n\n\n\nconst CreatingPlan = ({\n    addRemoveNotification, loading, ready, working, replaceWorking\n  }) => {\n\n    //{value, onChange}\n    const inputBattletag = useInput(\"\");\n\n    const history = useHistory();\n\n\n\n\n    const onClick_ButtonAddFirst = async(e) => {\n\n      if (inputBattletag.value) {\n\n\n        const battletag = inputBattletag.value;\n\n        let status = {};\n\n        try {\n          replaceWorking(\"putPlayerMmr\", true)\n          await axios.put(`${process.env.REACT_APP_URL_AHR}/PlayerMmr`, reqPutPlayerMmr(battletag));\n\n          replaceWorking(\"putPlayerMmr\", false)\n          addRemoveNotification(\"success\", \"player has been added!\", 2000);\n          status.mmr = true; // mmr 작업이 잘되었다고 표시\n        } catch (error) {\n          replaceWorking(\"putPlayerMmr\", false)\n          addRemoveNotification(\"error\", \"battletag is wrong\", 4000);\n          status.mmr = false; // mmr 작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n        }\n\n\n        if (status.mmr === true) {\n          try {\n            const idPlanTeam = getTimeStamp();\n            await axios.put(`${process.env.REACT_APP_URL_AHR}/PlanTeam`, reqCreatePlanTeam(idPlanTeam, battletag)); // pass id of new PlanTeam to body of request\n            history.push(`/team-generator/${idPlanTeam}`);\n\n            addRemoveNotification(\"success\", \"new plan has been created!\", 2000);\n          } catch (error) {\n\n          }\n        }\n\n\n        inputBattletag.setValue(\"\");\n\n      } else { // 애초에 battletag를 입력 안했다면.\n        console.log(\"type battletag first\")\n      }\n    }\n\n\n\n\n\n    return (\n\n      < DivCreatingPlan >\n\n      < DivHeader >\n      < DivTitle > Team Generator < /DivTitle>\n\n      < DivId > add battletag first to start < /DivId> < /DivHeader>\n\n      < DivBody >\n\n      < DivInputAdd >\n      < InputBattletag {...inputBattletag\n      }\n      placeholder = \"battletag#1234\" / >\n\n      {\n        working.putPlayerMmr ?\n          < ButtonAddFirst >\n          < DivIconWorking >\n          < IconWorking\n        width = {\n          \"27px\"\n        }\n        height = {\n          \"24px\"\n        }\n        />   < /DivIconWorking> < /ButtonAddFirst> : < ButtonAddFirst onClick = {\n          onClick_ButtonAddFirst\n        } > Add < /ButtonAddFirst> }\n\n\n        < /DivInputAdd>\n\n\n        < /DivBody>\n\n        < /DivCreatingPlan>\n\n      )\n\n    }\n\n\n    /*\n\n    <DivCreatingPlan>\n            \n        <DivHeader>\n          <DivTitle> Team Generator </DivTitle>\n          \n          <DivId> add battletag first to start </DivId>\n        </DivHeader>\n        \n        <DivBody>\n    \t   \n    \t\t    <DivInputAdd>\n    \t\t      <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n    \t\t      \n              {working.putPlayerMmr ? \n    \t        <ButtonAddFirst> \n      \t        <DivIconWorking>\n                  <IconWorking \n                    width={\"27px\"}\n                    height={\"24px\"}\n                  />  \n                </DivIconWorking>\n    \t        </ButtonAddFirst> \n    \t       : <ButtonAddFirst onClick = {onClick_ButtonAddFirst} > Add </ButtonAddFirst> }\n            \n            \n    \t\t    </DivInputAdd>\n    \t\t    \n    \t    \n    \t   </DivBody>\n      \n      </DivCreatingPlan>\n\n    */\n\n\n    function mapStateToProps(state) {\n      return {\n        ready: state.ready,\n        loading: state.loading,\n        working: state.working\n      };\n    }\n\n    function mapDispatchToProps(dispatch) {\n      return {\n        addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time)),\n        replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n      };\n    }\n\n    // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n    export default connect(mapStateToProps, mapDispatchToProps)(CreatingPlan);"]},"metadata":{},"sourceType":"module"}