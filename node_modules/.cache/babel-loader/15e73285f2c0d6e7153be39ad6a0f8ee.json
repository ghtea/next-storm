{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/routes/TeamGeneratorDoor.js\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\nimport { replaceRerender } from \"../redux/store\";\nimport { replaceWorking } from \"../redux/store\";\nimport { replaceLoading } from \"../redux/store\";\nimport { replaceReady } from \"../redux/store\";\nimport { replaceData } from \"../redux/store\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport { Div, Input, Button, A } from '../styles/DefaultStyles'; //import Player from '../components/Player'\n\nimport CreatingPlan from '../components/TeamGenerator/CreatingPlan';\nimport SearchingPlan from '../components/TeamGenerator/SearchingPlan';\nimport AddingPlayer from '../components/TeamGenerator/AddingPlayer';\nimport Entry from '../components/TeamGenerator/Entry';\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  @media (max-width: ${props => props.theme.media.mid_big - 1}px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"A\"\n      \"B\"\n      \"C\"\n      \"D\"\n  }\n \n\n  @media (min-width:  ${props => props.theme.media.mid_big}px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 1fr;\n    grid-template-areas: \n      \"A B\"\n      \"C D\";\n  }\n\n`;\nconst DivA = styled(Div)`\n  grid-area: A;\n`;\nconst DivB = styled(Div)`\n  grid-area: B;\n`;\nconst DivC = styled(Div)`\n  grid-area: C;\n`;\nconst DivD = styled(Div)`\n  grid-area: D;\n`; // https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\n\nconst TeamGeneratorDoor = ({}) => {\n  return /*#__PURE__*/React.createElement(DivTeamGenerator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivA, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CreatingPlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DivB, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"if you forget url\", /*#__PURE__*/React.createElement(A, {\n    href: \"https://twitter.com/mbcat_hots\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \" @mbcat_hots \")), /*#__PURE__*/React.createElement(DivC, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchingPlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n}; //TeamGenerator\n\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGeneratorDoor);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/routes/TeamGeneratorDoor.js"],"names":["React","useEffect","styled","axios","queryString","connect","readPlanTeam","replaceRerender","replaceWorking","replaceLoading","replaceReady","replaceData","addRemoveNotification","Div","Input","Button","A","CreatingPlan","SearchingPlan","AddingPlayer","Entry","useAxiosGet","useInput","DivTeamGenerator","props","theme","media","mid_big","DivA","DivB","DivC","DivD","TeamGeneratorDoor","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AAEA,OAAOC,qBAAP,MAAkC,uCAAlC;AAEA,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,MAApB,EAA4BC,CAA5B,QAAoC,yBAApC,C,CACA;;AAIA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAGA,MAAMC,gBAAgB,GAAGrB,MAAM,CAACW,GAAD,CAAM;;;;uBAIdW,KAAK,IAAKA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,OAAlB,GAA2B,CAAI;;;;;;;;;;;;wBAYxCH,KAAK,IAAKA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,OAAU;;;;;;;;;CAhB9D;AA4BA,MAAMC,IAAI,GAAG1B,MAAM,CAACW,GAAD,CAAM;;CAAzB;AAGA,MAAMgB,IAAI,GAAG3B,MAAM,CAACW,GAAD,CAAM;;CAAzB;AAGA,MAAMiB,IAAI,GAAG5B,MAAM,CAACW,GAAD,CAAM;;CAAzB;AAGA,MAAMkB,IAAI,GAAG7B,MAAM,CAACW,GAAD,CAAM;;CAAzB,C,CAMA;;AACA,MAAMmB,iBAAiB,GAAG,CAAC,EAAD,KAAQ;AAI9B,sBAEA,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEE,oBAAC,CAAD;AAAG,IAAA,IAAI,EAAC,gCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CANF,eAWE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CAFA;AAsBH,CA1BD,C,CA0BE;;;AAIF,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO,EAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO,EAAP;AAGD,C,CAED;;;AACA,eAAe/B,OAAO,CAAC4B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CH,iBAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport queryString from 'query-string';\n\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\n\nimport {replaceRerender} from \"../redux/store\";\nimport {replaceWorking} from \"../redux/store\";\nimport {replaceLoading} from \"../redux/store\";\nimport {replaceReady} from \"../redux/store\";\nimport {replaceData} from \"../redux/store\";\n\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\nimport {Div, Input, Button, A} from '../styles/DefaultStyles';\n//import Player from '../components/Player'\n\n\n\nimport CreatingPlan from '../components/TeamGenerator/CreatingPlan';\nimport SearchingPlan from '../components/TeamGenerator/SearchingPlan';\n\nimport AddingPlayer from '../components/TeamGenerator/AddingPlayer';\nimport Entry from '../components/TeamGenerator/Entry';\n\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\n\n\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"A\"\n      \"B\"\n      \"C\"\n      \"D\"\n  }\n \n\n  @media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 1fr;\n    grid-template-areas: \n      \"A B\"\n      \"C D\";\n  }\n\n`;\n\n\nconst DivA = styled(Div)`\n  grid-area: A;\n`\nconst DivB = styled(Div)`\n  grid-area: B;\n`\nconst DivC = styled(Div)`\n  grid-area: C;\n`\nconst DivD = styled(Div)`\n  grid-area: D;\n`\n\n\n\n// https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\nconst TeamGeneratorDoor = ({}) => {\n  \n\n    \n    return (\n    \n    <DivTeamGenerator>\n      \n      <DivA>\n        <CreatingPlan /> \n      </DivA>\n      \n      <DivB>\n        if you forget url\n        <A href=\"https://twitter.com/mbcat_hots\" > @mbcat_hots </A>\n      </DivB>\n      \n      <DivC>\n        <SearchingPlan />\n      </DivC>\n    \n    </DivTeamGenerator>\n    )\n  \n\n    \n} //TeamGenerator\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    \n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    \n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGeneratorDoor);\n"]},"metadata":{},"sourceType":"module"}