{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/Entry.js\";\nimport dotenv from 'dotenv';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios'; //import path from 'path'\n\nimport { NavLink, useParams } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\"; // https://reacttraining.com/blog/react-router-v5-1/\n\nimport { Div, Table, Tr, Td } from '../../styles/DefaultStyles';\nimport IconLoading from '../../svgs/IconLoading';\nimport IconConfirmed from '../../svgs/IconConfirmed';\nimport IconPending from '../../svgs/IconPending';\nimport IconInfo from '../../svgs/IconInfo'; // 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\n//dotenv.config() ;\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\n\nconst DivEntry = styled(Div)`\n  width: 100%;\n  max-width: 600px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n  padding-bottom: 10px;\n`;\nconst DivEntryTitle = styled(Div)`\n  font-size: 1.2rem;\n  font-weight: bold;\n  \n  margin-bottom: 10px;\n`;\nconst DivDescription = styled(Div)`\n  font-weight: medium;\n  margin-bottom: 15px;\n`;\nconst DivTableEntry = styled(Div)`\n  \n  padding-left: 20px;\n  padding-right: 20px;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n`;\nconst DivIconLoading = styled(Div)`\n  margin-top: 10px;\n`;\n/*\ndisplay:grid;\n*/\n\nconst DivRowHeader = styled(Div)`\n  color: ${props => props.theme.color_weak};\n\n  display: grid;\n  grid-template-columns: 40px 1fr  minmax(40px, 90px) 60px 40px 40px; /* min entire = 400 - 20*2 = 360 */\n  grid-template-rows: 24px;\n  \n  & > Div {\n    font-weight: thin;\n  }\n  //background-color: ${props => props.theme.COLOR_normal};\n   \n  //border-radius:  8px;\n`;\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 40px 1fr  minmax(40px, 90px) 60px 40px 40px; // min entire = 400 - 20*2 = 360\n  grid-template-rows: 40px;\n  \n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  &:last-child {\n    border-bottom-style: none;\n  }\n`;\n/*\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr 60px ${30*4}px 40px 40px; \n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(2) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  10px;\n    \n    border-bottom-style: none;\n    \n  }\n\n*/\n\nconst DivBattletagHeader = styled(Div)`\n  padding-left: 10px;\n  \n  display: block;\n  text-algin: left;\n`;\nconst DivBattletag = styled(Div)`\n  padding-left: 10px;\n  display: block;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst RowPlayer = ({\n  battletag,\n  mmr,\n  statusPlayer\n}) => {\n  useEffect(() => {\n    console.log(\"Each row has been rerendered\");\n  });\n  const IconStatus = {\n    pending: /*#__PURE__*/React.createElement(IconPending, {\n      width: \"20px\",\n      height: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 14\n      }\n    }),\n    confirmed: /*#__PURE__*/React.createElement(IconConfirmed, {\n      width: \"20px\",\n      height: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(DivRowPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconStar, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DivBattletag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, battletag), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, \"(roles)\"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, mmr), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, IconStatus[statusPlayer]), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconInfo, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Entry = ({\n  listPlayerEntry\n}) => {\n  useEffect(() => {\n    console.log(\"Entry has been rerendered\");\n  });\n  return /*#__PURE__*/React.createElement(DivEntry, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivEntryTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, \" Entry \"), /*#__PURE__*/React.createElement(DivDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, \" \", `${listPlayerEntry.length} players`, \" \"), /*#__PURE__*/React.createElement(DivTableEntry, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivRowHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, \" leader \"), /*#__PURE__*/React.createElement(DivBattletagHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, \"  battletag \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, \" roles \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, \" mmr \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, \" status \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, \" \")), listPlayerEntry.map((player, i) => /*#__PURE__*/React.createElement(RowPlayer, {\n    key: `${player._id}_${new Date().getTime().toString()}`,\n    battletag: player._id,\n    mmr: player.mmr.standard.NA,\n    statusPlayer: player.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }))));\n}; //<button onClick= {refetch} > Refectch </button>\n\n\nfunction mapStateToProps(state) {\n  return {\n    listPlayerEntry: [...state.planTeam.listPlayerEntry] //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\n    //,readyPlanTeam: state.ready.planTeam\n    //,loading: state.loading\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n} // TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Entry);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/Entry.js"],"names":["dotenv","React","useState","useEffect","styled","axios","NavLink","useParams","connect","readPlanTeam","Div","Table","Tr","Td","IconLoading","IconConfirmed","IconPending","IconInfo","DivEntry","DivEntryTitle","DivDescription","DivTableEntry","DivIconLoading","DivRowHeader","props","theme","color_weak","COLOR_normal","DivRowPlayer","color_very_weak","DivBattletagHeader","DivBattletag","RowPlayer","battletag","mmr","statusPlayer","console","log","IconStatus","pending","confirmed","Entry","listPlayerEntry","length","map","player","i","_id","Date","getTime","toString","standard","NA","status","mapStateToProps","state","planTeam","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\nimport React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n//import path from 'path'\nimport { NavLink, useParams } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\n// https://reacttraining.com/blog/react-router-v5-1/\n\nimport {Div, Table, Tr, Td} from '../../styles/DefaultStyles';\n\nimport IconLoading from '../../svgs/IconLoading'\n\nimport IconConfirmed from '../../svgs/IconConfirmed'\nimport IconPending from '../../svgs/IconPending'\nimport IconInfo from '../../svgs/IconInfo'\n\n// 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\n//dotenv.config() ;\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\n\nconst DivEntry = styled(Div)`\n  width: 100%;\n  max-width: 600px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n  padding-bottom: 10px;\n`;\n\nconst DivEntryTitle = styled(Div)`\n  font-size: 1.2rem;\n  font-weight: bold;\n  \n  margin-bottom: 10px;\n`\n\nconst DivDescription = styled(Div)`\n  font-weight: medium;\n  margin-bottom: 15px;\n`\n\nconst DivTableEntry = styled(Div)`\n  \n  padding-left: 20px;\n  padding-right: 20px;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n`\n\nconst DivIconLoading = styled(Div)`\n  margin-top: 10px;\n`\n\n/*\ndisplay:grid;\n*/\n\nconst DivRowHeader = styled(Div)`\n  color: ${props => props.theme.color_weak};\n\n  display: grid;\n  grid-template-columns: 40px 1fr  minmax(40px, 90px) 60px 40px 40px; /* min entire = 400 - 20*2 = 360 */\n  grid-template-rows: 24px;\n  \n  & > Div {\n    font-weight: thin;\n  }\n  //background-color: ${props => props.theme.COLOR_normal};\n   \n  //border-radius:  8px;\n`\n\n\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 40px 1fr  minmax(40px, 90px) 60px 40px 40px; // min entire = 400 - 20*2 = 360\n  grid-template-rows: 40px;\n  \n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  &:last-child {\n    border-bottom-style: none;\n  }\n`\n\n/*\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr 60px ${30*4}px 40px 40px; \n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(2) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  10px;\n    \n    border-bottom-style: none;\n    \n  }\n\n*/\n\n\nconst DivBattletagHeader = styled(Div)`\n  padding-left: 10px;\n  \n  display: block;\n  text-algin: left;\n`\n\nconst DivBattletag = styled(Div)`\n  padding-left: 10px;\n  display: block;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\n\n\n\nconst RowPlayer = ({battletag, mmr, statusPlayer}) => {\n  \n  useEffect(()=>{console.log(\"Each row has been rerendered\")})\n  \n  const IconStatus = {\n    pending: <IconPending width={\"20px\"} height={\"20px\"} />\n    ,confirmed: <IconConfirmed width={\"20px\"} height={\"20px\"} />\n  };\n\n  return (\n    \n    <DivRowPlayer >\n      \n      <Div> \n        <IconStar\n          width={\"20px\"}\n          height={\"20px\"}\n        />  \n      </Div>\n      \n      <DivBattletag> \n        {battletag}\n      </DivBattletag>\n      \n      <Div> \n        (roles)\n      </Div>\n      \n      \n      <Div> \n        {mmr}\n      </Div>\n       \n      <Div> \n        {IconStatus[statusPlayer]}\n      </Div>\n        \n       \n      <Div> \n        <IconInfo\n          width={\"20px\"}\n          height={\"20px\"}\n        /> \n      </Div>\n         \n    </DivRowPlayer>\n  )\n}\n\n\n\n\nconst Entry = ({listPlayerEntry}) => {\n  \n  useEffect(()=>{console.log(\"Entry has been rerendered\")})\n  \n  \n  return (\n  \n  <DivEntry>\n    \n    <DivEntryTitle> Entry </DivEntryTitle>\n    <DivDescription> {`${listPlayerEntry.length} players`} </DivDescription>\n    \n    \n    <DivTableEntry> \n    \n    <DivRowHeader> \n      <Div> leader </Div>\n      <DivBattletagHeader>  battletag </DivBattletagHeader>\n      <Div> roles </Div>\n      <Div> mmr </Div>\n      <Div> status </Div>\n      \n       \n      <Div> </Div>\n    </DivRowHeader>\n    \n    { \n      ( listPlayerEntry ).map( (player, i) =>\n      \n        < RowPlayer \n          key={ `${player._id}_${(new Date().getTime()).toString()}` }\n          battletag={player._id} \n          mmr={player.mmr.standard.NA} \n          statusPlayer={player.status} \n        /> \n      )\n    }\n      \n    </DivTableEntry>\n    \n    \n  </DivEntry>\n    \n  )\n}\n\n\t  \n//<button onClick= {refetch} > Refectch </button>\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    listPlayerEntry: [...state.planTeam.listPlayerEntry]\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\n    //,readyPlanTeam: state.ready.planTeam\n    //,loading: state.loading\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    \n  }; \n}\n\n\n// TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(Entry);"]},"metadata":{},"sourceType":"module"}