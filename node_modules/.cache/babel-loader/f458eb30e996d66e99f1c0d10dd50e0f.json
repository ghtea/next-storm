{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TableEntry.js\";\nimport dotenv from 'dotenv';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios'; //import path from 'path'\n\nimport { NavLink, useParams } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\"; // https://reacttraining.com/blog/react-router-v5-1/\n\nimport { Div, Table, Tr, Td } from '../styles/DefaultStyles';\nimport IconLoading from '../svgs/IconLoading';\nimport IconInfo from '../svgs/IconInfo'; // 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\n//dotenv.config() ;\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\n\nconst DivTableEntry = styled(Div)`\n  \n  padding-left: 20px;\n  padding-right: 20px;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n`;\n/*\ndisplay:grid;\n*/\n\nconst DivRow = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr 60px ${30 * 4}px 40px 40px; // min entire = 400 - 20*2 = 360\n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(1) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  10px;\n    \n    border-bottom-style: none;\n    \n  }\n`;\nconst DivBattletag = styled(Div)`\n  padding-left: 5px;\n  display: block;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst RowPlayer = ({\n  _id\n}) => {\n  return /*#__PURE__*/React.createElement(DivRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivBattletag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, _id), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"(mmr)\"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Tank, Bruiser\"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"A\"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconInfo, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst TableEntry = ({\n  loading,\n  ready,\n  planTeam,\n  readPlanTeam,\n  notification\n}) => {\n  let {\n    idPlanTeam\n  } = useParams();\n  useEffect(() => {\n    readPlanTeam(idPlanTeam);\n  }, [notification]);\n  /*\n  const {loading, response, error, refetch } = useAxios({\n    url: `https://ahr.avantwing.com/PlanTeam/${idPlanTeam}`\n  })\n  */\n  //console.log(process.env);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading.planTeam && /*#__PURE__*/React.createElement(IconLoading, {\n    width: \"px\",\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), ready.planTeam &&\n  /*#__PURE__*/\n  //<Div> { JSON.stringify( response[\"data\"][\"listPlayerEntry\"] )} </Div>\n  React.createElement(DivTableEntry, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, planTeam[\"listPlayerEntry\"].map((player, i) => /*#__PURE__*/React.createElement(RowPlayer, {\n    key: player._id,\n    _id: player._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }))));\n}; //<button onClick= {refetch} > Refectch </button>\n\n\nfunction mapStateToProps(state) {\n  return {\n    planTeam: state.planTeam,\n    ready: state.ready,\n    loading: state.loading,\n    notification: state.notification\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    readPlanTeam: idPlanTeam => dispatch(readPlanTeam(idPlanTeam))\n  };\n} // TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableEntry);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TableEntry.js"],"names":["dotenv","React","useState","useEffect","styled","axios","NavLink","useParams","connect","readPlanTeam","Div","Table","Tr","Td","IconLoading","IconInfo","DivTableEntry","DivRow","props","theme","COLOR_normal","color_very_weak","DivBattletag","RowPlayer","_id","TableEntry","loading","ready","planTeam","notification","idPlanTeam","map","player","i","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\nimport React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n//import path from 'path'\nimport { NavLink, useParams } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\n// https://reacttraining.com/blog/react-router-v5-1/\n\nimport {Div, Table, Tr, Td} from '../styles/DefaultStyles';\n\nimport IconLoading from '../svgs/IconLoading'\nimport IconInfo from '../svgs/IconInfo'\n\n// 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\n//dotenv.config() ;\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\n\n\nconst DivTableEntry = styled(Div)`\n  \n  padding-left: 20px;\n  padding-right: 20px;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n`\n\n\n/*\ndisplay:grid;\n*/\n\nconst DivRow = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr 60px ${30*4}px 40px 40px; // min entire = 400 - 20*2 = 360\n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(1) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  10px;\n    \n    border-bottom-style: none;\n    \n  }\n`\n\n\nconst DivBattletag = styled(Div)`\n  padding-left: 5px;\n  display: block;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\n\n\nconst RowPlayer = ({_id}) => {\n  return (\n    \n    <DivRow >\n      \n      <DivBattletag> \n        {_id}\n      </DivBattletag>\n      \n      <Div> \n        (mmr) \n      </Div>\n       \n      <Div> \n        Tank, Bruiser\n      </Div>\n      \n      <Div> \n        A \n      </Div>\n       \n      <Div> \n        <IconInfo\n          width={\"20px\"}\n          height={\"20px\"}\n        /> \n      </Div>\n         \n    </DivRow>\n  )\n}\n\n\n\n\nconst TableEntry = ({loading, ready, planTeam, readPlanTeam, notification}) => {\n  \n  let { idPlanTeam } = useParams();\n  \n    \n  useEffect( () => { readPlanTeam(idPlanTeam) }, [notification]);\n  \n  /*\n  const {loading, response, error, refetch } = useAxios({\n    url: `https://ahr.avantwing.com/PlanTeam/${idPlanTeam}`\n  })\n  */\n  \n\n  \n  \n  //console.log(process.env);\n  return (\n  \n  <>\n    \n    \n  \n    { (loading.planTeam) &&   \n      <IconLoading \n        width={\"px\"}\n        height={\"40px\"}\n      />  \n    }\n    \n    { (ready.planTeam) && \n    \n      //<Div> { JSON.stringify( response[\"data\"][\"listPlayerEntry\"] )} </Div>\n      <DivTableEntry> \n      \n      { \n        ( planTeam[\"listPlayerEntry\"] ).map( (player, i) => \n          \n            < RowPlayer key={player._id} _id={player._id} /> )\n          \n      }\n        \n      </DivTableEntry>\n    }\n    \n  \n  \n  </>\n  )\n}\n\n\t  \n//<button onClick= {refetch} > Refectch </button>\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    planTeam: state.planTeam\n    ,ready: state.ready \n    ,loading: state.loading\n    ,notification: state.notification\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n  }; \n}\n\n\n// TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(TableEntry);"]},"metadata":{},"sourceType":"module"}