{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/CreatingPlan.js\";\nimport dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport { replaceWorking } from \"../redux/store\";\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Div, Input, Button } from '../styles/DefaultStyles';\nimport useInput from '../tools/hooks/useInput';\nimport { getTimeStamp } from '../tools/vanilla/time'; //import {ahr} from '../api';\n\n/*\ndotenv.config({ \n  path: './.env' \n});\n*/\n\nconst DivCreatingPlan = styled(Div)`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n`;\nconst DivId = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`;\nconst DivBody = styled(Div)`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`;\nconst DivInputAdd = styled(Div)`\n\n\theight: 2rem;\n\t\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`;\nconst InputBattletag = styled(Input)`\n\twidth: 160px;\n\theight: 100%;\n`;\nconst ButtonAddFirst = styled(Button)`\n  width: 60px;\n  height: 100%;\n`;\nconst DivCaution = styled(Div)`\n\n\tmargin-top: 5px;\n\t\n\tfont-size: 0.9rem;\n\tcolor: ${props => props.theme.color_weak};\n`;\n\nconst reqPutPlayerMmr = battletag => {\n  return {\n    filter: {\n      _id: battletag\n    }\n  };\n}; // \"listPlayerEntry._id\": { $ne: battletag }  }   //very important  // https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\n// already know there is no PlaTeam with same id\n\n\nconst reqCreatePlanTeam = (idPlanTeam, battletag) => {\n  return {\n    filter: {\n      _id: idPlanTeam\n    },\n    update: {\n      _id: idPlanTeam,\n      listPlayerEntry: [{\n        _id: battletag\n      }]\n    }\n  };\n};\n\nconst CreatingPlan = ({\n  addRemoveNotification,\n  loading,\n  ready,\n  working,\n  replaceWorking\n}) => {\n  //{value, onChange}\n  const inputBattletag = useInput(\"\");\n  const history = useHistory();\n\n  const onClick_ButtonAddFirst = async e => {\n    if (inputBattletag.value) {\n      const battletag = inputBattletag.value;\n      let status = {};\n\n      try {\n        replaceWorking(\"putPlayerMmr\", true);\n        await axios.put(`${process.env.REACT_APP_URL_AHR}/PlayerMmr`, reqPutPlayerMmr(battletag));\n        replaceWorking(\"putPlayerMmr\", false);\n        addRemoveNotification(\"success\", \"player has been added!\", 2000);\n        status.mmr = true; // mmr 작업이 잘되었다고 표시\n      } catch (error) {\n        replaceWorking(\"putPlayerMmr\", false);\n        addRemoveNotification(\"error\", \"battletag is wrong\", 4000);\n        status.mmr = false; // mmr 작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n      }\n\n      if (status.mmr === true) {\n        try {\n          const idPlanTeam = getTimeStamp();\n          await axios.put(`${process.env.REACT_APP_URL_AHR}/PlanTeam`, reqCreatePlanTeam(idPlanTeam, battletag)); // pass id of new PlanTeam to body of request\n\n          history.push(`/team-generator/${idPlanTeam}`);\n          addRemoveNotification(\"success\", \"new plan has been created!\", 2000);\n        } catch (error) {}\n      }\n\n      inputBattletag.setValue(\"\");\n    } else {\n      // 애초에 battletag를 입력 안했다면.\n      console.log(\"type battletag first\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DivCreatingPlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, \" Team Generator \"), /*#__PURE__*/React.createElement(DivId, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, \" add battletag first to start \")), /*#__PURE__*/React.createElement(DivBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivInputAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputBattletag, Object.assign({}, inputBattletag, {\n    placeholder: \"battletag#1234\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  })), working.putPlayerMmr ? /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, \" working... \") : /*#__PURE__*/React.createElement(ButtonAddFirst, {\n    onClick: onClick_ButtonAddFirst,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 59\n    }\n  }, \" Add \"))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    ready: state.ready,\n    loading: state.loading,\n    working: state.working\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time)),\n    replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatingPlan);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/CreatingPlan.js"],"names":["dotenv","React","styled","axios","connect","addRemoveNotification","replaceWorking","NavLink","useHistory","Div","Input","Button","useInput","getTimeStamp","DivCreatingPlan","DivHeader","DivTitle","DivId","props","theme","color_weak","DivBody","DivInputAdd","InputBattletag","ButtonAddFirst","DivCaution","reqPutPlayerMmr","battletag","filter","_id","reqCreatePlanTeam","idPlanTeam","update","listPlayerEntry","CreatingPlan","loading","ready","working","inputBattletag","history","onClick_ButtonAddFirst","e","value","status","put","process","env","REACT_APP_URL_AHR","mmr","error","push","setValue","console","log","putPlayerMmr","mapStateToProps","state","mapDispatchToProps","dispatch","situation","message","time","which","true_false"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport {replaceWorking} from \"../redux/store\";\n\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport {Div, Input, Button} from '../styles/DefaultStyles';\n\n\nimport useInput from '../tools/hooks/useInput';\nimport {getTimeStamp} from '../tools/vanilla/time';\n\n//import {ahr} from '../api';\n/*\ndotenv.config({ \n  path: './.env' \n});\n*/\n\nconst DivCreatingPlan = styled(Div)`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\n\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n`\nconst DivId = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`\n\n\nconst DivBody = styled(Div)`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`\n\nconst DivInputAdd = styled(Div)`\n\n\theight: 2rem;\n\t\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`\n\n\nconst InputBattletag = styled(Input)`\n\twidth: 160px;\n\theight: 100%;\n`\n\n\n\nconst ButtonAddFirst = styled(Button)`\n  width: 60px;\n  height: 100%;\n`\n\nconst DivCaution = styled(Div)`\n\n\tmargin-top: 5px;\n\t\n\tfont-size: 0.9rem;\n\tcolor: ${props => props.theme.color_weak};\n`\n\n\n\nconst reqPutPlayerMmr = (battletag) => {  \n  return {\n    filter: {_id: battletag }\n  }\n};\n\n// \"listPlayerEntry._id\": { $ne: battletag }  }   //very important  // https://stackoverflow.com/questions/26328891/push-value-to-array-if-key-does-not-exist-mongoose\n\n\n// already know there is no PlaTeam with same id\nconst reqCreatePlanTeam = (idPlanTeam, battletag) => {  \n  return {\n    filter: {_id: idPlanTeam }\n    \t\t\n    ,update: {\n      _id: idPlanTeam \n      ,listPlayerEntry: [ {_id: battletag} ]\n    }\n  }\n};\n\n\n const CreatingPlan = ({addRemoveNotification, loading, ready, working, replaceWorking}) => {\n  \n  //{value, onChange}\n  const inputBattletag = useInput(\"\");\n   \n  const history = useHistory(); \n  \n  \n  \n  \n  const onClick_ButtonAddFirst = async (e) => {\n    \n    if (inputBattletag.value) {\n       \n        \n        const battletag = inputBattletag.value;\n        \n        let status = {};\n        \n        try {\n          replaceWorking(\"putPlayerMmr\", true)\n          await axios.put (`${process.env.REACT_APP_URL_AHR}/PlayerMmr`, reqPutPlayerMmr(battletag));\n          \n          replaceWorking(\"putPlayerMmr\", false)\n          addRemoveNotification(\"success\", \"player has been added!\", 2000);\n          status.mmr = true; // mmr 작업이 잘되었다고 표시\n        }\n        catch (error) {\n          replaceWorking(\"putPlayerMmr\", false)\n          addRemoveNotification(\"error\", \"battletag is wrong\", 4000);\n          status.mmr = false; // mmr 작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n        }\n        \n        \n        if (status.mmr === true) {\n          try {\n            const idPlanTeam = getTimeStamp(); \n            await axios.put( `${process.env.REACT_APP_URL_AHR}/PlanTeam`, reqCreatePlanTeam(idPlanTeam, battletag) ); // pass id of new PlanTeam to body of request\n            history.push(`/team-generator/${idPlanTeam}`);\n            \n            addRemoveNotification(\"success\", \"new plan has been created!\", 2000);\n          }\n          catch(error) {\n            \n          }\n        }\n        \n      \n      inputBattletag.setValue(\"\");\n      \n    } else { // 애초에 battletag를 입력 안했다면.\n      console.log(\"type battletag first\")\n    }\n  }  \n  \n  \n  \n\n  \n  return (\n  \n  <DivCreatingPlan>\n        \n    <DivHeader>\n      <DivTitle> Team Generator </DivTitle>\n      \n      <DivId> add battletag first to start </DivId>\n    </DivHeader>\n    \n    <DivBody>\n\t   \n\t\t    <DivInputAdd>\n\t\t      <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n\t\t      \n\t\t      {working.putPlayerMmr ? <Div> working... </Div> : <ButtonAddFirst onClick = {onClick_ButtonAddFirst} > Add </ButtonAddFirst> }\n        \n\t\t    </DivInputAdd>\n\t\t    \n\t    \n\t   </DivBody>\n  \n  </DivCreatingPlan>\n  \n  )\n\n}\n  \n\t  \n\n\nfunction mapStateToProps(state) { \n  return { \n    ready: state.ready \n    ,loading: state.loading\n    ,working: state.working\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n    ,replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatingPlan);"]},"metadata":{},"sourceType":"module"}