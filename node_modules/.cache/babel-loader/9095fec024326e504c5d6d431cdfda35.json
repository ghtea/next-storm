{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/CreatingPlan.js\";\nimport dotenv from 'dotenv';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\nimport { replaceWorking } from \"../../redux/store\";\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Div, Input, Button } from '../../styles/DefaultStyles';\nimport useInput from '../../tools/hooks/useInput';\nimport { getTimeStamp } from '../../tools/vanilla/time';\nimport { generatePassword } from '../../tools/vanilla/password';\nimport IconWorking from '../../svgs/IconWorking';\nimport flagNA from '../../images/flags/NA.png';\nimport flagEU from '../../images/flags/EU.png';\nimport flagKR from '../../images/flags/KR.png';\nimport flagCN from '../../images/flags/CN.png'; //import {ahr} from '../api';\n\n/*\ndotenv.config({ \n  path: './.env' \n});\n*/\n\nconst DivCreatingPlan = styled(Div)`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n`;\nconst DivDescription = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`;\nconst DivBody = styled(Div)`\n  \n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`;\nconst DivInput = styled(Div)`\n  \n  margin-top: 20px;\n  margin-bottom: 10px;\n  \n\theight: 36px;\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`;\nconst InputTitle = styled(Input)`\n\twidth: 160px;\n\theight: 100%;\n`;\nconst ButtonRegion = styled(Button)`\n  width: auto;\n  height: auto;\n  \n`;\nconst ButtonCreatePlan = styled(Button)`\n  width: 60px;\n  height: 100%;\n  \n  border-radius: 6px;\n`;\nconst DivIconWorking = styled(Div)`\n  \n`;\n\nconst CreatingPlan = ({\n  addRemoveNotification,\n  loading,\n  ready,\n  working,\n  readPlanTeam,\n  replaceWorking\n}) => {\n  //{value, onChange}\n  const inputTitle = useInput(\"\");\n  const history = useHistory();\n  const [regionCreating, setRegionCreating] = useState(\"NA\");\n\n  const onClick_ButtonCreatePlan = async event => {\n    const idPlanTeam = getTimeStamp();\n    const pwPlanTeam = generatePassword(8); // ex: \"5y7o\"\n\n    let titlePlanTeam;\n\n    if (inputTitle.value) {\n      titlePlanTeam = inputTitle.value;\n    } else {\n      titlePlanTeam = \"(no title)\";\n    } //let status = {};\n\n\n    try {\n      replaceWorking(\"createPlan\", true);\n      await axios.post(`${process.env.REACT_APP_URL_AHR}/plan-team`, {\n        _id: idPlanTeam,\n        password: pwPlanTeam,\n        title: titlePlanTeam\n      });\n      replaceWorking(\"createPlan\", false);\n      addRemoveNotification(\"success\", \"new plan has been created!\", 3000); //status.createPlan = true; //  작업이 잘되었다고 표시\n      // move after 2 seconds because of preparing time\n      //window.location = `/team-generator/${idPlanTeam}?pw=${pwPlanTeam}`;\n      //setTimeout( ()=>{history.push(`/team-generator/${idPlanTeam}?pw=${pwPlanTeam}`)} , 2000)\n\n      history.push(`/team-generator/${idPlanTeam}?pw=${pwPlanTeam}`);\n    } catch (error) {\n      replaceWorking(\"createPlan\", false);\n      addRemoveNotification(\"error\", \"plan has not been created!\", 3000); //status.createPlan = false; //  작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DivCreatingPlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, \" Team Generator \")), /*#__PURE__*/React.createElement(DivBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputTitle, Object.assign({}, inputTitle, {\n    placeholder: \"title of plan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(ButtonRegion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: flagNA,\n    width: \"48\",\n    height: \"36\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 10\n    }\n  })), working.createPlan ? /*#__PURE__*/React.createElement(ButtonCreatePlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DivIconWorking, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconWorking, {\n    width: \"27px\",\n    height: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(ButtonCreatePlan, {\n    onClick: onClick_ButtonCreatePlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 10\n    }\n  }, \" START \"))));\n};\n/*\n\n<DivCreatingPlan>\n        \n    <DivHeader>\n      <DivTitle> Team Generator </DivTitle>\n      \n      <DivId> add battletag first to start </DivId>\n    </DivHeader>\n    \n    <DivBody>\n\t   \n\t\t    <DivInputAdd>\n\t\t      <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n\t\t      \n          {working.putPlayerMmr ? \n\t        <ButtonAddFirst> \n  \t        <DivIconWorking>\n              <IconWorking \n                width={\"27px\"}\n                height={\"24px\"}\n              />  \n            </DivIconWorking>\n\t        </ButtonAddFirst> \n\t       : <ButtonAddFirst onClick = {onClick_ButtonAddFirst} > Add </ButtonAddFirst> }\n        \n        \n\t\t    </DivInputAdd>\n\t\t    \n\t    \n\t   </DivBody>\n  \n  </DivCreatingPlan>\n\n*/\n\n\nfunction mapStateToProps(state) {\n  return {\n    ready: state.ready,\n    loading: state.loading,\n    working: state.working\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    readPlanTeam: idPlanTeam => dispatch(readPlanTeam(idPlanTeam)),\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time)),\n    replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatingPlan);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/CreatingPlan.js"],"names":["dotenv","React","useState","styled","axios","connect","readPlanTeam","addRemoveNotification","replaceWorking","NavLink","useHistory","Div","Input","Button","useInput","getTimeStamp","generatePassword","IconWorking","flagNA","flagEU","flagKR","flagCN","DivCreatingPlan","DivHeader","DivTitle","DivDescription","props","theme","color_weak","DivBody","DivInput","InputTitle","ButtonRegion","ButtonCreatePlan","DivIconWorking","CreatingPlan","loading","ready","working","inputTitle","history","regionCreating","setRegionCreating","onClick_ButtonCreatePlan","event","idPlanTeam","pwPlanTeam","titlePlanTeam","value","post","process","env","REACT_APP_URL_AHR","_id","password","title","push","error","createPlan","mapStateToProps","state","mapDispatchToProps","dispatch","situation","message","time","which","true_false"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAEA,OAAOC,qBAAP,MAAkC,0CAAlC;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AAEA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AAEA,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,MAApB,QAAiC,4BAAjC;AAGA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,YAAR,QAA2B,0BAA3B;AACA,SAAQC,gBAAR,QAA+B,8BAA/B;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CAEA;;AACA;;;;;;AAMA,MAAMC,eAAe,GAAGnB,MAAM,CAACQ,GAAD,CAAM;;;;;;;;CAApC;AAWA,MAAMY,SAAS,GAAGpB,MAAM,CAACQ,GAAD,CAAM;;;;;CAA9B;AAOA,MAAMa,QAAQ,GAAGrB,MAAM,CAACQ,GAAD,CAAM;;CAA7B;AAIA,MAAMc,cAAc,GAAGtB,MAAM,CAACQ,GAAD,CAAM;WACxBe,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,UAAW;CAD3C;AAKA,MAAMC,OAAO,GAAG1B,MAAM,CAACQ,GAAD,CAAM;;;;;;;CAA5B;AAYA,MAAMmB,QAAQ,GAAG3B,MAAM,CAACQ,GAAD,CAAM;;;;;;;;;;;;;;;CAA7B;AAiBA,MAAMoB,UAAU,GAAG5B,MAAM,CAACS,KAAD,CAAQ;;;CAAjC;AAKA,MAAMoB,YAAY,GAAG7B,MAAM,CAACU,MAAD,CAAS;;;;CAApC;AAMA,MAAMoB,gBAAgB,GAAG9B,MAAM,CAACU,MAAD,CAAS;;;;;CAAxC;AAWA,MAAMqB,cAAc,GAAG/B,MAAM,CAACQ,GAAD,CAAM;;CAAnC;;AAOC,MAAMwB,YAAY,GAAG,CAAC;AAAC5B,EAAAA,qBAAD;AAAwB6B,EAAAA,OAAxB;AAAiCC,EAAAA,KAAjC;AAAwCC,EAAAA,OAAxC;AAAiDhC,EAAAA,YAAjD;AAA+DE,EAAAA;AAA/D,CAAD,KAAoF;AAExG;AACA,QAAM+B,UAAU,GAAGzB,QAAQ,CAAC,EAAD,CAA3B;AACA,QAAM0B,OAAO,GAAG9B,UAAU,EAA1B;AACA,QAAM,CAAC+B,cAAD,EAAiBC,iBAAjB,IAAsCxC,QAAQ,CAAC,IAAD,CAApD;;AAIA,QAAMyC,wBAAwB,GAAG,MAAOC,KAAP,IAAiB;AAEhD,UAAMC,UAAU,GAAG9B,YAAY,EAA/B;AACA,UAAM+B,UAAU,GAAG9B,gBAAgB,CAAC,CAAD,CAAnC,CAHgD,CAGP;;AAGzC,QAAI+B,aAAJ;;AACA,QAAIR,UAAU,CAACS,KAAf,EAAsB;AAAED,MAAAA,aAAa,GAAGR,UAAU,CAACS,KAA3B;AAAkC,KAA1D,MACK;AAACD,MAAAA,aAAa,GAAG,YAAhB;AAA6B,KARa,CAWhD;;;AAEA,QAAI;AACFvC,MAAAA,cAAc,CAAC,YAAD,EAAe,IAAf,CAAd;AACA,YAAMJ,KAAK,CAAC6C,IAAN,CAAa,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAA7C,EAA0D;AAC9DC,QAAAA,GAAG,EAAER,UADyD;AAE7DS,QAAAA,QAAQ,EAAER,UAFmD;AAG7DS,QAAAA,KAAK,EAAER;AAHsD,OAA1D,CAAN;AAMAvC,MAAAA,cAAc,CAAC,YAAD,EAAe,KAAf,CAAd;AACAD,MAAAA,qBAAqB,CAAC,SAAD,EAAY,4BAAZ,EAA0C,IAA1C,CAArB,CATE,CAUF;AAEA;AACA;AACA;;AAEAiC,MAAAA,OAAO,CAACgB,IAAR,CAAc,mBAAkBX,UAAW,OAAMC,UAAW,EAA5D;AACD,KAjBD,CAkBA,OAAOW,KAAP,EAAc;AACZjD,MAAAA,cAAc,CAAC,YAAD,EAAe,KAAf,CAAd;AACAD,MAAAA,qBAAqB,CAAC,OAAD,EAAU,4BAAV,EAAwC,IAAxC,CAArB,CAFY,CAGZ;AACD;AAEF,GArCD;;AA2CA,sBAEA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CAFF,eAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,UAAD,oBAAgBgC,UAAhB;AAA4B,IAAA,WAAW,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH,eAEG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAErB,MAAV;AAAkB,IAAA,KAAK,EAAC,IAAxB;AAA6B,IAAA,MAAM,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFH,EAMKoB,OAAO,CAACoB,UAAR,gBACD,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAE,MADT;AAEE,IAAA,MAAM,EAAE,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADC,gBAYA,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAIf,wBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBL,CAFA,CARF,CAFA;AAwCD,CA5FA;AA+FD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,SAASgB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLvB,IAAAA,KAAK,EAAEuB,KAAK,CAACvB,KADR;AAEJD,IAAAA,OAAO,EAAEwB,KAAK,CAACxB,OAFX;AAGJE,IAAAA,OAAO,EAAEsB,KAAK,CAACtB;AAHX,GAAP;AAKD;;AAED,SAASuB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLxD,IAAAA,YAAY,EAAGuC,UAAD,IAAgBiB,QAAQ,CAACxD,YAAY,CAACuC,UAAD,CAAb,CADjC;AAEJtC,IAAAA,qBAAqB,EAAE,CAACwD,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,KAA8BH,QAAQ,CAAEvD,qBAAqB,CAACwD,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,CAAvB,CAFzD;AAGJzD,IAAAA,cAAc,EAAE,CAAC0D,KAAD,EAAQC,UAAR,KAAuBL,QAAQ,CAACtD,cAAc,CAAC0D,KAAD,EAAQC,UAAR,CAAf;AAH3C,GAAP;AAKD,C,CAED;;;AACA,eAAe9D,OAAO,CAACsD,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1B,YAA7C,CAAf","sourcesContent":["import dotenv from 'dotenv';\nimport React, {useState} from 'react';\nimport styled from 'styled-components';\n\nimport axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\n\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\nimport {replaceWorking} from \"../../redux/store\";\n\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport {Div, Input, Button} from '../../styles/DefaultStyles';\n\n\nimport useInput from '../../tools/hooks/useInput';\nimport {getTimeStamp} from '../../tools/vanilla/time';\nimport {generatePassword} from '../../tools/vanilla/password';\n\nimport IconWorking from '../../svgs/IconWorking'\n\nimport flagNA from '../../images/flags/NA.png';\nimport flagEU from '../../images/flags/EU.png';\nimport flagKR from '../../images/flags/KR.png';\nimport flagCN from '../../images/flags/CN.png';\n\n//import {ahr} from '../api';\n/*\ndotenv.config({ \n  path: './.env' \n});\n*/\n\nconst DivCreatingPlan = styled(Div)`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\n\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n`\n\nconst DivDescription = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`\n\n\nconst DivBody = styled(Div)`\n  \n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`\n\n\n\n\nconst DivInput = styled(Div)`\n  \n  margin-top: 20px;\n  margin-bottom: 10px;\n  \n\theight: 36px;\n\tdisplay: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  \n  & > * {\n  \tmargin-left: 5px;\n  \tmargin-right: 5px;\n  }\n`\n\nconst InputTitle = styled(Input)`\n\twidth: 160px;\n\theight: 100%;\n`\n\nconst ButtonRegion = styled(Button)`\n  width: auto;\n  height: auto;\n  \n`\n\nconst ButtonCreatePlan = styled(Button)`\n  width: 60px;\n  height: 100%;\n  \n  border-radius: 6px;\n`\n\n\n\n\n\nconst DivIconWorking = styled(Div)`\n  \n`\n\n\n\n\n const CreatingPlan = ({addRemoveNotification, loading, ready, working, readPlanTeam, replaceWorking}) => {\n  \n  //{value, onChange}\n  const inputTitle = useInput(\"\");\n  const history = useHistory(); \n  const [regionCreating, setRegionCreating] = useState(\"NA\");\n  \n  \n\n  const onClick_ButtonCreatePlan = async (event) => {\n    \n    const idPlanTeam = getTimeStamp();\n    const pwPlanTeam = generatePassword(8);  // ex: \"5y7o\"\n    \n    \n    let titlePlanTeam;\n    if (inputTitle.value) { titlePlanTeam = inputTitle.value }\n    else {titlePlanTeam = \"(no title)\"}\n    \n    \n    //let status = {};\n    \n    try {\n      replaceWorking(\"createPlan\", true);\n      await axios.post (`${process.env.REACT_APP_URL_AHR}/plan-team`, {\n        _id: idPlanTeam\n        ,password: pwPlanTeam\n        ,title: titlePlanTeam\n      });\n      \n      replaceWorking(\"createPlan\", false);\n      addRemoveNotification(\"success\", \"new plan has been created!\", 3000);\n      //status.createPlan = true; //  작업이 잘되었다고 표시\n      \n      // move after 2 seconds because of preparing time\n      //window.location = `/team-generator/${idPlanTeam}?pw=${pwPlanTeam}`;\n      //setTimeout( ()=>{history.push(`/team-generator/${idPlanTeam}?pw=${pwPlanTeam}`)} , 2000)\n      \n      history.push(`/team-generator/${idPlanTeam}?pw=${pwPlanTeam}`)\n    }\n    catch (error) {\n      replaceWorking(\"createPlan\", false)\n      addRemoveNotification(\"error\", \"plan has not been created!\", 3000);\n      //status.createPlan = false; //  작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n    }\n    \n  }  \n  \n  \n  \n\n  \n  return (\n  \n  <DivCreatingPlan>\n        \n    <DivHeader>\n    \n      <DivTitle> Team Generator </DivTitle>\n      \n    </DivHeader>\n    \n    <DivBody>\n\t   \n\t\t  <DivInput>\n\t      <InputTitle {...inputTitle} placeholder=\"title of plan\" />\n\t      <ButtonRegion> \n\t        <img src={flagNA} width=\"48\" height=\"36\" />\n\t      </ButtonRegion>\n\t      \n        {working.createPlan ? \n        <ButtonCreatePlan> \n        \n          <DivIconWorking>\n            <IconWorking \n              width={\"27px\"}\n              height={\"24px\"}\n            />  \n          </DivIconWorking>\n          \n        </ButtonCreatePlan> \n        \n       : <ButtonCreatePlan onClick = {onClick_ButtonCreatePlan} > START </ButtonCreatePlan> }\n        \n\t\t  </DivInput>\n\t    \n\t   </DivBody>\n  \n  </DivCreatingPlan>\n  \n  )\n\n}\n  \n  \n/*\n\n<DivCreatingPlan>\n        \n    <DivHeader>\n      <DivTitle> Team Generator </DivTitle>\n      \n      <DivId> add battletag first to start </DivId>\n    </DivHeader>\n    \n    <DivBody>\n\t   \n\t\t    <DivInputAdd>\n\t\t      <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n\t\t      \n          {working.putPlayerMmr ? \n\t        <ButtonAddFirst> \n  \t        <DivIconWorking>\n              <IconWorking \n                width={\"27px\"}\n                height={\"24px\"}\n              />  \n            </DivIconWorking>\n\t        </ButtonAddFirst> \n\t       : <ButtonAddFirst onClick = {onClick_ButtonAddFirst} > Add </ButtonAddFirst> }\n        \n        \n\t\t    </DivInputAdd>\n\t\t    \n\t    \n\t   </DivBody>\n  \n  </DivCreatingPlan>\n\n*/\n\n\nfunction mapStateToProps(state) { \n  return { \n    ready: state.ready \n    ,loading: state.loading\n    ,working: state.working\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n    ,addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n    ,replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatingPlan);"]},"metadata":{},"sourceType":"module"}