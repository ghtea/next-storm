{"ast":null,"code":"import { createStore } from \"redux\";\nimport axios from 'axios';\nimport dotenv from 'dotenv';\nconst UPDATE = \"UPDATE\"; // belong to actionCreator\n\nconst readPlanTeam = async idPlanTeam => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_URL_AHR}/PlanTeam/${idPlanTeam}`);\n    return {\n      type: UPDATE,\n      planTeam: newPlanTeam\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst reducer = (state = {\n  test: \"it is test\",\n  planTeam: {},\n  ready: {\n    planTeam: false\n  },\n  loading: {\n    planTeam: false\n  }\n}, action) => {\n  switch (action.type) {\n    case UPDATE:\n      return { ...state,\n        planTeam: action.planTeam\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nexport const actionCreators = {\n  updatePlanTeam\n};\nexport default store;","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/store.js"],"names":["createStore","axios","dotenv","UPDATE","readPlanTeam","idPlanTeam","response","get","process","env","REACT_APP_URL_AHR","type","planTeam","newPlanTeam","error","console","log","reducer","state","test","ready","loading","action","store","actionCreators","updatePlanTeam"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAKA,MAAMC,MAAM,GAAG,QAAf,C,CAGA;;AACA,MAAMC,YAAY,GAAG,MAAOC,UAAP,IAAsB;AAGzC,MAAI;AAEF,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,aAAYL,UAAW,EAAnE,CAAvB;AAIA,WAAO;AACLM,MAAAA,IAAI,EAAER,MADD;AAELS,MAAAA,QAAQ,EAAEC;AAFL,KAAP;AAID,GAVD,CAWA,OAAOC,KAAP,EAAc;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAoB;AACrC,CAfD;;AAkBA,MAAMG,OAAO,GAAG,CAEdC,KAAK,GAAG;AAENC,EAAAA,IAAI,EAAE,YAFA;AAGNP,EAAAA,QAAQ,EAAE,EAHJ;AAKNQ,EAAAA,KAAK,EAAG;AACNR,IAAAA,QAAQ,EAAE;AADJ,GALF;AASNS,EAAAA,OAAO,EAAG;AACRT,IAAAA,QAAQ,EAAE;AADF;AATJ,CAFM,EAkBdU,MAlBc,KAkBH;AAEX,UAAQA,MAAM,CAACX,IAAf;AAEE,SAAKR,MAAL;AACE,aAAO,EACN,GAAGe,KADG;AAENN,QAAAA,QAAQ,EAAEU,MAAM,CAACV;AAFX,OAAP;;AAKF;AACE,aAAOM,KAAP;AATJ;AAWD,CA/BD;;AAiCA,MAAMK,KAAK,GAAGvB,WAAW,CAACiB,OAAD,CAAzB;AAEA,OAAO,MAAMO,cAAc,GAAG;AAC5BC,EAAAA;AAD4B,CAAvB;AAIP,eAAeF,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\n\r\n\r\n\r\nconst UPDATE = \"UPDATE\";\r\n\r\n\r\n// belong to actionCreator\r\nconst readPlanTeam = async (idPlanTeam) => {\r\n  \r\n  \r\n  try {\r\n    \r\n    const response = await axios.get( `${process.env.REACT_APP_URL_AHR}/PlanTeam/${idPlanTeam}`);\r\n    \r\n    \r\n    \r\n    return {\r\n      type: UPDATE,\r\n      planTeam: newPlanTeam\r\n    };\r\n  }\r\n  catch (error) { console.log(error) }\r\n};\r\n\r\n\r\nconst reducer = (\r\n  \r\n  state = { \r\n    \r\n    test: \"it is test\", \r\n    planTeam: {}, \r\n    \r\n    ready : {\r\n      planTeam: false\r\n    },\r\n    \r\n    loading : {\r\n      planTeam: false\r\n    }\r\n    \r\n  }, \r\n  \r\n  \r\n  action) => {\r\n    \r\n  switch (action.type) {\r\n    \r\n    case UPDATE:\r\n      return {\r\n      \t...state, \r\n      \tplanTeam: action.planTeam\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport const actionCreators = {\r\n  updatePlanTeam\r\n};\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}