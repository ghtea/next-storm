{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/Result.js\";\nimport dotenv from 'dotenv';\nimport React, { useState, useEffect } from 'react';\nimport useInput from '../../tools/hooks/useInput';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { addResult } from \"../../redux/store\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\"; // https://reacttraining.com/blog/react-router-v5-1/\n\nimport { Div, Button, Input } from '../../styles/DefaultStyles';\nimport IconConfirmed from '../../svgs/IconConfirmed';\nimport IconPending from '../../svgs/IconPending';\nimport IconInfo from '../../svgs/IconInfo';\nimport IconMagic from '../../svgs/basic/IconMagic';\nimport IconUpload from '../../svgs/basic/IconUpload';\nimport IconTank from '../../svgs/roles/IconTank';\nimport IconBruiser from '../../svgs/roles/IconBruiser';\nimport IconMeleeAssassin from '../../svgs/roles/IconMeleeAssassin';\nimport IconRangedAssassin from '../../svgs/roles/IconRangedAssassin';\nimport IconHealer from '../../svgs/roles/IconHealer';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { getRandomSubArray } from '../../tools/vanilla/array';\nconst DivResult = styled(Div)`\n  width: 100%;\n  height: 100%;\n  max-width: 600px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n  padding-bottom: 10px;\n`;\nconst DivResultTitle = styled(Div)`\n  margin-top: 20px;\n  \n  font-size: 1.2rem;\n  font-weight: bold;\n  \n  margin-bottom: 10px;\n`;\nconst GroupButtonMain = styled(Div)`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n  & > div {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    \n    margin-top: 5px;\n    margin-bottom: 5px;\n  }\n  \n`;\nconst ButtonGenerate = styled(Button)`\n  width: 180px;\n  height: 36px;\n  \n  \n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  \n  border-radius: 10px;\n  \n  & > div {\n    \n    height: 100%;\n  }\n`;\nconst InputTitleResult = styled(Input)`\n\twidth: 150px;\n\theight: 36px;\n\t\n\tborder-radius: 10px;\n\t\n\tmargin-left: 5px;\n  margin-right: 5px;\n`;\nconst ButtonSave = styled(Button)`\n  width: 100px;\n  height: 36px;\n  \n  margin-left: 5px;\n  margin-right: 5px;\n  \n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  \n  border-radius: 10px;\n  \n  \n  \n  & > div {\n    \n    height: 100%;\n  }\n`;\nconst ListTitleResult = styled(Div)`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-starty;\n  align-items: center;\n  \n  overflow-x: scroll;\n  width: 100%;\n  \n  & > button {\n    height: 30px;\n    border-radius: 6px;\n    margin-left: 3px;\n    margin-right: 3px;\n  }\n`;\nconst ButtonChooseResult = styled(Button)`\n  \n`;\nconst DivAllTeams = styled(Div)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  \n  flex-wrap: wrap;\n  \n  @media (max-width: ${props => props.theme.media.mid_big - 1}px ) {\n    overflow-y: scroll;\n    height: 320px;\n  }\n`; // each TableTeam\n\nconst DivTableTeam = styled(Div)`\n  \n  width: 220px;\n  margin:5px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst DivNameEachTeam = styled(Div)`\n  font-size: 1.2rem;\n`;\nconst DivRosterEachTeam = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst DivAverageMmrEachTeam = styled(Div)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\nconst DivAverageMmrEachTeamText = styled(Div)`\n  width: 100px;\n  font-size: 0.9rem;\n  color: ${props => props.theme.color_weak};\n`;\nconst DivAverageMmrEachTeamValue = styled(Div)`\n  width: 60px;\n`; // each row\n\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns:   100px 120px;\n  grid-template-rows: 40px;\n\n  \n  \n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  &:last-child {\n    border-bottom-style: none;\n  }\n`;\nconst DivBattletagHeader = styled(Div)`\n  padding-left: 10px;\n  \n  display: block;\n  text-algin: left;\n`;\nconst DivBattletag = styled(Div)`\n  justify-self: start;\n  \n  padding-left: 10px;\n  \n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-end;\n  \n  cursor: pointer;\n  \n  @media (max-width: ${props => props.theme.media.small_mid - 1}px ) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n  }\n`;\nconst DivBattletagName = styled(Div)`\n  \n  font-weight: ${props => props.isLeader ? \"bold\" : \"regular\"};\n  \n  width: auto;\n  max-width: inherit;\n  \n  display: inline;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\nconst DivRoles = styled(Div)`\n  \n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  \n  & > div {\n    width: auto;   // important!!!\n    height: auto;\n  }\n  \n  & > div > div {\n    width: 20px;\n    height: 20px;\n    margin: 2px;\n  }\n`;\n\nconst RowPlayer = ({\n  battletag,\n  roles,\n  isLeader,\n  addRemoveNotification\n}) => {\n  const regexBattletag = /(#\\d*)$/;\n  const listNumberBattletag = battletag.match(regexBattletag);\n  const battletagNumber = listNumberBattletag[0];\n  const battletagName = battletag.replace(regexBattletag, \"\");\n  return /*#__PURE__*/React.createElement(DivRowPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: battletag,\n    onCopy: () => {\n      addRemoveNotification(\"success\", `'${battletag}' has been copied`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DivBattletag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DivBattletagName, {\n    isLeader: isLeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, \" \", battletagName, \" \"))), /*#__PURE__*/React.createElement(DivRoles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, \" \", roles.includes(\"Tank\") ? /*#__PURE__*/React.createElement(IconTank, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 42\n    }\n  }) : /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 88\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  }, \" \", roles.includes(\"Bruiser\") ? /*#__PURE__*/React.createElement(IconBruiser, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 94\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, \" \", roles.includes(\"Melee Assassin\") ? /*#__PURE__*/React.createElement(IconMeleeAssassin, {\n    width: \"18px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 52\n    }\n  }) : /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 107\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, \" \", roles.includes(\"Ranged Assassin\") ? /*#__PURE__*/React.createElement(IconRangedAssassin, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 53\n    }\n  }) : /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 109\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, \" \", roles.includes(\"Healer\") ? /*#__PURE__*/React.createElement(IconHealer, {\n    width: \"15px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 44\n    }\n  }) : /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 92\n    }\n  }), \" \")));\n};\n\nconst TableTeam = ({\n  objTeam,\n  listPlayerEntry,\n  addRemoveNotification,\n  region\n}) => {\n  const listPlayerBattletag = objTeam.listPlayerBattletag; //  정렬 함수\n\n  const sortListBattletagByMmrHigherFirst = (battletag1, battletag2) => {\n    // mmr 높은순으로 list of battletags\n    const objPlayer1 = listPlayerEntry.find(objPlayer => objPlayer._id === battletag1);\n    const objPlayer2 = listPlayerEntry.find(objPlayer => objPlayer._id === battletag2);\n\n    if (objPlayer1.tags.includes(\"leader\")) {\n      return -1;\n    } // leader 는 무조건 앞에\n    else if (objPlayer2.tags.includes(\"leader\")) {\n        return 1;\n      } // leader 는 무조건 앞에\n      else {\n          return objPlayer2.mmr.standard[region] - objPlayer1.mmr.standard[region]; // ex 3333, 222, 1111\n        }\n  }; // 평균 mmr 계산\n\n\n  let sumOfMmmr = 0;\n\n  for (let iMember = 0; iMember < 5; iMember++) {\n    const cBattletag = listPlayerBattletag[iMember];\n    const cObjPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === cBattletag);\n    sumOfMmmr += cObjPlayer.mmr.standard[region];\n  }\n\n  const averageOfMmr = Math.floor(sumOfMmmr / 5);\n  const listPlayerBattletagSorted = listPlayerBattletag.sort((battletag1, battletag2) => sortListBattletagByMmrHigherFirst(battletag1, battletag2));\n  return /*#__PURE__*/React.createElement(DivTableTeam, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivNameEachTeam, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }\n  }, \" \", objTeam.name, \" \"), /*#__PURE__*/React.createElement(DivRosterEachTeam, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }\n  }, listPlayerBattletagSorted.map((battletag, i) => {\n    const cObjPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n    const isLeader = cObjPlayer.tags.includes(\"leader\");\n    return /*#__PURE__*/React.createElement(RowPlayer, {\n      key: battletag,\n      battletag: battletag,\n      roles: cObjPlayer.roles,\n      isLeader: isLeader,\n      addRemoveNotification: addRemoveNotification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    });\n  }) // inside map\n  ), /*#__PURE__*/React.createElement(DivAverageMmrEachTeam, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DivAverageMmrEachTeamText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, \" average mmr: \"), /*#__PURE__*/React.createElement(DivAverageMmrEachTeamValue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }, \" \", averageOfMmr, \" \"))); // return\n};\n/* \r\n\r\n*/\n\n\nconst Result = ({\n  authority,\n  idPlanTeam,\n  option,\n  listPlayerEntry,\n  listResult,\n  addRemoveNotification,\n  addResult\n}) => {\n  const inputTitleResult = useInput(\"\");\n  const [listTeamLocal, setListTeamLocal] = useState([]);\n  const [resultShowing, setResultShowing] = useState({\n    listTeam: []\n  });\n  const region = option.region;\n  const numberTeamsPlanned = option.numberTeams;\n  const listPlayerBattletag = Object.keys(listPlayerEntry).map(element => listPlayerEntry[element]._id); // list of battletags, this can be modified by .sort\n  // 1. confirmed - 2. leader - 3. less roles player(2, 1) - 4. rest\n\n  const onClick_generateTeams = event => {\n    let numberTeamsResult;\n    let listBattletagPlaying = [];\n    let listBattletagPlayingSorted = []; //  많이 쓸 정렬 함수\n\n    const sortListBattletagByMmrHigherFirst = (battletag1, battletag2) => {\n      // mmr 높은순으로 list of battletags\n      const objPlayer1 = listPlayerEntry.find(objPlayer => objPlayer._id === battletag1);\n      const objPlayer2 = listPlayerEntry.find(objPlayer => objPlayer._id === battletag2);\n      return objPlayer2.mmr.standard[region] - objPlayer1.mmr.standard[region]; // ex 3333, 222, 1111\n    }; // A. 먼저 leader, confirmed  인 것들 고려해서 총 플레이 인원 뽑기\n    // B. 그다음 총 리스트를 leader, 플레이 역할 적은 플레이어, 그외 로 세 개로 나누고, 각각의 3개의 리스트 안에서 mmr 높은 순으로 정렬하고 합치기\n    // C. 정렬된 플레이러들을, (example of 3 teams)\n    // team:  0 1 2    2 1 0   0 1 2    2 1 0  마지막 주기는  mmr 총합 낮은 팀에 mmr 높은 사람 넣는 식으로!\n    // A-1\n\n\n    const listBattletagConfirmed = listPlayerBattletag.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n      return objPlayer.status === \"confirmed\";\n    });\n    const listBattletagConfirmedLeader = listBattletagConfirmed.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n      return objPlayer.tags.includes(\"leader\");\n    });\n    const listBattletagConfirmedNonLeader = listBattletagConfirmed.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n      return !objPlayer.tags.includes(\"leader\");\n    }); //  먼저 설정된 팀 개수 검토\n    // numberTeamsPlanned: 0  means auto \n\n    if (numberTeamsPlanned === 0) {\n      numberTeamsResult = Math.floor(listBattletagConfirmed.length / 5);\n    } else if (listBattletagConfirmed.length < numberTeamsPlanned * 5) {\n      addRemoveNotification(\"error\", \"the number of team which you have set was adjusted\");\n      numberTeamsResult = Math.floor(listBattletagConfirmed.length / 5);\n    } else {\n      numberTeamsResult = numberTeamsPlanned;\n    } // A-2\n\n\n    if (numberTeamsResult === 0) {\n      addRemoveNotification(\"error\", \"need at least 5 confirmed players\");\n    } else if (listBattletagConfirmedLeader.length >= numberTeamsResult * 5) {\n      listBattletagPlaying = getRandomSubArray(listBattletagConfirmedLeader, numberTeamsPlanned * 5);\n    } else {\n      const numberConfirmedLeader = listBattletagConfirmedLeader.length;\n      const listBattletagConfirmedNonLeaderPlaying = getRandomSubArray(listBattletagConfirmedNonLeader, numberTeamsResult * 5 - numberConfirmedLeader);\n      listBattletagPlaying = [...listBattletagConfirmedLeader, ...listBattletagConfirmedNonLeaderPlaying];\n    } //console.log(\"listBattletagPlaying\")\n    //console.log(listBattletagPlaying)\n    // B. 그다음 총 리스트를 leader, 플레이 역할 적은 플레이어, 그외 로 세 개로 나누고, 각각의 3개의 리스트 안에서 mmr 높은 순으로 정렬하고 합치기\n\n\n    let listBattletagPlayingLeader = listBattletagPlaying.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n      return objPlayer.tags.includes(\"leader\");\n    });\n    listBattletagPlayingLeader = listBattletagPlayingLeader.sort((battletag1, battletag2) => sortListBattletagByMmrHigherFirst(battletag1, battletag2));\n    let listBattletagPlayingLessRoles = listBattletagPlaying.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n      return !objPlayer.tags.includes(\"leader\") && objPlayer.roles.length <= 2;\n    });\n    listBattletagPlayingLessRoles = listBattletagPlayingLessRoles.sort((battletag1, battletag2) => sortListBattletagByMmrHigherFirst(battletag1, battletag2));\n    let listBattletagPlayingTheOthers = listBattletagPlaying.filter(battletag => {\n      const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n      return !(objPlayer.roles.length <= 2) && !objPlayer.tags.includes(\"leader\");\n    });\n    listBattletagPlayingTheOthers = listBattletagPlayingTheOthers.sort((battletag1, battletag2) => sortListBattletagByMmrHigherFirst(battletag1, battletag2)); // finally\n\n    listBattletagPlayingSorted = [...listBattletagPlayingLeader, ...listBattletagPlayingLessRoles, ...listBattletagPlayingTheOthers];\n    console.log(`listBattletagPlayingSorted`);\n    console.log(listBattletagPlayingSorted); // C. 정렬된 플레이러들을, (example of 3 teams)\n    // team:  0 1 2    2 1 0   0 1 2    2 1 0  마지막 주기는  mmr 총합 낮은 팀에 mmr 높은 사람 넣는 식으로!\n    //https://stackoverflow.com/questions/3746725/how-to-create-an-array-containing-1-n\n\n    let listIndexTeam = [];\n    const listIncreasing = Array.from(Array(numberTeamsResult), (_, i) => i); // => [0, 1, 2, 3, 4, 5, ...]\n\n    const listDecreasing = Array.from(Array(numberTeamsResult), (_, i) => numberTeamsResult - 1 - i); // => [5, 4, 3, ... ]\n\n    listIndexTeam = [...listIncreasing, ...listDecreasing, ...listIncreasing, ...listDecreasing]; //console.log('listIndexTeam')\n    //console.log(listIndexTeam)\n\n    let listTeamTemp = new Array(numberTeamsResult);\n\n    for (let i = 0; i < numberTeamsResult; i++) {\n      listTeamTemp[i] = {};\n      listTeamTemp[i]['name'] = `TEAM ${i + 1}`;\n      listTeamTemp[i]['listPlayerBattletag'] = [];\n    }\n\n    for (let iBattletag = 0; iBattletag < listBattletagPlayingSorted.length - numberTeamsResult; iBattletag++) {\n      const cBattletag = listBattletagPlayingSorted[iBattletag];\n      const indexTeamToPush = listIndexTeam[iBattletag];\n      listTeamTemp[indexTeamToPush]['listPlayerBattletag'].push(cBattletag);\n    }\n\n    console.log(\"listTeamTemp\");\n    console.log(listTeamTemp);\n    let listTeamSumOfMmr = Array.from(Array(numberTeamsResult), (_, i) => 0); // numberTeamsResult 개의  0 으로 이루어진 리스트\n\n    let listTeamAverageOfMmr = Array.from(Array(numberTeamsResult), (_, i) => 0); // numberTeamsResult 개의  0 으로 이루어진 리스트\n    //console.log(listTeamSumOfMmr);\n\n    for (let iTeam = 0; iTeam < numberTeamsResult; iTeam++) {\n      for (let iMember = 0; iMember < 4; iMember++) {\n        const cBattletag = listTeamTemp[iTeam]['listPlayerBattletag'][iMember];\n        const cObjPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === cBattletag);\n        listTeamSumOfMmr[iTeam] += cObjPlayer.mmr.standard[region];\n      }\n    }\n\n    console.log(\"listTeamSumOfMmr\");\n    console.log(listTeamSumOfMmr);\n    let listIndexTeamWhichNeedHighMmrPlayer = [];\n    const listTool = Array.from(Array(numberTeamsResult), (_, i) => i); // [0, 1, 2, ...]\n\n    listIndexTeamWhichNeedHighMmrPlayer = listTool.sort((index1, index2) => {\n      const SumOfMmmr1 = listTeamSumOfMmr[index1];\n      const SumOfMmmr2 = listTeamSumOfMmr[index2];\n      return SumOfMmmr1 - SumOfMmmr2; // 작은게 앞에 나오게 된다.\n    }); // 마지막 인원들 넣기\n\n    for (let jTeam = 0; jTeam < numberTeamsResult; jTeam++) {\n      const cIndexTeam = listIndexTeamWhichNeedHighMmrPlayer[jTeam];\n      const cBattletag = listBattletagPlayingSorted[numberTeamsResult * 4 + jTeam];\n      const cObjPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === cBattletag);\n      listTeamTemp[cIndexTeam]['listPlayerBattletag'].push(cBattletag);\n      listTeamSumOfMmr[cIndexTeam] += cObjPlayer.mmr.standard[region];\n    } // calculate mmr average\n\n\n    for (let iTeam = 0; iTeam < numberTeamsResult; iTeam++) {\n      listTeamAverageOfMmr[iTeam] = listTeamSumOfMmr[iTeam] / 5;\n    }\n\n    console.log(listTeamTemp);\n    console.log(\"final average of mmr each team: \");\n    console.log(listTeamAverageOfMmr);\n    setListTeamLocal(listTeamTemp);\n    const newResult = {\n      title: \"local\",\n      _id: \"local\",\n      added: Date.now(),\n      listTeam: listTeamTemp\n    }; // 이미 list에 있는 _id = \"local\" 인걸 없애야 한다\n\n    addResult(newResult); // 지금 표시할 \n\n    const resultChosen = listResult.find(element => element._id === \"local\");\n    setResultShowing(resultChosen);\n    setResultShowing(resultChosen);\n  }; //onClick_generateTeams\n\n  /*\r\n  const inputTitleResult = useInput(\"\");\r\n  \r\n  const [listTeams, setListTeams] = useState([]);\r\n  \r\n  const region = option.region;\r\n  const numberTeamsPlanned = option.numberTeams;\r\n  const listPlayerBattletag = (Object.keys(listPlayerEntry)).map(element=>listPlayerEntry[element]._id); // list of battletags, this can be modified by .sort\r\n  \r\n  */\n  // 1\n\n\n  const onClick_SaveResult = async event => {\n    if (listTeamLocal.length > 0) {\n      try {\n        let titleResult;\n\n        if (inputTitleResult.value) {\n          titleResult = inputTitleResult.value;\n        } else {\n          const now = new Date();\n          const date = now.getDate();\n          const hour = now.getHours();\n          const min = now.getMinutes();\n          titleResult = `${date}_${hour}:${min}`;\n        }\n\n        const newResult = {\n          title: titleResult,\n          _id: Date.now().toString(),\n          added: Date.now(),\n          listTeam: listTeamLocal\n        };\n        addResult(newResult); //replaceRegion(newRegion);\n\n        await axios.put(`${process.env.REACT_APP_URL_AHR}/plan-team/`, {\n          filter: {\n            _id: idPlanTeam\n          },\n          update: {\n            $push: {\n              \"listResult\": newResult\n            }\n          }\n        });\n        addRemoveNotification(\"success\", \"result has been saved!\");\n      } catch (error) {\n        addRemoveNotification(\"error\", \"failed in saving result\");\n      }\n    } else {\n      addRemoveNotification(\"error\", \"there is no result yet\");\n    }\n  };\n\n  const onClick_ChooseResult = (event, idChosen) => {\n    const resultChosen = listResult.find(element => element._id === idChosen);\n    setResultShowing(resultChosen);\n    console.log(resultChosen);\n  };\n\n  return /*#__PURE__*/React.createElement(DivResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivResultTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 5\n    }\n  }, \" Result \"), authority === \"administrator\" ? /*#__PURE__*/React.createElement(GroupButtonMain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGenerate, {\n    onClick: onClick_generateTeams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 13\n    }\n  }, \" Generate Teams \"), /*#__PURE__*/React.createElement(IconMagic, {\n    width: \"28px\",\n    height: \"28px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputTitleResult, Object.assign({}, inputTitleResult, {\n    placeholder: \"title of result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ButtonSave, {\n    onClick: onClick_SaveResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 13\n    }\n  }, \" Save \"), /*#__PURE__*/React.createElement(IconUpload, {\n    width: \"40px\",\n    height: \"32px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 13\n    }\n  })))) : /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 9\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(ListTitleResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 5\n    }\n  }, listResult.map(element => /*#__PURE__*/React.createElement(ButtonChooseResult, {\n    key: element._id,\n    onClick: event => onClick_ChooseResult(event, element._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 9\n    }\n  }, \" \", element.title, \" \"))), /*#__PURE__*/React.createElement(DivAllTeams, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 5\n    }\n  }, resultShowing.listTeam.length ? resultShowing.listTeam.map((team, index) => /*#__PURE__*/React.createElement(TableTeam, {\n    key: team.name,\n    objTeam: team,\n    listPlayerEntry: listPlayerEntry,\n    addRemoveNotification: addRemoveNotification,\n    region: region,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 9\n    }\n  })) : \"choose or generate result\"));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    authority: state.authority,\n    idPlanTeam: state.planTeam._id,\n    option: state.planTeam.option,\n    listPlayerEntry: state.planTeam.listPlayerEntry,\n    listResult: state.planTeam.listResult //listPlayerEntry: [...state.planTeam.listPlayerEntry]\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\n    //,readyPlanTeam: state.ready.planTeam\n    //,loading: state.loading\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addResult: resultTeam => dispatch(addResult(resultTeam)),\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time))\n  };\n} // TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/Result.js"],"names":["dotenv","React","useState","useEffect","useInput","styled","axios","NavLink","useParams","connect","addResult","readPlanTeam","addRemoveNotification","Div","Button","Input","IconConfirmed","IconPending","IconInfo","IconMagic","IconUpload","IconTank","IconBruiser","IconMeleeAssassin","IconRangedAssassin","IconHealer","CopyToClipboard","getRandomSubArray","DivResult","DivResultTitle","GroupButtonMain","ButtonGenerate","InputTitleResult","ButtonSave","ListTitleResult","ButtonChooseResult","DivAllTeams","props","theme","media","mid_big","DivTableTeam","DivNameEachTeam","DivRosterEachTeam","DivAverageMmrEachTeam","DivAverageMmrEachTeamText","color_weak","DivAverageMmrEachTeamValue","DivRowPlayer","color_very_weak","DivBattletagHeader","DivBattletag","small_mid","DivBattletagName","isLeader","DivRoles","RowPlayer","battletag","roles","regexBattletag","listNumberBattletag","match","battletagNumber","battletagName","replace","includes","TableTeam","objTeam","listPlayerEntry","region","listPlayerBattletag","sortListBattletagByMmrHigherFirst","battletag1","battletag2","objPlayer1","find","objPlayer","_id","objPlayer2","tags","mmr","standard","sumOfMmmr","iMember","cBattletag","cObjPlayer","averageOfMmr","Math","floor","listPlayerBattletagSorted","sort","name","map","i","Result","authority","idPlanTeam","option","listResult","inputTitleResult","listTeamLocal","setListTeamLocal","resultShowing","setResultShowing","listTeam","numberTeamsPlanned","numberTeams","Object","keys","element","onClick_generateTeams","event","numberTeamsResult","listBattletagPlaying","listBattletagPlayingSorted","listBattletagConfirmed","filter","status","listBattletagConfirmedLeader","listBattletagConfirmedNonLeader","length","numberConfirmedLeader","listBattletagConfirmedNonLeaderPlaying","listBattletagPlayingLeader","listBattletagPlayingLessRoles","listBattletagPlayingTheOthers","console","log","listIndexTeam","listIncreasing","Array","from","_","listDecreasing","listTeamTemp","iBattletag","indexTeamToPush","push","listTeamSumOfMmr","listTeamAverageOfMmr","iTeam","listIndexTeamWhichNeedHighMmrPlayer","listTool","index1","index2","SumOfMmmr1","SumOfMmmr2","jTeam","cIndexTeam","newResult","title","added","Date","now","resultChosen","onClick_SaveResult","titleResult","value","date","getDate","hour","getHours","min","getMinutes","toString","put","process","env","REACT_APP_URL_AHR","update","$push","error","onClick_ChooseResult","idChosen","team","index","mapStateToProps","state","planTeam","mapDispatchToProps","dispatch","resultTeam","situation","message","time"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\r\nimport React, {useState, useEffect} from 'react';\r\nimport useInput from '../../tools/hooks/useInput';\r\n\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {addResult} from \"../../redux/store\";\r\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\r\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\r\n// https://reacttraining.com/blog/react-router-v5-1/\r\n\r\nimport {Div, Button, Input} from '../../styles/DefaultStyles';\r\n\r\n\r\nimport IconConfirmed from '../../svgs/IconConfirmed'\r\nimport IconPending from '../../svgs/IconPending'\r\nimport IconInfo from '../../svgs/IconInfo'\r\nimport IconMagic from  '../../svgs/basic/IconMagic'\r\nimport IconUpload from  '../../svgs/basic/IconUpload'\r\n\r\nimport IconTank from '../../svgs/roles/IconTank'\r\nimport IconBruiser from '../../svgs/roles/IconBruiser'\r\nimport IconMeleeAssassin from '../../svgs/roles/IconMeleeAssassin'\r\nimport IconRangedAssassin from '../../svgs/roles/IconRangedAssassin'\r\nimport IconHealer from '../../svgs/roles/IconHealer'\r\n\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nimport {getRandomSubArray} from  '../../tools/vanilla/array'\r\n\r\n\r\nconst DivResult = styled(Div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 600px;\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  \r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst DivResultTitle = styled(Div)`\r\n  margin-top: 20px;\r\n  \r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  \r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst GroupButtonMain = styled(Div)`\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n  & > div {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n`\r\n\r\nconst ButtonGenerate = styled(Button)`\r\n  width: 180px;\r\n  height: 36px;\r\n  \r\n  \r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  \r\n  border-radius: 10px;\r\n  \r\n  & > div {\r\n    \r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst InputTitleResult = styled(Input)`\r\n\twidth: 150px;\r\n\theight: 36px;\r\n\t\r\n\tborder-radius: 10px;\r\n\t\r\n\tmargin-left: 5px;\r\n  margin-right: 5px;\r\n`\r\n\r\n\r\nconst ButtonSave = styled(Button)`\r\n  width: 100px;\r\n  height: 36px;\r\n  \r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n  \r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  \r\n  border-radius: 10px;\r\n  \r\n  \r\n  \r\n  & > div {\r\n    \r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst ListTitleResult = styled(Div)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-starty;\r\n  align-items: center;\r\n  \r\n  overflow-x: scroll;\r\n  width: 100%;\r\n  \r\n  & > button {\r\n    height: 30px;\r\n    border-radius: 6px;\r\n    margin-left: 3px;\r\n    margin-right: 3px;\r\n  }\r\n`\r\n\r\nconst ButtonChooseResult = styled(Button)`\r\n  \r\n`\r\n\r\n\r\n\r\nconst DivAllTeams = styled(Div)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  \r\n  flex-wrap: wrap;\r\n  \r\n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\r\n    overflow-y: scroll;\r\n    height: 320px;\r\n  }\r\n`\r\n\r\n// each TableTeam\r\nconst DivTableTeam = styled(Div)`\r\n  \r\n  width: 220px;\r\n  margin:5px;\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst DivNameEachTeam = styled(Div)`\r\n  font-size: 1.2rem;\r\n`\r\n\r\nconst DivRosterEachTeam = styled(Div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst DivAverageMmrEachTeam = styled(Div)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst DivAverageMmrEachTeamText = styled(Div)`\r\n  width: 100px;\r\n  font-size: 0.9rem;\r\n  color: ${props => (props.theme.color_weak) };\r\n`\r\nconst DivAverageMmrEachTeamValue = styled(Div)`\r\n  width: 60px;\r\n`\r\n\r\n\r\n\r\n// each row\r\nconst DivRowPlayer = styled(Div)`\r\n  display: grid;\r\n  grid-template-columns:   100px 120px;\r\n  grid-template-rows: 40px;\r\n\r\n  \r\n  \r\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\r\n  &:last-child {\r\n    border-bottom-style: none;\r\n  }\r\n`\r\n\r\nconst DivBattletagHeader = styled(Div)`\r\n  padding-left: 10px;\r\n  \r\n  display: block;\r\n  text-algin: left;\r\n`\r\n\r\nconst DivBattletag = styled(Div)`\r\n  justify-self: start;\r\n  \r\n  padding-left: 10px;\r\n  \r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: flex-end;\r\n  \r\n  cursor: pointer;\r\n  \r\n  @media (max-width: ${props => (props.theme.media.small_mid -1) }px ) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n`\r\n\r\nconst DivBattletagName = styled(Div)`\r\n  \r\n  font-weight: ${props => props.isLeader ? \"bold\" : \"regular\"};\r\n  \r\n  width: auto;\r\n  max-width: inherit;\r\n  \r\n  display: inline;\r\n  text-algin: left;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst DivRoles = styled(Div)`\r\n  \r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  \r\n  & > div {\r\n    width: auto;   // important!!!\r\n    height: auto;\r\n  }\r\n  \r\n  & > div > div {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin: 2px;\r\n  }\r\n`\r\n\r\n\r\nconst RowPlayer = ({\r\n   battletag, roles, isLeader\r\n  , addRemoveNotification\r\n}) => {\r\n  \r\n  const regexBattletag = /(#\\d*)$/;\r\n  const listNumberBattletag = battletag.match(regexBattletag);\r\n  \r\n  const battletagNumber = listNumberBattletag[0];\r\n  const battletagName = battletag.replace(regexBattletag, \"\")\r\n  \r\n\r\n  return (\r\n    \r\n    <DivRowPlayer >\r\n      \r\n      <CopyToClipboard \r\n        text={battletag}\r\n        onCopy={ () => { addRemoveNotification(\"success\", `'${battletag}' has been copied`) } } >\r\n        \r\n        <DivBattletag> \r\n          <DivBattletagName isLeader={isLeader}> {battletagName} </DivBattletagName>\r\n        </DivBattletag>\r\n        \r\n      </CopyToClipboard>\r\n      \r\n      <DivRoles> \r\n        <Div> {(roles.includes(\"Tank\"))? <IconTank width={\"20px\"} height={\"20px\"} /> : <Div></Div>} </Div>\r\n        <Div> {(roles.includes(\"Bruiser\"))? <IconBruiser width={\"20px\"} height={\"20px\"} /> : <Div></Div>} </Div>\r\n        <Div> {(roles.includes(\"Melee Assassin\"))? <IconMeleeAssassin width={\"18px\"} height={\"20px\"} /> : <Div></Div>} </Div>\r\n        <Div> {(roles.includes(\"Ranged Assassin\"))? <IconRangedAssassin width={\"20px\"} height={\"20px\"} /> : <Div></Div>} </Div>\r\n        <Div> {(roles.includes(\"Healer\"))? <IconHealer width={\"15px\"} height={\"20px\"} /> : <Div></Div>} </Div>\r\n      </DivRoles>\r\n         \r\n    </DivRowPlayer>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst TableTeam = ({objTeam, listPlayerEntry, addRemoveNotification, region}) => {\r\n  \r\n  const listPlayerBattletag = objTeam.listPlayerBattletag;\r\n  \r\n  //  정렬 함수\r\n  const sortListBattletagByMmrHigherFirst = (battletag1, battletag2) => {    // mmr 높은순으로 list of battletags\r\n    \r\n    const objPlayer1 = listPlayerEntry.find(objPlayer => objPlayer._id === battletag1)\r\n    const objPlayer2 = listPlayerEntry.find(objPlayer => objPlayer._id === battletag2)\r\n    \r\n    if (objPlayer1.tags.includes(\"leader\")) { return (-1) }// leader 는 무조건 앞에\r\n    else if (objPlayer2.tags.includes(\"leader\")) { return (1) }// leader 는 무조건 앞에\r\n    else {\r\n      return (objPlayer2.mmr.standard[region] - objPlayer1.mmr.standard[region]);\r\n    // ex 3333, 222, 1111\r\n    }\r\n  }\r\n  \r\n  // 평균 mmr 계산\r\n  let sumOfMmmr = 0;\r\n  for (let iMember=0; iMember < 5; iMember++) {\r\n    const cBattletag = listPlayerBattletag[iMember];\r\n    const cObjPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === cBattletag);\r\n    sumOfMmmr += cObjPlayer.mmr.standard[region];\r\n  }\r\n  const averageOfMmr = Math.floor(sumOfMmmr/5);\r\n  \r\n  \r\n  const listPlayerBattletagSorted = listPlayerBattletag.sort( (battletag1, battletag2)=> sortListBattletagByMmrHigherFirst (battletag1, battletag2));\r\n  \r\n  return (\r\n    \r\n    <DivTableTeam>\r\n      \r\n      <DivNameEachTeam> {objTeam.name} </DivNameEachTeam>\r\n      \r\n      <DivRosterEachTeam>\r\n        {listPlayerBattletagSorted.map( (battletag, i) => {\r\n         \r\n         const cObjPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\r\n         const isLeader = cObjPlayer.tags.includes(\"leader\");\r\n         \r\n         return(\r\n            <RowPlayer \r\n              key={battletag}\r\n              battletag={battletag}\r\n              roles={cObjPlayer.roles}\r\n              isLeader={isLeader}\r\n              addRemoveNotification={addRemoveNotification} />\r\n           )\r\n          \r\n          \r\n        }) // inside map\r\n        }\r\n      </DivRosterEachTeam>\r\n      \r\n      <DivAverageMmrEachTeam> \r\n        <DivAverageMmrEachTeamText> average mmr: </DivAverageMmrEachTeamText>\r\n        <DivAverageMmrEachTeamValue> {averageOfMmr} </DivAverageMmrEachTeamValue>\r\n      </DivAverageMmrEachTeam>\r\n    \r\n  </DivTableTeam>\r\n  \r\n  ) // return\r\n}\r\n\r\n/* \r\n\r\n*/\r\n\r\n\r\nconst Result = ({\r\n  authority\r\n  ,idPlanTeam ,option, listPlayerEntry, listResult\r\n  , addRemoveNotification, addResult\r\n}) => {\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  const inputTitleResult = useInput(\"\");\r\n  \r\n  const [listTeamLocal, setListTeamLocal] = useState([]);\r\n  const [resultShowing, setResultShowing] = useState({listTeam:[]});\r\n  \r\n  const region = option.region;\r\n  const numberTeamsPlanned = option.numberTeams;\r\n  const listPlayerBattletag = (Object.keys(listPlayerEntry)).map(element=>listPlayerEntry[element]._id); // list of battletags, this can be modified by .sort\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  // 1. confirmed - 2. leader - 3. less roles player(2, 1) - 4. rest\r\n  const onClick_generateTeams = (event) => {\r\n    \r\n    let numberTeamsResult;\r\n    let listBattletagPlaying = [];\r\n    let listBattletagPlayingSorted = [];\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    //  많이 쓸 정렬 함수\r\n    const sortListBattletagByMmrHigherFirst = (battletag1, battletag2) => {    // mmr 높은순으로 list of battletags\r\n      \r\n      const objPlayer1 = listPlayerEntry.find(objPlayer => objPlayer._id === battletag1)\r\n      const objPlayer2 = listPlayerEntry.find(objPlayer => objPlayer._id === battletag2)\r\n      \r\n      return (objPlayer2.mmr.standard[region] - objPlayer1.mmr.standard[region]);\r\n      // ex 3333, 222, 1111\r\n    }\r\n    \r\n    \r\n    // A. 먼저 leader, confirmed  인 것들 고려해서 총 플레이 인원 뽑기\r\n    // B. 그다음 총 리스트를 leader, 플레이 역할 적은 플레이어, 그외 로 세 개로 나누고, 각각의 3개의 리스트 안에서 mmr 높은 순으로 정렬하고 합치기\r\n    // C. 정렬된 플레이러들을, (example of 3 teams)\r\n    // team:  0 1 2    2 1 0   0 1 2    2 1 0  마지막 주기는  mmr 총합 낮은 팀에 mmr 높은 사람 넣는 식으로!\r\n    \r\n    // A-1\r\n    const listBattletagConfirmed = listPlayerBattletag.filter(\r\n      battletag => {\r\n        const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\r\n        return ( objPlayer.status === \"confirmed\" )\r\n      }\r\n    )\r\n    \r\n    const listBattletagConfirmedLeader = listBattletagConfirmed.filter(\r\n      battletag => {\r\n        const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\r\n        return (objPlayer.tags.includes(\"leader\"))\r\n      }\r\n    )\r\n    \r\n    const listBattletagConfirmedNonLeader = listBattletagConfirmed.filter(\r\n      battletag => {\r\n        const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\r\n        return ( !(objPlayer.tags.includes(\"leader\")) )\r\n      }\r\n    )\r\n    \r\n    \r\n    //  먼저 설정된 팀 개수 검토\r\n    \r\n    // numberTeamsPlanned: 0  means auto \r\n    if ( numberTeamsPlanned === 0 ) {\r\n      numberTeamsResult = Math.floor(listBattletagConfirmed.length / 5);\r\n    }\r\n    else if (listBattletagConfirmed.length < (numberTeamsPlanned * 5)) {\r\n      addRemoveNotification(\"error\", \"the number of team which you have set was adjusted\");\r\n      numberTeamsResult = Math.floor(listBattletagConfirmed.length / 5);\r\n    }\r\n    else {numberTeamsResult = numberTeamsPlanned}\r\n    \r\n    \r\n    // A-2\r\n    if (numberTeamsResult === 0) {\r\n      addRemoveNotification(\"error\", \"need at least 5 confirmed players\");\r\n    }\r\n    else if (listBattletagConfirmedLeader.length >= numberTeamsResult * 5 ) {\r\n      listBattletagPlaying = getRandomSubArray(listBattletagConfirmedLeader, numberTeamsPlanned * 5 );\r\n    }\r\n    else {\r\n      const numberConfirmedLeader = listBattletagConfirmedLeader.length;\r\n      const listBattletagConfirmedNonLeaderPlaying = getRandomSubArray(listBattletagConfirmedNonLeader, (numberTeamsResult * 5 - numberConfirmedLeader) );\r\n      listBattletagPlaying = [...listBattletagConfirmedLeader, ...listBattletagConfirmedNonLeaderPlaying];\r\n    }\r\n    \r\n    \r\n    \r\n    //console.log(\"listBattletagPlaying\")\r\n    //console.log(listBattletagPlaying)\r\n    \r\n    // B. 그다음 총 리스트를 leader, 플레이 역할 적은 플레이어, 그외 로 세 개로 나누고, 각각의 3개의 리스트 안에서 mmr 높은 순으로 정렬하고 합치기\r\n    let listBattletagPlayingLeader = listBattletagPlaying.filter(\r\n      battletag => {\r\n        const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\r\n        return ( objPlayer.tags.includes(\"leader\") )\r\n      }\r\n    )\r\n    listBattletagPlayingLeader = listBattletagPlayingLeader.sort( (battletag1, battletag2) => sortListBattletagByMmrHigherFirst(battletag1, battletag2) );\r\n    \r\n    \r\n    let listBattletagPlayingLessRoles = listBattletagPlaying.filter(\r\n      battletag => {\r\n        const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\r\n        return ( !(objPlayer.tags.includes(\"leader\")) && objPlayer.roles.length <= 2 )\r\n      }\r\n    )\r\n    listBattletagPlayingLessRoles = listBattletagPlayingLessRoles.sort( (battletag1, battletag2) => sortListBattletagByMmrHigherFirst(battletag1, battletag2) );\r\n\r\n   \r\n   let listBattletagPlayingTheOthers = listBattletagPlaying.filter(\r\n      battletag => {\r\n        const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\r\n        return (  !(objPlayer.roles.length <= 2) && !(objPlayer.tags.includes(\"leader\"))   )\r\n      }\r\n    )\r\n    listBattletagPlayingTheOthers = listBattletagPlayingTheOthers.sort( (battletag1, battletag2) => sortListBattletagByMmrHigherFirst(battletag1, battletag2) );\r\n    \r\n    \r\n    // finally\r\n    listBattletagPlayingSorted = [...listBattletagPlayingLeader, ...listBattletagPlayingLessRoles, ...listBattletagPlayingTheOthers];\r\n    \r\n   console.log(`listBattletagPlayingSorted`) \r\n  console.log(listBattletagPlayingSorted) \r\n    \r\n    \r\n    \r\n   // C. 정렬된 플레이러들을, (example of 3 teams)\r\n   // team:  0 1 2    2 1 0   0 1 2    2 1 0  마지막 주기는  mmr 총합 낮은 팀에 mmr 높은 사람 넣는 식으로!\r\n   \r\n   \r\n   //https://stackoverflow.com/questions/3746725/how-to-create-an-array-containing-1-n\r\n   \r\n   \r\n    let listIndexTeam = [];\r\n   \r\n    const listIncreasing = Array.from(Array(numberTeamsResult), (_, i) => i)  // => [0, 1, 2, 3, 4, 5, ...]\r\n    const listDecreasing = Array.from(Array(numberTeamsResult), (_, i) => ( (numberTeamsResult - 1) - i) ) // => [5, 4, 3, ... ]\r\n\r\n    \r\n    listIndexTeam = [...listIncreasing, ...listDecreasing, ...listIncreasing, ...listDecreasing];\r\n    //console.log('listIndexTeam')\r\n    //console.log(listIndexTeam)\r\n    \r\n    \r\n    \r\n    let listTeamTemp = new Array(numberTeamsResult);\r\n    for ( let i  =0; i  < numberTeamsResult; i++) {\r\n      listTeamTemp[i] = {};\r\n      \r\n      listTeamTemp[i]['name'] = `TEAM ${i+1}`;\r\n      listTeamTemp[i]['listPlayerBattletag'] = [];\r\n    }\r\n    \r\n    \r\n    \r\n    for ( let iBattletag =0; iBattletag < (listBattletagPlayingSorted.length - numberTeamsResult) ; iBattletag++) {\r\n      \r\n      const cBattletag = listBattletagPlayingSorted[iBattletag];\r\n      const indexTeamToPush = listIndexTeam[iBattletag];\r\n      \r\n      listTeamTemp[ indexTeamToPush ]['listPlayerBattletag'].push( cBattletag );\r\n    }\r\n    \r\n    console.log(\"listTeamTemp\")\r\n    console.log(listTeamTemp)\r\n    \r\n    \r\n    let listTeamSumOfMmr =  Array.from(Array(numberTeamsResult), (_, i) => 0);  // numberTeamsResult 개의  0 으로 이루어진 리스트\r\n    let listTeamAverageOfMmr =  Array.from(Array(numberTeamsResult), (_, i) => 0);  // numberTeamsResult 개의  0 으로 이루어진 리스트\r\n    //console.log(listTeamSumOfMmr);\r\n    \r\n    for ( let iTeam =0; iTeam < numberTeamsResult; iTeam++) {\r\n      \r\n      for ( let iMember =0; iMember < 4; iMember++) {\r\n        \r\n        const cBattletag = listTeamTemp[iTeam]['listPlayerBattletag'][iMember];\r\n        const cObjPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === cBattletag);\r\n        \r\n        listTeamSumOfMmr[iTeam] += cObjPlayer.mmr.standard[region];\r\n      }\r\n      \r\n    }\r\n    \r\n    console.log(\"listTeamSumOfMmr\")\r\n    console.log(listTeamSumOfMmr)\r\n    \r\n    let listIndexTeamWhichNeedHighMmrPlayer = [];\r\n    const listTool = Array.from(Array(numberTeamsResult), (_, i) => i); // [0, 1, 2, ...]\r\n    listIndexTeamWhichNeedHighMmrPlayer = listTool.sort( (index1, index2) => {\r\n      \r\n      const SumOfMmmr1 = listTeamSumOfMmr[index1];\r\n      const SumOfMmmr2 = listTeamSumOfMmr[index2];\r\n      \r\n      return (SumOfMmmr1 - SumOfMmmr2);  // 작은게 앞에 나오게 된다.\r\n    } )\r\n    \r\n    \r\n    // 마지막 인원들 넣기\r\n    for ( let jTeam =0; jTeam < numberTeamsResult; jTeam++) {\r\n      \r\n      const cIndexTeam = listIndexTeamWhichNeedHighMmrPlayer[jTeam];\r\n      const cBattletag = listBattletagPlayingSorted[numberTeamsResult * 4 + jTeam];\r\n      const cObjPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === cBattletag);\r\n\r\n      (listTeamTemp[cIndexTeam]['listPlayerBattletag']).push(cBattletag);\r\n      \r\n      listTeamSumOfMmr[cIndexTeam] += cObjPlayer.mmr.standard[region];\r\n    }\r\n    \r\n    // calculate mmr average\r\n    for ( let iTeam =0; iTeam < numberTeamsResult; iTeam++) {\r\n      \r\n      listTeamAverageOfMmr[iTeam] = listTeamSumOfMmr[iTeam] / 5\r\n      \r\n    }\r\n    \r\n    console.log(listTeamTemp);\r\n    \r\n    console.log(\"final average of mmr each team: \")\r\n    console.log(listTeamAverageOfMmr)\r\n\r\n    setListTeamLocal(listTeamTemp);\r\n    \r\n    const newResult = {\r\n      title: \"local\"\r\n      , _id: \"local\"\r\n      , added: Date.now()\r\n      , listTeam: listTeamTemp\r\n    }\r\n    \r\n    \r\n    // 이미 list에 있는 _id = \"local\" 인걸 없애야 한다\r\n    addResult(newResult);\r\n    \r\n    \r\n    // 지금 표시할 \r\n    const resultChosen = listResult.find(element => element._id === \"local\")\r\n    setResultShowing(resultChosen);\r\n    \r\n    setResultShowing(resultChosen);\r\n  } //onClick_generateTeams\r\n  \r\n  \r\n/*\r\nconst inputTitleResult = useInput(\"\");\r\n\r\nconst [listTeams, setListTeams] = useState([]);\r\n\r\nconst region = option.region;\r\nconst numberTeamsPlanned = option.numberTeams;\r\nconst listPlayerBattletag = (Object.keys(listPlayerEntry)).map(element=>listPlayerEntry[element]._id); // list of battletags, this can be modified by .sort\r\n\r\n*/\r\n\r\n// 1\r\n  const onClick_SaveResult = async (event) => {\r\n    \r\n    if(listTeamLocal.length>0) {\r\n      try {\r\n        \r\n        let titleResult;\r\n        if (inputTitleResult.value) {titleResult = inputTitleResult.value}\r\n        else {\r\n          const now = new Date();\r\n          const date = now.getDate();\r\n          const hour = now.getHours();\r\n          const min = now.getMinutes();\r\n          \r\n          titleResult = `${date}_${hour}:${min}`;\r\n        }\r\n        \r\n        const newResult = {\r\n          title: titleResult\r\n          , _id: Date.now().toString()\r\n          , added: Date.now()\r\n          , listTeam: listTeamLocal\r\n        }\r\n        \r\n        addResult(newResult);\r\n        //replaceRegion(newRegion);\r\n        await axios.put (`${process.env.REACT_APP_URL_AHR}/plan-team/`,\r\n          {\r\n            filter: {_id: idPlanTeam}\r\n            , update : {\r\n              $push: { \"listResult\": newResult }\r\n            }\r\n          }\r\n        );\r\n        \r\n        addRemoveNotification(\"success\", \"result has been saved!\");\r\n      }\r\n      catch(error) {\r\n        addRemoveNotification(\"error\", \"failed in saving result\");\r\n      }\r\n    }\r\n    else {\r\n      addRemoveNotification(\"error\", \"there is no result yet\");\r\n    }\r\n    \r\n  }\r\n  \r\n  \r\n  const onClick_ChooseResult = (event, idChosen) => {\r\n    \r\n    const resultChosen = listResult.find(element => element._id === idChosen)\r\n    setResultShowing(resultChosen);\r\n    console.log(resultChosen);\r\n  }\r\n  \r\n  \r\n  \r\n  return (\r\n  \r\n  <DivResult>\r\n    \r\n    <DivResultTitle> Result </DivResultTitle>\r\n    \r\n    {(authority===\"administrator\")?\r\n      <GroupButtonMain>\r\n        \r\n        <Div>\r\n          <ButtonGenerate onClick={onClick_generateTeams}>\r\n            <Div> Generate Teams </Div>\r\n            <IconMagic width={\"28px\"} height={\"28px\"} />   \r\n          </ButtonGenerate>\r\n        </Div>\r\n        \r\n        <Div>\r\n          <InputTitleResult {...inputTitleResult} placeholder=\"title of result\" />\r\n          <ButtonSave onClick={onClick_SaveResult}>\r\n            <Div> Save </Div>\r\n            <IconUpload width={\"40px\"} height={\"32px\"} /> \r\n          </ButtonSave>\r\n        </Div>\r\n      \r\n      </GroupButtonMain>\r\n      : <Div> </Div>\r\n    }\r\n    \r\n    \r\n    <ListTitleResult >\r\n    \r\n      {listResult.map(element=>\r\n        <ButtonChooseResult \r\n          key={element._id}\r\n          onClick={(event)=>onClick_ChooseResult(event, element._id)}\r\n          > {element.title} </ButtonChooseResult>\r\n      )}\r\n      \r\n    </ListTitleResult>\r\n    \r\n  \r\n    <DivAllTeams>\r\n     {(resultShowing.listTeam.length)?\r\n      \r\n      resultShowing.listTeam.map( (team, index)=>\r\n        < TableTeam \r\n          key = {team.name}\r\n          objTeam = {team}\r\n          listPlayerEntry ={listPlayerEntry}\r\n          addRemoveNotification = {addRemoveNotification}\r\n          region = {region}\r\n        /> \r\n      )\r\n     \r\n     : \"choose or generate result\"}\r\n    \r\n    </DivAllTeams>\r\n    \r\n  </DivResult>\r\n    \r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction mapStateToProps(state) { \r\n  return { \r\n    authority: state.authority\r\n    ,idPlanTeam: state.planTeam._id\r\n    ,option: state.planTeam.option\r\n    ,listPlayerEntry: state.planTeam.listPlayerEntry\r\n    ,listResult: state.planTeam.listResult\r\n    //listPlayerEntry: [...state.planTeam.listPlayerEntry]\r\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\r\n    //,readyPlanTeam: state.ready.planTeam\r\n    //,loading: state.loading\r\n  }; \r\n} \r\n\r\nfunction mapDispatchToProps(dispatch) { \r\n  return { \r\n    addResult: (resultTeam) => dispatch( addResult(resultTeam) ) \r\n    ,  addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\r\n  }; \r\n}\r\n\r\n\r\n// TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);"]},"metadata":{},"sourceType":"module"}