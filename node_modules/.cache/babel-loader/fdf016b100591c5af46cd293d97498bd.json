{"ast":null,"code":"import _objectSpread from\"/usr/projects/parallel-storm/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/usr/projects/parallel-storm/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import defaultAxios from'axios';import React,{useState,useEffect}from'react';// if we not use existing axios instance, use default axios instance\nvar useAxiosGet=function useAxiosGet(options){var axios=arguments.length>1&&arguments[1]!==undefined?arguments[1]:defaultAxios;var _useState=useState({loading:true,error:null,response:null}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),trigger=_useState4[0],setTrigger=_useState4[1];// trigger: 내가 리렌더링 하고 싶을 때 변화시키는 존재\nuseEffect(function(){axios(options).then(function(response){setState(_objectSpread({},state,{loading:false,response:response}));}).catch(function(error){setState(_objectSpread({},state,{loading:false,error:error}));});},[trigger]);//useEffect \nif(!options.url){return;}var refetch=function refetch(){setState(_objectSpread({},state,{loading:true}));setTrigger(Date.now());};return _objectSpread({},state,{refetch:refetch});};export default useAxiosGet;","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/tools/hooks/useAxiosGet.js"],"names":["defaultAxios","React","useState","useEffect","useAxiosGet","options","axios","loading","error","response","state","setState","trigger","setTrigger","then","catch","url","refetch","Date","now"],"mappings":"6NAAA,MAAOA,CAAAA,YAAP,KAAyB,OAAzB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CAEA;AACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,CAAmC,IAAzBC,CAAAA,KAAyB,2DAAjBN,YAAiB,eAE5BE,QAAQ,CAAC,CAClCK,OAAO,CAAC,IAD0B,CAElCC,KAAK,CAAE,IAF2B,CAGlCC,QAAQ,CAAE,IAHwB,CAAD,CAFoB,wCAE/CC,KAF+C,eAExCC,QAFwC,8BAQxBT,QAAQ,CAAC,CAAD,CARgB,yCAQ/CU,OAR+C,eAQtCC,UARsC,eAUtD;AACAV,SAAS,CAAE,UAAI,CAEdG,KAAK,CAACD,OAAD,CAAL,CAAeS,IAAf,CAAoB,SAAAL,QAAQ,CAAI,CAC/BE,QAAQ,kBACJD,KADI,EAEPH,OAAO,CAAE,KAFF,CAGPE,QAAQ,CAAEA,QAHH,GAAR,CAKA,CAND,EAMGM,KANH,CAMS,SAAAP,KAAK,CAAI,CACjBG,QAAQ,kBAAKD,KAAL,EAAYH,OAAO,CAAE,KAArB,CAA4BC,KAAK,CAALA,KAA5B,GAAR,CACA,CARD,EAUA,CAZQ,CAYN,CAACI,OAAD,CAZM,CAAT,CAcG;AAGH,GAAI,CAACP,OAAO,CAACW,GAAb,CAAkB,CACjB,OACA,CAED,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACrBN,QAAQ,kBACJD,KADI,EAEPH,OAAO,CAAE,IAFF,GAAR,CAIAM,UAAU,CAAEK,IAAI,CAACC,GAAL,EAAF,CAAV,CACA,CAND,CAUA,wBAAWT,KAAX,EAAkBO,OAAO,CAAPA,OAAlB,GACA,CA3CD,CA6CA,cAAeb,CAAAA,WAAf","sourcesContent":["import defaultAxios from 'axios';\nimport React, {useState, useEffect} from 'react';\n\n// if we not use existing axios instance, use default axios instance\nconst useAxiosGet = (options, axios = defaultAxios) => {\n\t\n\tconst [state, setState] = useState({\n\t\tloading:true,\n\t\terror: null,\n\t\tresponse: null\n\t});\n\t\n\tconst [trigger, setTrigger] = useState(0);\n\t\n\t// trigger: 내가 리렌더링 하고 싶을 때 변화시키는 존재\n\tuseEffect( ()=>{\n\t\t\n\t\taxios(options).then(response => {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tresponse: response\n\t\t\t})\n\t\t}).catch(error => {\n\t\t\tsetState({...state, loading: false, error})\n\t\t})\n\t\t\n\t}, [trigger]\n\t\n\t); //useEffect \n\t\n\t\n\tif (!options.url) {\n\t\treturn;\n\t}\n\t\n\tconst refetch = () => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tloading: true\n\t\t});\n\t\tsetTrigger( Date.now() );\n\t}\n\t\n\t\n\t\n\treturn {...state, refetch };\n}\n\nexport default useAxiosGet"]},"metadata":{},"sourceType":"module"}