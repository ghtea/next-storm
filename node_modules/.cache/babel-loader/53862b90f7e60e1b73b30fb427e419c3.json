{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/CreatingPlan.js\";\nimport dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\nimport { replaceWorking } from \"../../redux/store\";\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Div, Input, Button } from '../../styles/DefaultStyles';\nimport useInput from '../../tools/hooks/useInput';\nimport { getTimeStamp } from '../../tools/vanilla/time';\nimport { generatePassword } from '../../tools/vanilla/password';\nimport IconWorking from '../../svgs/IconWorking'; //import {ahr} from '../api';\n\n/*\ndotenv.config({ \n  path: './.env' \n});\n*/\n\nconst DivCreatingPlan = styled(Div)`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n`;\nconst DivDescription = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`;\nconst DivBody = styled(Div)`\n  \n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`;\nconst ButtonCreatePlan = styled(Button)`\n  font-size: 1.2rem;\n  \n  width: 80px;\n  height: 40px;\n  \n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\nconst DivIconWorking = styled(Div)`\n  \n`;\n\nconst CreatingPlan = ({\n  addRemoveNotification,\n  loading,\n  ready,\n  working,\n  replaceWorking\n}) => {\n  //{value, onChange}\n  const inputPassword = useInput(\"\");\n  const history = useHistory();\n\n  const onClick_ButtonCreatePlan = async event => {\n    const idPlanTeam = getTimeStamp();\n    const pwPlanTeam = generatePassword(4); // ex: \"5y7o\"\n\n    let titlePlanTeam = \"(no title)\"; //let status = {};\n\n    try {\n      replaceWorking(\"createPlan\", true);\n      await axios.post(`${process.env.REACT_APP_URL_AHR}/plan-team`, {\n        _id: idPlanTeam,\n        password: pwPlanTeam,\n        title: title\n      });\n      replaceWorking(\"createPlan\", false);\n      addRemoveNotification(\"success\", \"new plan has been created!\", 4000); //status.createPlan = true; //  작업이 잘되었다고 표시\n\n      history.push(`/team-generator/${idPlanTeam}?pw=${pwPlanTeam}`);\n    } catch (error) {\n      replaceWorking(\"createPlan\", false);\n      addRemoveNotification(\"error\", \"plan has not been created!\", 4000); //status.createPlan = false; //  작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DivCreatingPlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, \" Team Generator \")), /*#__PURE__*/React.createElement(DivBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, working.createPlan ? /*#__PURE__*/React.createElement(ButtonCreatePlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DivIconWorking, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconWorking, {\n    width: \"27px\",\n    height: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }))) : /*#__PURE__*/React.createElement(ButtonCreatePlan, {\n    onClick: onClick_ButtonCreatePlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 8\n    }\n  }, \" START \")));\n};\n/*\n\n<DivCreatingPlan>\n        \n    <DivHeader>\n      <DivTitle> Team Generator </DivTitle>\n      \n      <DivId> add battletag first to start </DivId>\n    </DivHeader>\n    \n    <DivBody>\n\t   \n\t\t    <DivInputAdd>\n\t\t      <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n\t\t      \n          {working.putPlayerMmr ? \n\t        <ButtonAddFirst> \n  \t        <DivIconWorking>\n              <IconWorking \n                width={\"27px\"}\n                height={\"24px\"}\n              />  \n            </DivIconWorking>\n\t        </ButtonAddFirst> \n\t       : <ButtonAddFirst onClick = {onClick_ButtonAddFirst} > Add </ButtonAddFirst> }\n        \n        \n\t\t    </DivInputAdd>\n\t\t    \n\t    \n\t   </DivBody>\n  \n  </DivCreatingPlan>\n\n*/\n\n\nfunction mapStateToProps(state) {\n  return {\n    ready: state.ready,\n    loading: state.loading,\n    working: state.working\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time)),\n    replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatingPlan);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/CreatingPlan.js"],"names":["dotenv","React","styled","axios","connect","addRemoveNotification","replaceWorking","NavLink","useHistory","Div","Input","Button","useInput","getTimeStamp","generatePassword","IconWorking","DivCreatingPlan","DivHeader","DivTitle","DivDescription","props","theme","color_weak","DivBody","ButtonCreatePlan","DivIconWorking","CreatingPlan","loading","ready","working","inputPassword","history","onClick_ButtonCreatePlan","event","idPlanTeam","pwPlanTeam","titlePlanTeam","post","process","env","REACT_APP_URL_AHR","_id","password","title","push","error","createPlan","mapStateToProps","state","mapDispatchToProps","dispatch","situation","message","time","which","true_false"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\nimport {replaceWorking} from \"../../redux/store\";\n\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport {Div, Input, Button} from '../../styles/DefaultStyles';\n\n\nimport useInput from '../../tools/hooks/useInput';\nimport {getTimeStamp} from '../../tools/vanilla/time';\nimport {generatePassword} from '../../tools/vanilla/password';\n\nimport IconWorking from '../../svgs/IconWorking'\n\n//import {ahr} from '../api';\n/*\ndotenv.config({ \n  path: './.env' \n});\n*/\n\nconst DivCreatingPlan = styled(Div)`\n  grid-area: add;\n  height:100%;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\n\nconst DivHeader = styled(Div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nconst DivTitle = styled(Div)`\n  font-size: 1.6rem;\n`\n\nconst DivDescription = styled(Div)`\n  color: ${props => props.theme.color_weak};\n`\n\n\nconst DivBody = styled(Div)`\n  \n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`\n\n\n\nconst ButtonCreatePlan = styled(Button)`\n  font-size: 1.2rem;\n  \n  width: 80px;\n  height: 40px;\n  \n  margin-top: 10px;\n  margin-bottom: 10px;\n`\n\nconst DivIconWorking = styled(Div)`\n  \n`\n\n\n\n\n const CreatingPlan = ({addRemoveNotification, loading, ready, working, replaceWorking}) => {\n  \n  //{value, onChange}\n  const inputPassword = useInput(\"\");\n   \n  const history = useHistory(); \n  \n  \n\n  const onClick_ButtonCreatePlan = async (event) => {\n    \n    const idPlanTeam = getTimeStamp();\n    const pwPlanTeam = generatePassword(4);  // ex: \"5y7o\"\n    let titlePlanTeam = \"(no title)\"\n    \n    //let status = {};\n    \n    try {\n      replaceWorking(\"createPlan\", true);\n      await axios.post (`${process.env.REACT_APP_URL_AHR}/plan-team`, {\n        _id: idPlanTeam\n        ,password: pwPlanTeam\n        ,title: title\n      });\n      \n      replaceWorking(\"createPlan\", false);\n      addRemoveNotification(\"success\", \"new plan has been created!\", 4000);\n      //status.createPlan = true; //  작업이 잘되었다고 표시\n      \n      history.push(`/team-generator/${idPlanTeam}?pw=${pwPlanTeam}`);\n    }\n    catch (error) {\n      replaceWorking(\"createPlan\", false)\n      addRemoveNotification(\"error\", \"plan has not been created!\", 4000);\n      //status.createPlan = false; //  작업이 정상적으로 끝나지 않았다고 표시 (실제로 에러가 발생하지 않는다)\n    }\n    \n  }  \n  \n  \n  \n\n  \n  return (\n  \n  <DivCreatingPlan>\n        \n    <DivHeader>\n    \n      <DivTitle> Team Generator </DivTitle>\n      \n    </DivHeader>\n    \n    <DivBody>\n\t   \n\t\t  \n      {working.createPlan ? \n      <ButtonCreatePlan> \n      \n        <DivIconWorking>\n          <IconWorking \n            width={\"27px\"}\n            height={\"24px\"}\n          />  \n        </DivIconWorking>\n        \n      </ButtonCreatePlan> \n      \n     : <ButtonCreatePlan onClick = {onClick_ButtonCreatePlan} > START </ButtonCreatePlan> }\n        \n\t\t    \n\t    \n\t   </DivBody>\n  \n  </DivCreatingPlan>\n  \n  )\n\n}\n  \n  \n/*\n\n<DivCreatingPlan>\n        \n    <DivHeader>\n      <DivTitle> Team Generator </DivTitle>\n      \n      <DivId> add battletag first to start </DivId>\n    </DivHeader>\n    \n    <DivBody>\n\t   \n\t\t    <DivInputAdd>\n\t\t      <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n\t\t      \n          {working.putPlayerMmr ? \n\t        <ButtonAddFirst> \n  \t        <DivIconWorking>\n              <IconWorking \n                width={\"27px\"}\n                height={\"24px\"}\n              />  \n            </DivIconWorking>\n\t        </ButtonAddFirst> \n\t       : <ButtonAddFirst onClick = {onClick_ButtonAddFirst} > Add </ButtonAddFirst> }\n        \n        \n\t\t    </DivInputAdd>\n\t\t    \n\t    \n\t   </DivBody>\n  \n  </DivCreatingPlan>\n\n*/\n\n\nfunction mapStateToProps(state) { \n  return { \n    ready: state.ready \n    ,loading: state.loading\n    ,working: state.working\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n    ,replaceWorking: (which, true_false) => dispatch(replaceWorking(which, true_false))\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatingPlan);"]},"metadata":{},"sourceType":"module"}