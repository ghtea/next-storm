{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/Entry.js\";\nimport dotenv from 'dotenv';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios'; //import path from 'path'\n\nimport { NavLink, useParams } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { replacePlayerTags } from \"../../redux/store\";\nimport { replacePlayerStatus } from \"../../redux/store\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\"; // https://reacttraining.com/blog/react-router-v5-1/\n\nimport { Div, Table, Tr, Td } from '../../styles/DefaultStyles';\nimport IconLoading from '../../svgs/IconLoading';\nimport IconConfirmed from '../../svgs/IconConfirmed';\nimport IconPending from '../../svgs/IconPending';\nimport IconInfo from '../../svgs/IconInfo';\nimport IconLeader from '../../svgs/basic/IconLeader';\nimport IconTank from '../../svgs/roles/IconTank';\nimport IconBruiser from '../../svgs/roles/IconBruiser';\nimport IconMeleeAssassin from '../../svgs/roles/IconMeleeAssassin';\nimport IconRangedAssassin from '../../svgs/roles/IconRangedAssassin';\nimport IconHealer from '../../svgs/roles/IconHealer';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\n//dotenv.config() ;\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\n\nconst DivEntry = styled(Div)`\n  width: auto;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n  padding-bottom: 10px;\n`;\nconst DivEntryTitle = styled(Div)`\n  font-size: 1.2rem;\n  font-weight: bold;\n  \n  margin-top: 10px;\n  height: 20px;\n  margin-bottom: 5px;\n`;\nconst DivDescription = styled(Div)`\n  font-weight: medium;\n  margin-top: 5px;\n  height: 15px;\n  margin-bottom: 15px;\n`;\nconst DivTableEntry = styled(Div)`\n  \n  margin-left: 10px;\n  margin-right: 10px;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  \n  @media (max-width: ${props => props.theme.media.mid_big - 1}px ) {\n    overflow-y: scroll;\n    height: 320px;\n  }\n  \n`;\nconst DivIconLoading = styled(Div)`\n  margin-top: 10px;\n`;\n/*\ndisplay:grid;\n*/\n\nconst DivRowHeader = styled(Div)`\n  color: ${props => props.theme.color_weak};\n\n  display: grid;\n  grid-template-columns: 30px 150px 120px 60px 30px; // 20(padding) + 30 + 150 + 120 + 60 + 30 = 410 => 안전하게 small_mid 420 으로 하자\n  grid-template-rows: 24px;\n  \n  @media (max-width: ${props => props.theme.media.small_mid - 1}px ) {\n    grid-template-columns: 30px 90px minmax(72px, auto) 60px 30px; // \n    grid-template-rows: 60px;\n  }\n  \n  & > Div {\n    font-weight: thin;\n  }\n  //background-color: ${props => props.theme.COLOR_normal};\n   \n  //border-radius:  8px;\n`;\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 30px 150px 120px 60px 30px; // 20(padding) + 30 + 150 + 120 + 60 + 30 = 410\n  grid-template-rows: 40px;\n  \n  @media (max-width: ${props => props.theme.media.small_mid - 1}px ) {\n    grid-template-columns: 30px 100px 80px 60px 30px; // \n    grid-template-rows: 60px;\n  }\n  \n  \n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  &:last-child {\n    border-bottom-style: none;\n  }\n`;\n/*\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr 60px ${30*4}px 40px 40px; \n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(2) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  10px;\n    \n    border-bottom-style: none;\n    \n  }\n\n*/\n\nconst DivLeader = styled(Div)`\n  \n    \n`;\nconst DivBattletagHeader = styled(Div)`\n  padding-left: 10px;\n  \n  display: block;\n  text-algin: left;\n`;\nconst DivBattletag = styled(Div)`\n  justify-self: start;\n  \n  padding-left: 10px;\n  \n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-end;\n  \n  cursor: pointer;\n  \n  @media (max-width: ${props => props.theme.media.small_mid - 1}px ) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n  }\n`;\nconst DivBattletagName = styled(Div)`\n  \n  width: auto;\n  max-width: inherit;\n  \n  display: inline;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\nconst DivBattletagNumber = styled(Div)`\n  font-size: 0.9rem;\n  \n  width: auto;\n   \n  color: ${props => props.theme.color_weak};\n  display: inline;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\nconst DivRoles = styled(Div)`\n  \n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  \n  & > div {\n    width: auto;   // important!!!\n    height: auto;\n  }\n  \n  & > div > div {\n    width: 20px;\n    height: 20px;\n    margin: 2px;\n  }\n`;\nconst DivMmr = styled(Div)`\n  font-size: 0.9rem;\n`;\nconst DivStatus = styled(Div)`\n  \n`;\n\nconst RowPlayer = ({\n  idPlanTeam,\n  battletag,\n  mmr,\n  regions,\n  roles,\n  statusPlayer,\n  isLeader,\n  replacePlayerTags,\n  replacePlayerStatus,\n  addRemoveNotification\n}) => {\n  useEffect(() => {\n    console.log(\"Each row has been rerendered\");\n  });\n  const IconStatus = {\n    pending: /*#__PURE__*/React.createElement(IconPending, {\n      width: \"20px\",\n      height: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 14\n      }\n    }),\n    confirmed: /*#__PURE__*/React.createElement(IconConfirmed, {\n      width: \"20px\",\n      height: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    })\n  };\n  const regexBattletag = /(#\\d*)$/;\n  const listNumberBattletag = battletag.match(regexBattletag);\n  const battletagNumber = listNumberBattletag[0];\n  const battletagName = battletag.replace(regexBattletag, \"\");\n\n  const onClick_DivLeader = async event => {\n    if (!isLeader) {\n      replacePlayerTags(battletag, \"leader\", true);\n      await axios.put(`${process.env.REACT_APP_URL_AHR}/player/update-tags`, {\n        idPlanTeam: idPlanTeam,\n        battletag: battletag,\n        tag: \"leader\",\n        true_false: true\n      });\n\n      if (statusPlayer === \"pending\") {\n        // 만약 status 가 pending 때는 status 도 confirmed 로 한꺼번에 바꿔주기!\n        replacePlayerStatus(battletag, \"confirmed\");\n        await axios.put(`${process.env.REACT_APP_URL_AHR}/player/update-status`, {\n          idPlanTeam: idPlanTeam,\n          battletag: battletag,\n          status: \"confirmed\"\n        });\n      }\n    } else {\n      replacePlayerTags(battletag, \"leader\", false);\n      await axios.put(`${process.env.REACT_APP_URL_AHR}/player/update-tags`, {\n        idPlanTeam: idPlanTeam,\n        battletag: battletag,\n        tag: \"leader\",\n        true_false: false\n      });\n    }\n  };\n\n  const onClick_DivStatus = async event => {\n    let newStatus;\n\n    if (statusPlayer === \"pending\") {\n      replacePlayerStatus(battletag, \"confirmed\");\n      await axios.put(`${process.env.REACT_APP_URL_AHR}/player/update-status`, {\n        idPlanTeam: idPlanTeam,\n        battletag: battletag,\n        status: \"confirmed\"\n      });\n    } else {\n      // if status was\n      replacePlayerStatus(battletag, \"pending\");\n      await axios.put(`${process.env.REACT_APP_URL_AHR}/player/update-status`, {\n        idPlanTeam: idPlanTeam,\n        battletag: battletag,\n        status: \"pending\"\n      });\n    }\n\n    replacePlayerStatus(battletag, newStatus);\n    await axios.put(`${process.env.REACT_APP_URL_AHR}/player/update-status`, {\n      idPlanTeam: idPlanTeam,\n      battletag: battletag,\n      status: newStatus\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(DivRowPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivLeader, {\n    onClick: onClick_DivLeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconLeader, {\n    width: \"23px\",\n    height: \"18px\",\n    isFilled: isLeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: battletag,\n    onCopy: () => {\n      addRemoveNotification(\"success\", `'${battletag}' has been copied`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DivBattletag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DivBattletagName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, \" \", battletagName, \" \"), /*#__PURE__*/React.createElement(DivBattletagNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }, \" \", battletagNumber, \" \"))), /*#__PURE__*/React.createElement(DivRoles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, \" \", roles.includes(\"Tank\") ? /*#__PURE__*/React.createElement(IconTank, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 42\n    }\n  }) : /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 88\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }, \" \", roles.includes(\"Bruiser\") ? /*#__PURE__*/React.createElement(IconBruiser, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 94\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }, \" \", roles.includes(\"Melee Assassin\") ? /*#__PURE__*/React.createElement(IconMeleeAssassin, {\n    width: \"18px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 52\n    }\n  }) : /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 107\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }\n  }, \" \", roles.includes(\"Ranged Assassin\") ? /*#__PURE__*/React.createElement(IconRangedAssassin, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 53\n    }\n  }) : /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 109\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }\n  }, \" \", roles.includes(\"Healer\") ? /*#__PURE__*/React.createElement(IconHealer, {\n    width: \"15px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 44\n    }\n  }) : /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 92\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(DivMmr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }\n  }, mmr), /*#__PURE__*/React.createElement(DivStatus, {\n    onClick: onClick_DivStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }\n  }, IconStatus[statusPlayer]));\n};\n\nconst Entry = ({\n  idPlanTeam,\n  listPlayerEntry,\n  replacePlayerTags,\n  replacePlayerStatus,\n  addRemoveNotification\n}) => {\n  useEffect(() => {\n    console.log(\"Entry has been rerendered\");\n  });\n  let listPlayer = Object.keys(listPlayerEntry).map(element => listPlayerEntry[element]._id); // list of battletags\n\n  const listPlayerConfirmed = listPlayer.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n    return objPlayer.status === \"confirmed\";\n  });\n  const listPlayerConfirmedLeader = listPlayerConfirmed.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n    return objPlayer.tags.includes(\"leader\");\n  });\n  const listPlayerConfirmedNonLeader = listPlayerConfirmed.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n    return !objPlayer.tags.includes(\"leader\");\n  });\n  const listPlayerPending = listPlayer.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n    return objPlayer.status === \"pending\";\n  });\n  const listPlayerShowing = [...listPlayerConfirmedLeader, ...listPlayerConfirmedNonLeader, ...listPlayerPending];\n  return /*#__PURE__*/React.createElement(DivEntry, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivEntryTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 5\n    }\n  }, \" Entry \"), /*#__PURE__*/React.createElement(DivDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 5\n    }\n  }, \" \", `${listPlayerEntry.length} players`, \" \"), /*#__PURE__*/React.createElement(DivTableEntry, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivRowHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }\n  }, \"  \"), /*#__PURE__*/React.createElement(DivBattletagHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }\n  }, \"  battletag \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }\n  }, \" roles \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }\n  }, \" mmr \"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }\n  }, \"  \")), listPlayerShowing.map((battletag, i) => {\n    const player = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n    return /*#__PURE__*/React.createElement(RowPlayer, {\n      key: `${player._id}_${new Date().getTime().toString()}`,\n      idPlanTeam: idPlanTeam,\n      battletag: player._id,\n      regions: player.regions,\n      mmr: player.mmr.standard.NA,\n      roles: player.roles,\n      isLeader: player.tags.includes(\"leader\"),\n      statusPlayer: player.status,\n      replacePlayerTags: replacePlayerTags,\n      replacePlayerStatus: replacePlayerStatus,\n      addRemoveNotification: addRemoveNotification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }\n    });\n  })));\n}; //<button onClick= {refetch} > Refectch </button>\n\n\nfunction mapStateToProps(state) {\n  return {\n    listPlayerEntry: [...state.planTeam.listPlayerEntry],\n    idPlanTeam: state.planTeam._id //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\n    //,readyPlanTeam: state.ready.planTeam\n    //,loading: state.loading\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    replacePlayerTags: (battletag, tag, true_false) => dispatch(replacePlayerTags(battletag, tag, true_false)),\n    replacePlayerStatus: (battletag, status) => dispatch(replacePlayerStatus(battletag, status)),\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time))\n  };\n} // TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n// connect(mapStateToProps, mapDispatchToProps)(RowPlayer);    https://stackoverflow.com/questions/46276810/what-is-the-necessity-of-export-default-connect-when-you-are-connecting-your-r\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Entry);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/Entry.js"],"names":["dotenv","React","useState","useEffect","styled","axios","NavLink","useParams","connect","replacePlayerTags","replacePlayerStatus","readPlanTeam","addRemoveNotification","Div","Table","Tr","Td","IconLoading","IconConfirmed","IconPending","IconInfo","IconLeader","IconTank","IconBruiser","IconMeleeAssassin","IconRangedAssassin","IconHealer","CopyToClipboard","DivEntry","DivEntryTitle","DivDescription","DivTableEntry","props","theme","media","mid_big","DivIconLoading","DivRowHeader","color_weak","small_mid","COLOR_normal","DivRowPlayer","color_very_weak","DivLeader","DivBattletagHeader","DivBattletag","DivBattletagName","DivBattletagNumber","DivRoles","DivMmr","DivStatus","RowPlayer","idPlanTeam","battletag","mmr","regions","roles","statusPlayer","isLeader","console","log","IconStatus","pending","confirmed","regexBattletag","listNumberBattletag","match","battletagNumber","battletagName","replace","onClick_DivLeader","event","put","process","env","REACT_APP_URL_AHR","tag","true_false","status","onClick_DivStatus","newStatus","includes","Entry","listPlayerEntry","listPlayer","Object","keys","map","element","_id","listPlayerConfirmed","filter","objPlayer","find","listPlayerConfirmedLeader","tags","listPlayerConfirmedNonLeader","listPlayerPending","listPlayerShowing","length","i","player","Date","getTime","toString","standard","NA","mapStateToProps","state","planTeam","mapDispatchToProps","dispatch","situation","message","time"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\nimport React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n//import path from 'path'\nimport { NavLink, useParams } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport {replacePlayerTags} from \"../../redux/store\";\nimport {replacePlayerStatus} from \"../../redux/store\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\nimport addRemoveNotification from \"../../redux/thunks/addRemoveNotification\";\n\n// https://reacttraining.com/blog/react-router-v5-1/\n\nimport {Div, Table, Tr, Td} from '../../styles/DefaultStyles';\n\nimport IconLoading from '../../svgs/IconLoading'\n\nimport IconConfirmed from '../../svgs/IconConfirmed'\nimport IconPending from '../../svgs/IconPending'\nimport IconInfo from '../../svgs/IconInfo'\nimport IconLeader from '../../svgs/basic/IconLeader'\n\nimport IconTank from '../../svgs/roles/IconTank'\nimport IconBruiser from '../../svgs/roles/IconBruiser'\nimport IconMeleeAssassin from '../../svgs/roles/IconMeleeAssassin'\nimport IconRangedAssassin from '../../svgs/roles/IconRangedAssassin'\nimport IconHealer from '../../svgs/roles/IconHealer'\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\n// 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\n//dotenv.config() ;\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\n\nconst DivEntry = styled(Div)`\n  width: auto;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n  padding-bottom: 10px;\n`;\n\nconst DivEntryTitle = styled(Div)`\n  font-size: 1.2rem;\n  font-weight: bold;\n  \n  margin-top: 10px;\n  height: 20px;\n  margin-bottom: 5px;\n`\n\nconst DivDescription = styled(Div)`\n  font-weight: medium;\n  margin-top: 5px;\n  height: 15px;\n  margin-bottom: 15px;\n`\n\n\n\nconst DivTableEntry = styled(Div)`\n  \n  margin-left: 10px;\n  margin-right: 10px;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    overflow-y: scroll;\n    height: 320px;\n  }\n  \n`\n\nconst DivIconLoading = styled(Div)`\n  margin-top: 10px;\n`\n\n/*\ndisplay:grid;\n*/\n\nconst DivRowHeader = styled(Div)`\n  color: ${props => props.theme.color_weak};\n\n  display: grid;\n  grid-template-columns: 30px 150px 120px 60px 30px; // 20(padding) + 30 + 150 + 120 + 60 + 30 = 410 => 안전하게 small_mid 420 으로 하자\n  grid-template-rows: 24px;\n  \n  @media (max-width: ${props => (props.theme.media.small_mid -1) }px ) {\n    grid-template-columns: 30px 90px minmax(72px, auto) 60px 30px; // \n    grid-template-rows: 60px;\n  }\n  \n  & > Div {\n    font-weight: thin;\n  }\n  //background-color: ${props => props.theme.COLOR_normal};\n   \n  //border-radius:  8px;\n`\n\n\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 30px 150px 120px 60px 30px; // 20(padding) + 30 + 150 + 120 + 60 + 30 = 410\n  grid-template-rows: 40px;\n  \n  @media (max-width: ${props => (props.theme.media.small_mid -1) }px ) {\n    grid-template-columns: 30px 100px 80px 60px 30px; // \n    grid-template-rows: 60px;\n  }\n  \n  \n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  &:last-child {\n    border-bottom-style: none;\n  }\n`\n\n/*\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr 60px ${30*4}px 40px 40px; \n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(2) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  10px;\n    \n    border-bottom-style: none;\n    \n  }\n\n*/\n\nconst DivLeader = styled(Div)`\n  \n    \n`\n\nconst DivBattletagHeader = styled(Div)`\n  padding-left: 10px;\n  \n  display: block;\n  text-algin: left;\n`\n\nconst DivBattletag = styled(Div)`\n  justify-self: start;\n  \n  padding-left: 10px;\n  \n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-end;\n  \n  cursor: pointer;\n  \n  @media (max-width: ${props => (props.theme.media.small_mid -1) }px ) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n  }\n`\n\nconst DivBattletagName = styled(Div)`\n  \n  width: auto;\n  max-width: inherit;\n  \n  display: inline;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst DivBattletagNumber = styled(Div)`\n  font-size: 0.9rem;\n  \n  width: auto;\n   \n  color: ${props => props.theme.color_weak};\n  display: inline;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\n\nconst DivRoles = styled(Div)`\n  \n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  \n  & > div {\n    width: auto;   // important!!!\n    height: auto;\n  }\n  \n  & > div > div {\n    width: 20px;\n    height: 20px;\n    margin: 2px;\n  }\n`\nconst DivMmr = styled(Div)`\n  font-size: 0.9rem;\n`\n\nconst DivStatus = styled(Div)`\n  \n`;\n\n\nconst RowPlayer = ({\n  idPlanTeam, battletag, mmr, regions, roles, statusPlayer, isLeader\n  , replacePlayerTags, replacePlayerStatus, addRemoveNotification\n}) => {\n  \n  useEffect(()=>{console.log(\"Each row has been rerendered\")})\n  \n  \n  \n  const IconStatus = {\n    pending: <IconPending width={\"20px\"} height={\"20px\"} />\n    ,confirmed: <IconConfirmed width={\"20px\"} height={\"20px\"} />\n  };\n  \n  const regexBattletag = /(#\\d*)$/;\n  const listNumberBattletag = battletag.match(regexBattletag);\n  \n  const battletagNumber = listNumberBattletag[0];\n  const battletagName = battletag.replace(regexBattletag, \"\")\n  \n  \n  const onClick_DivLeader = async (event) => {\n    \n    if (!isLeader) { \n      replacePlayerTags(battletag, \"leader\", true);\n      \n      \n      await axios.put (`${process.env.REACT_APP_URL_AHR}/player/update-tags`,\n        { \n          idPlanTeam: idPlanTeam\n          , battletag: battletag\n          , tag: \"leader\"\n          , true_false: true\n        }\n      );\n      \n      if (statusPlayer === \"pending\") { // 만약 status 가 pending 때는 status 도 confirmed 로 한꺼번에 바꿔주기!\n        replacePlayerStatus(battletag, \"confirmed\");\n        \n        await axios.put (`${process.env.REACT_APP_URL_AHR}/player/update-status`,\n          { \n            idPlanTeam: idPlanTeam\n            , battletag: battletag\n            , status: \"confirmed\"\n          }\n        );\n      }\n      \n    }\n    \n    else {\n      replacePlayerTags(battletag, \"leader\", false);\n      \n      await axios.put (`${process.env.REACT_APP_URL_AHR}/player/update-tags`,\n        { \n          idPlanTeam: idPlanTeam\n          , battletag: battletag\n          , tag: \"leader\"\n          , true_false: false\n        }\n      );\n      \n      \n    }\n    \n  }\n  \n  \n  \n  const onClick_DivStatus = async (event) => {\n    \n    let newStatus;\n    if (statusPlayer === \"pending\") {\n      replacePlayerStatus(battletag, \"confirmed\");\n    \n      await axios.put (`${process.env.REACT_APP_URL_AHR}/player/update-status`,\n        { \n          idPlanTeam: idPlanTeam\n          , battletag: battletag\n          , status: \"confirmed\"\n        }\n      );\n      \n    }\n    else { // if status was\n      replacePlayerStatus(battletag, \"pending\");\n    \n      await axios.put (`${process.env.REACT_APP_URL_AHR}/player/update-status`,\n        { \n          idPlanTeam: idPlanTeam\n          , battletag: battletag\n          , status: \"pending\"\n        }\n      );\n      \n    }\n    \n    \n    replacePlayerStatus(battletag, newStatus);\n    \n    await axios.put (`${process.env.REACT_APP_URL_AHR}/player/update-status`,\n      { \n        idPlanTeam: idPlanTeam\n        , battletag: battletag\n        , status: newStatus\n      }\n    );\n    \n  }\n  \n  \n\n  return (\n    \n    <DivRowPlayer >\n      \n      <DivLeader onClick={onClick_DivLeader} > \n        <IconLeader\n          \n          width={\"23px\"}\n          height={\"18px\"}\n          isFilled={isLeader}\n        />  \n      </DivLeader >\n      \n      <CopyToClipboard \n        text={battletag}\n        onCopy={ () => { addRemoveNotification(\"success\", `'${battletag}' has been copied`) } } >\n        \n        <DivBattletag> \n          <DivBattletagName> {battletagName} </DivBattletagName>\n          <DivBattletagNumber> {battletagNumber} </DivBattletagNumber>\n        </DivBattletag>\n        \n      </CopyToClipboard>\n      \n      <DivRoles> \n        <Div> {(roles.includes(\"Tank\"))? <IconTank width={\"20px\"} height={\"20px\"} /> : <Div></Div>} </Div>\n        <Div> {(roles.includes(\"Bruiser\"))? <IconBruiser width={\"20px\"} height={\"20px\"} /> : <Div></Div>} </Div>\n        <Div> {(roles.includes(\"Melee Assassin\"))? <IconMeleeAssassin width={\"18px\"} height={\"20px\"} /> : <Div></Div>} </Div>\n        <Div> {(roles.includes(\"Ranged Assassin\"))? <IconRangedAssassin width={\"20px\"} height={\"20px\"} /> : <Div></Div>} </Div>\n        <Div> {(roles.includes(\"Healer\"))? <IconHealer width={\"15px\"} height={\"20px\"} /> : <Div></Div>} </Div>\n      </DivRoles>\n      \n      \n      <DivMmr> \n        {mmr}\n      </DivMmr>\n       \n      <DivStatus onClick={onClick_DivStatus}> \n        {IconStatus[statusPlayer]}\n      </DivStatus>\n        \n       \n         \n    </DivRowPlayer>\n  )\n}\n\n\n\n\nconst Entry = ({\n  idPlanTeam, listPlayerEntry\n  , replacePlayerTags, replacePlayerStatus, addRemoveNotification\n  \n}) => {\n  \n  useEffect(()=>{console.log(\"Entry has been rerendered\")})\n  \n  let listPlayer = (Object.keys(listPlayerEntry)).map(element=>listPlayerEntry[element]._id); // list of battletags\n  \n  \n  \n  const listPlayerConfirmed = listPlayer.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\n    return objPlayer.status === \"confirmed\"\n  } )\n  \n  const listPlayerConfirmedLeader = listPlayerConfirmed.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\n    return objPlayer.tags.includes(\"leader\");\n  } )\n  \n  const listPlayerConfirmedNonLeader= listPlayerConfirmed.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\n    return !(objPlayer.tags.includes(\"leader\"));\n  } )\n  \n  \n  \n  const listPlayerPending = listPlayer.filter(battletag => {\n    const objPlayer = listPlayerEntry.find(objPlayer => objPlayer._id === battletag)\n    return objPlayer.status === \"pending\"\n  } )\n  \n  const listPlayerShowing = [...listPlayerConfirmedLeader, ...listPlayerConfirmedNonLeader, ...listPlayerPending];\n  \n  \n  return (\n  \n  <DivEntry>\n    \n    <DivEntryTitle> Entry </DivEntryTitle>\n    <DivDescription> {`${listPlayerEntry.length} players`} </DivDescription>\n    \n    \n    <DivTableEntry> \n    \n    <DivRowHeader> \n      <Div>  </Div>\n      <DivBattletagHeader>  battletag </DivBattletagHeader>\n      <Div> roles </Div>\n      <Div> mmr </Div>\n      <Div>  </Div>\n      \n    </DivRowHeader>\n    \n    { \n      ( listPlayerShowing ).map( (battletag, i) => {\n        \n        const player = listPlayerEntry.find(objPlayer => objPlayer._id === battletag);\n      \n      return (\n        < RowPlayer \n          \n          key={ `${player._id}_${(new Date().getTime()).toString()}` }\n          \n          idPlanTeam={idPlanTeam}\n          \n          battletag={player._id} \n          \n          regions ={player.regions}\n          \n          mmr={player.mmr.standard.NA} \n          \n          roles ={player.roles}\n          \n          isLeader = {player.tags.includes(\"leader\")}\n          statusPlayer={player.status} \n          \n          replacePlayerTags = {replacePlayerTags}\n          replacePlayerStatus = {replacePlayerStatus}\n          addRemoveNotification = {addRemoveNotification}\n        />)\n      }\n      ) \n    }\n      \n    </DivTableEntry>\n    \n    \n  </DivEntry>\n    \n  )\n}\n\n\t  \n//<button onClick= {refetch} > Refectch </button>\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    listPlayerEntry: [...state.planTeam.listPlayerEntry]\n    ,idPlanTeam: state.planTeam._id\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\n    //,readyPlanTeam: state.ready.planTeam\n    //,loading: state.loading\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    replacePlayerTags: (battletag, tag, true_false) => dispatch(replacePlayerTags(battletag, tag, true_false))\n    ,replacePlayerStatus: (battletag, status) => dispatch(replacePlayerStatus(battletag, status))\n    ,addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n\n  }; \n}\n\n\n// TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n// connect(mapStateToProps, mapDispatchToProps)(RowPlayer);    https://stackoverflow.com/questions/46276810/what-is-the-necessity-of-export-default-connect-when-you-are-connecting-your-r\nexport default connect(mapStateToProps, mapDispatchToProps)(Entry);"]},"metadata":{},"sourceType":"module"}