{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { connect } from \"react-redux\";\nimport replaceTheme from \"./redux/thunks/replaceTheme\";\nimport Sub from \"./routes/Sub\";\nimport Home from \"./routes/Home\";\nimport TeamGenerator from \"./routes/TeamGenerator\";\nimport { ThemeProvider } from 'styled-components';\nimport themes from \"./styles/themes\";\nimport { GlobalStyle, Div } from './styles/DefaultStyles';\nimport './styles/font.css'; // env 사용할때 각변수 앞에 REACT_APP_ 를 붙혀야한다 https://hello-bryan.tistory.com/134\n\nconst DivContent = styled(Div)`\n  \n  @media (max-width: ${props => props.theme.media.mid_big - 1}px ) {\n    margin-top: 50px; /* height of sub */\n  \t\n\t}\n \n\t @media (min-width:  ${props => props.theme.media.mid_big}px) {\n\t  margin-left: 120px; /* width of sub */\n\t \n\t\t\n\t }\n  \n`;\n\nconst isDarkMode = () => {\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst App = ({\n  theme,\n  replaceTheme\n}) => {\n  /*\n  \n  */\n\n  /*\n  constructor(props){\n      super(props);\n      \n      this.state = {\n          themeApp: 'light'\n      };\n      \n  }\n  */\n  useEffect(() => {\n    const themeDeviceStr = isDarkMode() ? 'dark' : 'light';\n    replaceTheme(themeDeviceStr);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme === 'light' ? themeLight : themeDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: Sub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DivContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/team-generator\",\n    exact: true,\n    component: TeamGenerator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/team-generator/:idPlanTeam\",\n    component: TeamGenerator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.theme\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    replaceTheme: newThemeStr => dispatch(replaceTheme(newThemeStr))\n  };\n} // Home 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/App.js"],"names":["React","useEffect","BrowserRouter","Route","Switch","styled","connect","replaceTheme","Sub","Home","TeamGenerator","ThemeProvider","themes","GlobalStyle","Div","DivContent","props","theme","media","mid_big","isDarkMode","window","matchMedia","matches","App","themeDeviceStr","themeLight","themeDark","mapStateToProps","state","mapDispatchToProps","dispatch","newThemeStr"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,SAAQC,aAAR,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAgC,wBAAhC;AAEA,OAAO,mBAAP,C,CAEA;;AAEA,MAAMC,UAAU,GAAGV,MAAM,CAACS,GAAD,CAAM;;uBAERE,KAAK,IAAKA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,OAAlB,GAA2B,CAAI;;;;;wBAKxCH,KAAK,IAAKA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,OAAU;;;;;;CAP9D;;AAgBA,MAAMC,UAAU,GAAG,MAAM;AACvB,MAAIC,MAAM,CAACC,UAAP,IAAqBD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAA3E,EAAoF;AAClF,WAAO,IAAP;AACD,GAFD,MAGK;AACH,WAAO,KAAP;AACD;AACF,CAPD;;AAUA,MAAMC,GAAG,GAAG,CAAC;AAACP,EAAAA,KAAD;AAAQV,EAAAA;AAAR,CAAD,KAA2B;AAErC;;;;AAIA;;;;;;;;;;AAUAN,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMwB,cAAc,GAAGL,UAAU,KAAK,MAAL,GAAc,OAA/C;AACAb,IAAAA,YAAY,CAACkB,cAAD,CAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;AAMA,sBACE,uDAEA,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAER,KAAK,KAAK,OAAV,GAAmBS,UAAnB,GAAgCC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAKA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEnB,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,EAAE,IAAvB;AAA6B,IAAA,SAAS,EAAEC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAGA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAA8B,IAAA,KAAK,EAAE,IAArC;AAA2C,IAAA,SAAS,EAAEC,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAIA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,6BAAZ;AAA2C,IAAA,SAAS,EAAEA,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CADA,CANF,CALA,CAFA,CADF;AA+BD,CArDD;;AAwDA,SAASkB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLZ,IAAAA,KAAK,EAAEY,KAAK,CAACZ;AADR,GAAP;AAGD;;AAED,SAASa,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLxB,IAAAA,YAAY,EAAGyB,WAAD,IAAiBD,QAAQ,CAACxB,YAAY,CAACyB,WAAD,CAAb;AADlC,GAAP;AAGD,C,CAED;;;AACA,eAAe1B,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CN,GAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nimport { connect } from \"react-redux\";\nimport replaceTheme from \"./redux/thunks/replaceTheme\";\n\nimport Sub from \"./routes/Sub\";\nimport Home from \"./routes/Home\";\nimport TeamGenerator from \"./routes/TeamGenerator\";\n\nimport {ThemeProvider } from 'styled-components';\nimport themes from \"./styles/themes\"\nimport { GlobalStyle, Div} from './styles/DefaultStyles';\n\nimport './styles/font.css';\n\n// env 사용할때 각변수 앞에 REACT_APP_ 를 붙혀야한다 https://hello-bryan.tistory.com/134\n\nconst DivContent = styled(Div)`\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    margin-top: 50px; /* height of sub */\n  \t\n\t}\n \n\t @media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n\t  margin-left: 120px; /* width of sub */\n\t \n\t\t\n\t }\n  \n`;\n\n\nconst isDarkMode = () => {\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return true;\n  }\n  else {\n    return false;\n  }\n}  \n\n\nconst App = ({theme, replaceTheme}) => {\n  \n  /*\n  \n  */\n  \n  /*\n  constructor(props){\n      super(props);\n      \n      this.state = {\n          themeApp: 'light'\n      };\n      \n  }\n  */\n  useEffect(()=>{\n    const themeDeviceStr = isDarkMode() ? 'dark' : 'light';\n    replaceTheme(themeDeviceStr);\n  }, [])\n  \n  \n  return (\n    <>\n    \n    <ThemeProvider theme={theme === 'light'? themeLight : themeDark }>\n    \n    \n    <GlobalStyle/>\n    \n    <BrowserRouter>\n      \n      \n      <Route path=\"/\" component={Sub} />\n      \n      \n      <DivContent>\n      <Switch >\n      <Route path=\"/\" exact={true} component={Home} />\n      \n      <Route path=\"/team-generator\" exact={true} component={TeamGenerator} />\n      <Route path=\"/team-generator/:idPlanTeam\"  component={TeamGenerator} />\n      \n      </Switch >\n      </DivContent>\n      \n    </BrowserRouter>\n    \n    \n    </ThemeProvider>\n    </>\n  );\n\n}\n\n\nfunction mapStateToProps(state) { \n  return { \n    theme: state.theme\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    replaceTheme: (newThemeStr) => dispatch(replaceTheme(newThemeStr)) \n  }; \n}\n\n// Home 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}