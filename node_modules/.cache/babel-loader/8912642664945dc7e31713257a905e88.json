{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/routes/TeamGenerator.js\";\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\nimport { replaceRerender } from \"../redux/store\";\nimport { replaceWorking } from \"../redux/store\";\nimport { replaceLoading } from \"../redux/store\";\nimport { replaceReady } from \"../redux/store\";\nimport { replaceData } from \"../redux/store\";\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\nimport { Div, Input, Button } from '../styles/DefaultStyles'; //import Player from '../components/Player'\n\nimport CreatingPlan from '../components/TeamGenerator/CreatingPlan';\nimport SearchingPlan from '../components/TeamGenerator/SearchingPlan';\nimport AddingPlayer from '../components/TeamGenerator/AddingPlayer';\nimport Entry from '../components/TeamGenerator/Entry';\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  @media (max-width: ${props => props.theme.media.mid_big - 1}px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"A\"\n      \"B\"\n      \"C\"\n      \"D\"\n  }\n \n\n  @media (min-width:  ${props => props.theme.media.mid_big}px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 1fr;\n    grid-template-areas: \n      \"A B\"\n      \"C D\";\n  }\n\n`;\nconst DivA = styled(Div)`\n  grid-area: A;\n`;\nconst DivB = styled(Div)`\n  grid-area: B;\n`;\nconst DivC = styled(Div)`\n  grid-area: C;\n`;\nconst DivD = styled(Div)`\n  grid-area: D;\n`; // https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\n\nconst TeamGenerator = ({\n  match,\n  location,\n  authority,\n  readyPlanTeam,\n  idPlanTeam,\n  passwordPlanTeam,\n  readPlanTeam,\n  addRemoveNotification\n}) => {\n  //const [rerender, SetRerender] = useState(\"\");\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    const idPlanTeamTrying = match.params.idPlanTeam;\n    const query = queryString.parse(location.search);\n    const passwordPlanTeamTrying = query.pw;\n    readPlanTeam(idPlanTeamTrying);\n    console.log(\"read here\");\n\n    if (readyPlanTeam === true) {\n      if (isFirstRun.current) {\n        isFirstRun.current = false;\n        return;\n      } // 처음 렌더링 넘어가기\n\n\n      if (passwordPlanTeamTrying === passwordPlanTeam) {\n        replaceData(\"authority\", \"administrator\");\n        addRemoveNotification(\"success\", \"welcome administrator!\", 2000); //replaceRerender(\"planTeam\") // planTeam 에 의존하는 것들을 다시 렌더링하자는 뜻 doesn't work...\n      } // if password is wrong\n      else {\n          replaceData(\"authority\", \"viewer\");\n          addRemoveNotification(\"error\", \"password is wrong\", 2000);\n        }\n    }\n  }, [readyPlanTeam]);\n  useEffect(() => {\n    console.log(\"rerendered dd\");\n    console.log(passwordPlanTeam);\n  });\n  return /*#__PURE__*/React.createElement(DivTeamGenerator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DivA, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddingPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DivB, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \"option \", authority), /*#__PURE__*/React.createElement(DivC, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, \"entry\"), /*#__PURE__*/React.createElement(DivD, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"result\"));\n}; //TeamGenerator\n\n\nfunction mapStateToProps(state) {\n  return {\n    idPlanTeam: state.idPlanTeam,\n    passwordPlanTeam: state.planTeam.password,\n    readyPlanTeam: state.ready.planTeam //,rerenderPlanTeam: state.rerender.planTeam\n    //,loading: state.loading\n    //,authority: state.authority\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    readPlanTeam: idPlanTeam => dispatch(readPlanTeam(idPlanTeam)) //,replaceRerender: (which) => dispatch(replaceRerender(which))\n    ,\n    replaceData: (which, newData) => dispatch(replaceData(which, newData)),\n    replaceLoading: (which, true_false) => dispatch(replaceLoading(which, true_false)),\n    replaceReady: (which, true_false) => dispatch(replaceReady(which, true_false)),\n    addRemoveNotification: (situation, message, time) => dispatch(addRemoveNotification(situation, message, time))\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGenerator);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/routes/TeamGenerator.js"],"names":["React","useEffect","useRef","styled","axios","queryString","connect","readPlanTeam","replaceRerender","replaceWorking","replaceLoading","replaceReady","replaceData","addRemoveNotification","Div","Input","Button","CreatingPlan","SearchingPlan","AddingPlayer","Entry","useAxiosGet","useInput","DivTeamGenerator","props","theme","media","mid_big","DivA","DivB","DivC","DivD","TeamGenerator","match","location","authority","readyPlanTeam","idPlanTeam","passwordPlanTeam","isFirstRun","idPlanTeamTrying","params","query","parse","search","passwordPlanTeamTrying","pw","console","log","current","mapStateToProps","state","planTeam","password","ready","mapDispatchToProps","dispatch","which","newData","true_false","situation","message","time"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport queryString from 'query-string';\n\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../redux/thunks/readPlanTeam\";\n\nimport {replaceRerender} from \"../redux/store\";\nimport {replaceWorking} from \"../redux/store\";\nimport {replaceLoading} from \"../redux/store\";\nimport {replaceReady} from \"../redux/store\";\nimport {replaceData} from \"../redux/store\";\n\nimport addRemoveNotification from \"../redux/thunks/addRemoveNotification\";\n\nimport {Div, Input, Button} from '../styles/DefaultStyles';\n//import Player from '../components/Player'\n\n\n\nimport CreatingPlan from '../components/TeamGenerator/CreatingPlan';\nimport SearchingPlan from '../components/TeamGenerator/SearchingPlan';\n\nimport AddingPlayer from '../components/TeamGenerator/AddingPlayer';\nimport Entry from '../components/TeamGenerator/Entry';\n\nimport useAxiosGet from '../tools/hooks/useAxiosGet';\nimport useInput from '../tools/hooks/useInput';\n\n\nconst DivTeamGenerator = styled(Div)`\n  width: 100%;\n  height: 100%;\n  \n  @media (max-width: ${props => (props.theme.media.mid_big -1) }px ) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 240px 240px 400px 400px;\n    grid-template-areas: \n      \"A\"\n      \"B\"\n      \"C\"\n      \"D\"\n  }\n \n\n  @media (min-width:  ${props => (props.theme.media.mid_big) }px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 1fr;\n    grid-template-areas: \n      \"A B\"\n      \"C D\";\n  }\n\n`;\n\n\nconst DivA = styled(Div)`\n  grid-area: A;\n`\nconst DivB = styled(Div)`\n  grid-area: B;\n`\nconst DivC = styled(Div)`\n  grid-area: C;\n`\nconst DivD = styled(Div)`\n  grid-area: D;\n`\n\n\n\n// https://ps.avantwing.com/team-generator/sss?ooo 들어가 보기\nconst TeamGenerator = ({\n  match, location\n  , authority\n  , readyPlanTeam\n  , idPlanTeam, passwordPlanTeam\n  \n  , readPlanTeam\n  , addRemoveNotification\n}) => {\n  \n  //const [rerender, SetRerender] = useState(\"\");\n  const isFirstRun = useRef(true);\n  useEffect(()=>{\n    const idPlanTeamTrying = match.params.idPlanTeam;\n    const query = queryString.parse(location.search);\n    const passwordPlanTeamTrying = query.pw;\n    \n    readPlanTeam(idPlanTeamTrying);\n    \n    console.log(\"read here\")\n    \n    \n    \n    if (readyPlanTeam === true) {\n      \n      if (isFirstRun.current) {isFirstRun.current = false; return; } // 처음 렌더링 넘어가기\n      \n      if (passwordPlanTeamTrying === passwordPlanTeam) {\n          replaceData(\"authority\", \"administrator\");\n          addRemoveNotification(\"success\", \"welcome administrator!\", 2000);\n          \n          //replaceRerender(\"planTeam\") // planTeam 에 의존하는 것들을 다시 렌더링하자는 뜻 doesn't work...\n        }\n        \n        // if password is wrong\n        else {\n          replaceData(\"authority\", \"viewer\");\n          addRemoveNotification(\"error\", \"password is wrong\", 2000);\n        }\n    }\n  } , [readyPlanTeam])\n    \n  useEffect(()=>{\n    console.log(\"rerendered dd\")\n    console.log(passwordPlanTeam);\n  } )\n  \n  \n  \n   return (\n   <DivTeamGenerator>\n      \n      <DivA>\n        <AddingPlayer />\n      </DivA>\n      \n      <DivB>\n        option {authority}\n      </DivB>\n    \n    \n      <DivC>\n        entry\n      </DivC>\n    \n    \n      <DivD>\n        result\n      </DivD>\n    \n    </DivTeamGenerator>\n    )\n\n \n    \n} //TeamGenerator\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    idPlanTeam: state.idPlanTeam\n    ,passwordPlanTeam: state.planTeam.password\n    \n    ,readyPlanTeam: state.ready.planTeam\n    \n    //,rerenderPlanTeam: state.rerender.planTeam\n    \n    //,loading: state.loading\n    //,authority: state.authority\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n    //,replaceRerender: (which) => dispatch(replaceRerender(which))\n    ,replaceData: (which, newData) => dispatch(replaceData(which, newData))\n    ,replaceLoading: (which, true_false) => dispatch(replaceLoading(which, true_false)) \n    ,replaceReady: (which, true_false) => dispatch(replaceReady(which, true_false)) \n    ,addRemoveNotification: (situation, message, time) => dispatch( addRemoveNotification(situation, message, time) )\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGenerator);\n"]},"metadata":{},"sourceType":"module"}