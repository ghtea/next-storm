{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/Guide.js\";\nimport dotenv from 'dotenv';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Div, Input, Button } from '../../styles/DefaultStyles';\nimport IconPlus from '../../svgs/basic/IconPlus';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // STYLES\n\nconst DivOption = styled(Div)`\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst DivOptionTitle = styled(Div)`\n  margin-top: 20px;\n  font-size: 1.2rem;\n  font-weight: bold;\n`;\nconst DivBody = styled(Div)`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`;\n\nconst Option = ({}) => {\n  // 관리자 권한이 필요한 버튼을 클릭했을 때!\n  const onClick_NotAdministrator = event => {\n    addRemoveNotification(\"error\", \"You are not administrator\");\n  };\n\n  const objFlag = {\n    NA: flagNA,\n    EU: flagEU,\n    KR: flagKR,\n    CN: flagCN\n  };\n\n  const onClick_ButtonRegion = async event => {\n    let newRegion;\n\n    switch (option.region) {\n      case \"NA\":\n        newRegion = \"EU\";\n        break;\n\n      case \"EU\":\n        newRegion = \"KR\";\n        break;\n\n      case \"KR\":\n        newRegion = \"CN\";\n        break;\n\n      case \"CN\":\n        newRegion = \"NA\";\n        break;\n    }\n\n    replaceRegion(newRegion);\n    await axios.put(`${process.env.REACT_APP_URL_AHR}/plan-team/`, {\n      filter: {\n        _id: idPlanTeam\n      },\n      update: {\n        $set: {\n          \"option.region\": newRegion\n        }\n      }\n    });\n  };\n\n  const onClick_ButtonNumber = (event, pairNumber, which, how) => {\n    replaceNumber(pairNumber, which, how);\n  }; // copy: https://www.npmjs.com/package/react-copy-to-clipboard\n\n\n  return /*#__PURE__*/React.createElement(DivOption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivOptionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, \" Option \"), /*#__PURE__*/React.createElement(DivBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DivRegion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \" region:  \"), /*#__PURE__*/React.createElement(ButtonRegion, {\n    onClick: authority === \"administrator\" ? onClick_ButtonRegion : onClick_NotAdministrator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: objFlag[option.region],\n    width: \"48\",\n    height: \"36\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }))), authority === \"administrator\" ? /*#__PURE__*/React.createElement(GroupNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \" number of teams: \"), /*#__PURE__*/React.createElement(ButtonNumberSide, {\n    onClick: event => onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"team\", \"minus\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(IconMinus, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), \"  \"), /*#__PURE__*/React.createElement(ButtonNumberCenter, {\n    onClick: event => onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"team\", \"center\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \" \", option.numberTeams === 0 ? `auto` : `${option.numberTeams}`), /*#__PURE__*/React.createElement(ButtonNumberSide, {\n    onClick: event => onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"team\", \"plus\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(IconPlus, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), \" \")) : /*#__PURE__*/React.createElement(GroupNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \" number of teams: \"), /*#__PURE__*/React.createElement(ButtonNumberCenter, {\n    onClick: onClick_NotAdministrator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \" \", option.numberTeams === 0 ? `auto` : `${option.numberTeams}`))));\n};\n/*\n\n<GroupNumber>\n    <Div> number of groups: </Div>\n    \n    <ButtonNumberSide\n      onClick={(event)=>onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"group\", \"minus\")}\n    > <IconMinus width={\"20px\"} height={\"20px\"} /> </ButtonNumberSide>\n    \n    <ButtonNumberCenter\n      onClick={(event)=>onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"group\", \"center\")}\n    > {(option.numberGroups ===0)? `none` : `${option.numberGroups }`}\n    </ButtonNumberCenter>\n    \n    <ButtonNumberSide\n      onClick={(event)=>onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"group\", \"plus\")}\n    > <IconPlus width={\"20px\"} height={\"20px\"} /> </ButtonNumberSide>\n </GroupNumber>\n\n*/\n\n/*\n\n <DivInputAdd>\n    <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n    <InputName {...inputName} placeholder=\"name\" />\n    \n    { (authority === \"viewer\") && !workingAddPlayer &&\n      <ButtonAdd onClick = {  (event)=> onClick_ButtonAdd(event, \"pending\")} > Apply </ButtonAdd>\n    }\n    \n    { (authority === \"administrator\") && !workingAddPlayer && \n      <>\n        <ButtonAdd onClick = {  (event)=> onClick_ButtonAdd(event, \"confirmed\")} > Add </ButtonAdd>\n      </>\n    }\n  </DivInputAdd>\n\t    \n*/\n\n\nfunction mapStateToProps(state) {\n  return {\n    //workingAddPlayer: state.working.addPlayer\n    //,workingPutPlayerMmr: state.working.putPlayerMmr\n    idPlanTeam: state.planTeam._id //,passwordPlanTeam: state.planTeam.password\n    //, loadingPlanTeam: state.loading.planTeam\n    //, readyPlanTeam: state.ready.planTeam\n    ,\n    option: state.planTeam.option,\n    authority: state.authority //, planTeam: {...state.planTeam}\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addRemoveNotification: (situation, message, time, idNotification) => dispatch(addRemoveNotification(situation, message, time, idNotification)),\n    replaceRegion: regionName => dispatch(replaceRegion(regionName)),\n    replaceNumber: (pairNumber, which, how) => dispatch(replaceNumber(pairNumber, which, how)) //,readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n\n  };\n} // 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Option);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/Guide.js"],"names":["dotenv","React","useEffect","useState","styled","NavLink","useHistory","Div","Input","Button","IconPlus","CopyToClipboard","DivOption","DivOptionTitle","DivBody","Option","onClick_NotAdministrator","event","addRemoveNotification","objFlag","NA","flagNA","EU","flagEU","KR","flagKR","CN","flagCN","onClick_ButtonRegion","newRegion","option","region","replaceRegion","axios","put","process","env","REACT_APP_URL_AHR","filter","_id","idPlanTeam","update","$set","onClick_ButtonNumber","pairNumber","which","how","replaceNumber","authority","numberTeams","numberGroups","mapStateToProps","state","planTeam","mapDispatchToProps","dispatch","situation","message","time","idNotification","regionName","connect"],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\n\n\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport {Div, Input, Button} from '../../styles/DefaultStyles';\n\n\n\nimport IconPlus from '../../svgs/basic/IconPlus'\n\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\n\n\n// STYLES\nconst DivOption = styled(Div)`\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\n\n\nconst DivOptionTitle = styled(Div)`\n  margin-top: 20px;\n  font-size: 1.2rem;\n  font-weight: bold;\n`\n\n\n\nconst DivBody = styled(Div)`\n\n\tdisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n`\n\n\n\n\n\n\n\n\n const Option = ({\n  \n  \n   \n }) => {\n\n  \n  // 관리자 권한이 필요한 버튼을 클릭했을 때!\n  const onClick_NotAdministrator = (event) => {\n    addRemoveNotification(\"error\", \"You are not administrator\")\n  }\n  \n\n\n  const objFlag = {\n    NA: flagNA,\n    EU: flagEU,\n    KR: flagKR,\n    CN: flagCN\n  };\n  \n  const onClick_ButtonRegion = async (event) => {\n    \n    let newRegion;\n    \n    switch(option.region) {\n      case \"NA\":\n        newRegion = \"EU\";\n        break;\n      case \"EU\":\n        newRegion = \"KR\";\n        break;\n      case \"KR\":\n        newRegion = \"CN\";\n        break;\n      case \"CN\":\n        newRegion = \"NA\";\n        break;\n    }\n    \n    replaceRegion(newRegion);\n    await axios.put (`${process.env.REACT_APP_URL_AHR}/plan-team/`,\n      {\n        filter: {_id: idPlanTeam}\n        , update : {\n          $set: { \"option.region\": newRegion }\n        }\n      }\n    );\n  \n  }\n  \n  \n  const onClick_ButtonNumber = (event, pairNumber, which, how) => {\n    replaceNumber(pairNumber, which, how);\n    \n  }\n  \n  // copy: https://www.npmjs.com/package/react-copy-to-clipboard\n  \n  \n  return (\n  <DivOption>\n        \n    \n    <DivOptionTitle> Option </DivOptionTitle>\n      \n\n    \n    \n   <DivBody>\n   \n    <DivRegion>\n      <Div> region:  </Div>\n      <ButtonRegion onClick={(authority===\"administrator\")?onClick_ButtonRegion:onClick_NotAdministrator}> \n  \t     <img src={objFlag[option.region]} width=\"48\" height=\"36\"/>\n  \t  </ButtonRegion>\n  \t</DivRegion>\n   \n   {(authority===\"administrator\")?\n      <GroupNumber>\n        <Div> number of teams: </Div>\n        \n        <ButtonNumberSide\n          onClick={(event)=>onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"team\", \"minus\")}\n          > <IconMinus width={\"20px\"} height={\"20px\"} />  </ButtonNumberSide>\n          \n        <ButtonNumberCenter\n          onClick={(event)=>onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"team\", \"center\")}\n          > {(option.numberTeams === 0)? `auto` : `${option.numberTeams}` }\n        </ButtonNumberCenter>\n        \n        <ButtonNumberSide\n          onClick={(event)=>onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"team\", \"plus\")}\n          > <IconPlus width={\"20px\"} height={\"20px\"} /> </ButtonNumberSide>\n  \t  </GroupNumber>\n  \t  \n  \t : <GroupNumber>\n        <Div> number of teams: </Div>\n        \n        <ButtonNumberCenter\n          onClick={onClick_NotAdministrator}\n          > {(option.numberTeams === 0)? `auto` : `${option.numberTeams}` }\n        </ButtonNumberCenter>\n      </GroupNumber>\n   }\n\t      \n\t \n\t   \n\t   \n   </DivBody>\n  \n  </DivOption>\n        \n  \n  )\n\n}\n  \n  \n  /*\n  \n  <GroupNumber>\n      <Div> number of groups: </Div>\n      \n      <ButtonNumberSide\n        onClick={(event)=>onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"group\", \"minus\")}\n      > <IconMinus width={\"20px\"} height={\"20px\"} /> </ButtonNumberSide>\n      \n      <ButtonNumberCenter\n        onClick={(event)=>onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"group\", \"center\")}\n      > {(option.numberGroups ===0)? `none` : `${option.numberGroups }`}\n      </ButtonNumberCenter>\n      \n      <ButtonNumberSide\n        onClick={(event)=>onClick_ButtonNumber(event, [option.numberTeams, option.numberGroups], \"group\", \"plus\")}\n      > <IconPlus width={\"20px\"} height={\"20px\"} /> </ButtonNumberSide>\n\t  </GroupNumber>\n  \n  */\n\t  \n/*\n\n <DivInputAdd>\n    <InputBattletag {...inputBattletag} placeholder=\"battletag#1234\" />\n    <InputName {...inputName} placeholder=\"name\" />\n    \n    { (authority === \"viewer\") && !workingAddPlayer &&\n      <ButtonAdd onClick = {  (event)=> onClick_ButtonAdd(event, \"pending\")} > Apply </ButtonAdd>\n    }\n    \n    { (authority === \"administrator\") && !workingAddPlayer && \n      <>\n        <ButtonAdd onClick = {  (event)=> onClick_ButtonAdd(event, \"confirmed\")} > Add </ButtonAdd>\n      </>\n    }\n  </DivInputAdd>\n\t    \n*/\n\nfunction mapStateToProps(state) { \n  return { \n   \n    //workingAddPlayer: state.working.addPlayer\n    //,workingPutPlayerMmr: state.working.putPlayerMmr\n    \n    idPlanTeam: state.planTeam._id\n    //,passwordPlanTeam: state.planTeam.password\n    \n    //, loadingPlanTeam: state.loading.planTeam\n    //, readyPlanTeam: state.ready.planTeam\n    \n    ,option: state.planTeam.option\n    , authority: state.authority\n    \n    //, planTeam: {...state.planTeam}\n    \n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    \n    addRemoveNotification: (situation, message, time, idNotification) => dispatch( addRemoveNotification(situation, message, time, idNotification) )\n    ,replaceRegion: (regionName) => dispatch(replaceRegion(regionName))\n    ,replaceNumber: (pairNumber, which, how) => dispatch(replaceNumber(pairNumber, which, how))\n    //,readPlanTeam: (idPlanTeam) => dispatch(readPlanTeam(idPlanTeam)) \n\n  }; \n}\n\n// 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(Option);"]},"metadata":{},"sourceType":"module"}