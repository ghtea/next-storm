{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport axios from 'axios';\nimport dotenv from 'dotenv';\nimport reducer from './reducer';\nconst REPLACE_READY = \"REPLACE_READY\";\nconst REPLACE_LOADING = \"REPLACE_LOADING\";\nconst REPLACE_WORKING = \"REPLACE_WORKING\";\nconst REPLACE_AUTHORITY = \"REPLACE_AUTHORITY\";\nconst REPLACE_DATA = \"REPLACE_DATA\";\nconst ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\nconst REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\nconst ADD_RESULT = \"ADD_RESULT\";\nconst DELETE_RESULT = \"DELETE_RESULT\";\nconst REPLACE_PLAYER_TAGS = \"REPLACE_PLAYER_TAGS\";\nconst REPLACE_PLAYER_STATUS = \"REPLACE_PLAYER_STATUS\";\nconst REPLACE_REGION = \"REPLACE_REGION\";\nconst REPLACE_NUMBER = \"REPLACE_NUMBER\"; // fundamental action creator\n\n/*\r\nexport const replaceRerender = (which) => {\r\n  return {\r\n    type: REPLACE_RERENDER\r\n    ,which: which\r\n  }\r\n}\r\n*/\n\nexport const replaceReady = (which, true_false) => {\n  return {\n    type: REPLACE_READY,\n    which: which,\n    true_false: true_false\n  };\n};\nexport const replaceLoading = (which, true_false) => {\n  return {\n    type: REPLACE_LOADING,\n    which: which,\n    true_false: true_false\n  };\n};\nexport const replaceWorking = (which, true_false) => {\n  return {\n    type: REPLACE_WORKING,\n    which: which,\n    true_false: true_false\n  };\n};\nexport const replaceAuthority = (which, authority) => {\n  return {\n    type: REPLACE_AUTHORITY,\n    which: which,\n    authority: authority\n  };\n};\nexport const replaceData = (which, newData) => {\n  return {\n    type: REPLACE_DATA,\n    which: which,\n    data: newData\n  };\n};\nexport const replaceData2 = (which1, which2, newData) => {\n  return {\n    type: REPLACE_DATA_2,\n    which1: which1,\n    which2: which2,\n    data: newData\n  };\n};\nexport const addNotification = (situation, message, idNotification) => {\n  return {\n    type: ADD_NOTIFICATION,\n    situation: situation,\n    message: message,\n    idNotification: idNotification\n  };\n};\nexport const removeNotification = idNotification => {\n  return {\n    type: REMOVE_NOTIFICATION,\n    idNotification: idNotification\n  };\n};\nexport const addResult = result => {\n  return {\n    type: ADD_RESULT,\n    result: result\n  };\n};\nexport const deleteResult = idResult => {\n  return {\n    type: DELETE_RESULT,\n    idResult: idResult\n  };\n};\nexport const replacePlayerTags = (battletag, tag, true_false) => {\n  return {\n    type: REPLACE_PLAYER_TAGS,\n    battletag: battletag,\n    tag: tag,\n    true_false: true_false\n  };\n};\nexport const replacePlayerStatus = (battletag, status) => {\n  return {\n    type: REPLACE_PLAYER_STATUS,\n    battletag: battletag,\n    status: status\n  };\n};\nexport const replaceRegion = region => {\n  return {\n    type: REPLACE_REGION,\n    region: region\n  };\n};\nexport const replaceNumber = (pairNumber, which, how) => {\n  return {\n    type: REPLACE_NUMBER,\n    which: which,\n    how: how,\n    pairNumber: pairNumber\n  };\n};\nconst store = createStore(reducer, applyMiddleware(thunk.withExtraArgument(axios), logger));\nexport default store; //https://github.com/nomadcoders/vanilla-redux/blob/ccaa1acd081f27239f2cc8ad3c571bd0a9923f73/src/store.js","map":{"version":3,"sources":["/usr/projects/next-storm/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","logger","axios","dotenv","reducer","REPLACE_READY","REPLACE_LOADING","REPLACE_WORKING","REPLACE_AUTHORITY","REPLACE_DATA","ADD_NOTIFICATION","REMOVE_NOTIFICATION","ADD_RESULT","DELETE_RESULT","REPLACE_PLAYER_TAGS","REPLACE_PLAYER_STATUS","REPLACE_REGION","REPLACE_NUMBER","replaceReady","which","true_false","type","replaceLoading","replaceWorking","replaceAuthority","authority","replaceData","newData","data","replaceData2","which1","which2","REPLACE_DATA_2","addNotification","situation","message","idNotification","removeNotification","addResult","result","deleteResult","idResult","replacePlayerTags","battletag","tag","replacePlayerStatus","status","replaceRegion","region","replaceNumber","pairNumber","how","store","withExtraArgument"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\nimport reducer from './reducer';\r\n\r\n\r\nconst REPLACE_READY = \"REPLACE_READY\";\r\nconst REPLACE_LOADING = \"REPLACE_LOADING\";\r\nconst REPLACE_WORKING = \"REPLACE_WORKING\";\r\nconst REPLACE_AUTHORITY = \"REPLACE_AUTHORITY\";\r\n\r\nconst REPLACE_DATA = \"REPLACE_DATA\";\r\n\r\nconst ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\r\nconst REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\r\n\r\nconst ADD_RESULT = \"ADD_RESULT\";\r\nconst DELETE_RESULT = \"DELETE_RESULT\";\r\n\r\nconst REPLACE_PLAYER_TAGS = \"REPLACE_PLAYER_TAGS\";\r\nconst REPLACE_PLAYER_STATUS = \"REPLACE_PLAYER_STATUS\";\r\nconst REPLACE_REGION = \"REPLACE_REGION\";\r\nconst REPLACE_NUMBER = \"REPLACE_NUMBER\";\r\n\r\n\r\n\r\n// fundamental action creator\r\n/*\r\nexport const replaceRerender = (which) => {\r\n  return {\r\n    type: REPLACE_RERENDER\r\n    ,which: which\r\n  }\r\n}\r\n*/\r\n\r\nexport const replaceReady = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_READY,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nexport const replaceLoading = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_LOADING,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nexport const replaceWorking = (which, true_false) => {\r\n  return {\r\n    type: REPLACE_WORKING,\r\n    which: which,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\n\r\nexport const replaceAuthority = (which, authority) => {\r\n  return {\r\n    type: REPLACE_AUTHORITY,\r\n    which: which,\r\n    authority: authority\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport const replaceData = (which, newData) => {\r\n  return {\r\n    type: REPLACE_DATA,\r\n    which: which,\r\n    data: newData\r\n  }\r\n}\r\n\r\nexport const replaceData2 = (which1, which2, newData) => {\r\n  return {\r\n    type: REPLACE_DATA_2,\r\n    which1: which1,\r\n    which2: which2,\r\n    data: newData\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const addNotification = (situation, message, idNotification) => {\r\n  return {\r\n    type: ADD_NOTIFICATION,\r\n    situation: situation,\r\n    message: message,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\nexport const removeNotification = (idNotification) => {\r\n  return {\r\n    type: REMOVE_NOTIFICATION,\r\n    idNotification: idNotification\r\n  }\r\n}\r\n\r\n\r\nexport const addResult = (result) => {\r\n  return {\r\n    type: ADD_RESULT,\r\n    result: result\r\n  }\r\n}\r\nexport const deleteResult = (idResult) => {\r\n  return {\r\n    type: DELETE_RESULT,\r\n    idResult: idResult\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport const replacePlayerTags = (battletag, tag, true_false) => {\r\n  return {\r\n    type: REPLACE_PLAYER_TAGS,\r\n    battletag: battletag,\r\n    tag: tag,\r\n    true_false: true_false\r\n  }\r\n}\r\n\r\nexport const replacePlayerStatus = (battletag, status) => {\r\n  return {\r\n    type: REPLACE_PLAYER_STATUS,\r\n    battletag: battletag,\r\n    status: status\r\n  }\r\n}\r\n\r\nexport const replaceRegion = (region) => {\r\n  return {\r\n    type: REPLACE_REGION,\r\n    region: region\r\n  }\r\n}\r\n\r\nexport const replaceNumber = (pairNumber, which, how) => {\r\n  return {\r\n    type: REPLACE_NUMBER\r\n    ,which: which\r\n    ,how: how\r\n    ,pairNumber: pairNumber\r\n  }\r\n}\r\n\r\n\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunk.withExtraArgument(axios), logger)\r\n)\r\n\r\n\r\nexport default store;\r\n\r\n//https://github.com/nomadcoders/vanilla-redux/blob/ccaa1acd081f27239f2cc8ad3c571bd0a9923f73/src/store.js"]},"metadata":{},"sourceType":"module"}