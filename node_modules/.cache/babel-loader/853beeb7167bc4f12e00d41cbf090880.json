{"ast":null,"code":"var _jsxFileName = \"/usr/projects/parallel-storm/src/components/TeamGenerator/Result.js\";\nimport dotenv from 'dotenv';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios'; //import path from 'path'\n\nimport { NavLink, useParams } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\"; // https://reacttraining.com/blog/react-router-v5-1/\n\nimport { Div, Table, Tr, Td } from '../../styles/DefaultStyles';\nimport IconLoading from '../../svgs/IconLoading';\nimport IconConfirmed from '../../svgs/IconConfirmed';\nimport IconPending from '../../svgs/IconPending';\nimport IconInfo from '../../svgs/IconInfo'; // 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\n//dotenv.config() ;\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\n\nconst DivResult = styled(Div)`\n  width: 100%;\n  max-width: 600px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n  padding-bottom: 10px;\n`;\nconst DivTitle = styled(Div)`\n  font-size: 1.2rem;\n  font-weight: bold;\n  \n  margin-bottom: 10px;\n`;\nconst DivTableEntry = styled(Div)`\n  \n  padding-left: 20px;\n  padding-right: 20px;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n`;\nconst DivIconLoading = styled(Div)`\n  margin-top: 10px;\n`;\n/*\ndisplay:grid;\n*/\n\nconst DivRowHeader = styled(Div)`\n  color: ${props => props.theme.color_weak};\n\n  display: grid;\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; /* min entire = 400 - 20*2 = 360 */\n  grid-template-rows: 24px;\n  \n  & > Div {\n    font-weight: thin;\n  }\n  //background-color: ${props => props.theme.COLOR_normal};\n   \n  //border-radius:  8px;\n`;\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; // min entire = 400 - 20*2 = 360\n  grid-template-rows: 40px;\n  \n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  &:last-child {\n    border-bottom-style: none;\n  }\n`;\n/*\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr 60px ${30*4}px 40px 40px; \n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(2) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  10px;\n    \n    border-bottom-style: none;\n    \n  }\n\n*/\n\nconst DivBattletagHeader = styled(Div)`\n  padding-left: 10px;\n  \n  display: block;\n  text-algin: left;\n`;\nconst DivBattletag = styled(Div)`\n  padding-left: 10px;\n  display: block;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst RowPlayer = ({\n  battletag,\n  mmr,\n  statusPlayer\n}) => {\n  useEffect(() => {\n    console.log(\"Each row has been rerendered\");\n  });\n  const IconStatus = {\n    pending: /*#__PURE__*/React.createElement(IconPending, {\n      width: \"20px\",\n      height: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 14\n      }\n    }),\n    confirmed: /*#__PURE__*/React.createElement(IconConfirmed, {\n      width: \"20px\",\n      height: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(DivRowPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DivBattletag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, battletag), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, \"(roles)\"), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, mmr), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, IconStatus[statusPlayer]), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconInfo, {\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Result = ({\n  planTeam\n}) => {\n  useEffect(() => {\n    console.log(\"Entry has been rerendered\");\n  });\n  const numberTeams = 2;\n  let objTeams = {};\n\n  for (var i = 0; i < numberTeams; i++) {}\n\n  const listPlayerEntry = planTeam.listPlayerEntry;\n\n  const generateTeams = event => {\n    let listPlayerRemain = Object.keys(listPlayerEntry);\n  };\n\n  let orderRegion = listRegion.sort((region1, region2) => {\n    return numGames[region2] - numGames[region1]; // ex: 1,2,5,10,...\n  });\n  return /*#__PURE__*/React.createElement(DivResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DivTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, \" Result \"), /*#__PURE__*/React.createElement(Div, {\n    onClick: generateTeams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, \" \"));\n};\n/*\n\n    <DivTableEntry> \n    \n    <DivRowHeader> \n      <DivBattletagHeader>  battletag </DivBattletagHeader>\n      <Div> roles </Div>\n      <Div> mmr </Div>\n      <Div> status </Div>\n      \n       \n      <Div> </Div>\n    </DivRowHeader>\n    \n    { \n      ( listPlayerEntry ).map( (player, i) =>\n      \n        < RowPlayer \n          key={ `${player._id}_${(new Date().getTime()).toString()}` }\n          battletag={player._id} \n          mmr={player.mmr.standard.NA} \n          statusPlayer={player.status} \n        /> \n      )\n    }\n      \n    </DivTableEntry>\n    \n*/\n//<button onClick= {refetch} > Refectch </button>\n\n\nfunction mapStateToProps(state) {\n  return {\n    planTeam: state.planTeam //listPlayerEntry: [...state.planTeam.listPlayerEntry]\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\n    //,readyPlanTeam: state.ready.planTeam\n    //,loading: state.loading\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n} // TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);","map":{"version":3,"sources":["/usr/projects/parallel-storm/src/components/TeamGenerator/Result.js"],"names":["dotenv","React","useState","useEffect","styled","axios","NavLink","useParams","connect","readPlanTeam","Div","Table","Tr","Td","IconLoading","IconConfirmed","IconPending","IconInfo","DivResult","DivTitle","DivTableEntry","DivIconLoading","DivRowHeader","props","theme","color_weak","COLOR_normal","DivRowPlayer","color_very_weak","DivBattletagHeader","DivBattletag","RowPlayer","battletag","mmr","statusPlayer","console","log","IconStatus","pending","confirmed","Result","planTeam","numberTeams","objTeams","i","listPlayerEntry","generateTeams","event","listPlayerRemain","Object","keys","orderRegion","listRegion","sort","region1","region2","numGames","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,kBAAnC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB,C,CACA;;AAEA,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,EAApB,EAAwBC,EAAxB,QAAiC,4BAAjC;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CAEA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGd,MAAM,CAACM,GAAD,CAAM;;;;;;;;;;CAA9B;AAYA,MAAMS,QAAQ,GAAGf,MAAM,CAACM,GAAD,CAAM;;;;;CAA7B;AAQA,MAAMU,aAAa,GAAGhB,MAAM,CAACM,GAAD,CAAM;;;;;;;;;;;CAAlC;AAaA,MAAMW,cAAc,GAAGjB,MAAM,CAACM,GAAD,CAAM;;CAAnC;AAIA;;;;AAIA,MAAMY,YAAY,GAAGlB,MAAM,CAACM,GAAD,CAAM;WACtBa,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,UAAW;;;;;;;;;wBASnBF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,YAAa;;;CAV1D;AAgBA,MAAMC,YAAY,GAAGvB,MAAM,CAACM,GAAD,CAAM;;;;;6BAKJa,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYI,eAAgB;;;;CALlE;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,MAAMC,kBAAkB,GAAGzB,MAAM,CAACM,GAAD,CAAM;;;;;CAAvC;AAOA,MAAMoB,YAAY,GAAG1B,MAAM,CAACM,GAAD,CAAM;;;;;;;CAAjC;;AAYA,MAAMqB,SAAS,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,GAAZ;AAAiBC,EAAAA;AAAjB,CAAD,KAAoC;AAEpD/B,EAAAA,SAAS,CAAC,MAAI;AAACgC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AAA4C,GAAlD,CAAT;AAEA,QAAMC,UAAU,GAAG;AACjBC,IAAAA,OAAO,eAAE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE,MAApB;AAA4B,MAAA,MAAM,EAAE,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ;AAEhBC,IAAAA,SAAS,eAAE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE,MAAtB;AAA8B,MAAA,MAAM,EAAE,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFK,GAAnB;AAKA,sBAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,SADH,CAFF,eAME,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAWE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,GADH,CAXF,eAeE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,UAAU,CAACH,YAAD,CADb,CAfF,eAoBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE,MADT;AAEE,IAAA,MAAM,EAAE,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBF,CAFF;AA+BD,CAxCD;;AA+CA,MAAMM,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAE7BtC,EAAAA,SAAS,CAAC,MAAI;AAACgC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAAyC,GAA/C,CAAT;AAEA,QAAMM,WAAW,GAAG,CAApB;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAACF,WAAjB,EAA8BE,CAAC,EAA/B,EAAmC,CAElC;;AAED,QAAMC,eAAe,GAAGJ,QAAQ,CAACI,eAAjC;;AAIA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAIC,gBAAgB,GAAGC,MAAM,CAACC,IAAP,CAAYL,eAAZ,CAAvB;AAED,GAHD;;AAKA,MAAIM,WAAW,GAAGC,UAAU,CAACC,IAAX,CAAiB,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACvD,WAAQC,QAAQ,CAACD,OAAD,CAAR,GAAoBC,QAAQ,CAACF,OAAD,CAApC,CADuD,CAEvD;AACD,GAHiB,CAAlB;AAOA,sBAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAER,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CAFA;AAYD,CAvCD;AAyCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;;AAIA,SAASW,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLjB,IAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QADX,CAEL;AACA;AACA;AACA;;AALK,GAAP;AAOD;;AAED,SAASkB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO,EAAP;AAGD,C,CAGD;;;AACA,eAAepD,OAAO,CAACiD,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,MAA7C,CAAf","sourcesContent":["import dotenv from 'dotenv';\nimport React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n//import path from 'path'\nimport { NavLink, useParams } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport readPlanTeam from \"../../redux/thunks/readPlanTeam\";\n// https://reacttraining.com/blog/react-router-v5-1/\n\nimport {Div, Table, Tr, Td} from '../../styles/DefaultStyles';\n\nimport IconLoading from '../../svgs/IconLoading'\n\nimport IconConfirmed from '../../svgs/IconConfirmed'\nimport IconPending from '../../svgs/IconPending'\nimport IconInfo from '../../svgs/IconInfo'\n\n// 이상하게 dotenv.config() 안해도 된다 (오히려 하면 에러 발생...)\n//dotenv.config() ;\n//dotenv.config({ path: path.join(__dirname, '../../.env') });\n\nconst DivResult = styled(Div)`\n  width: 100%;\n  max-width: 600px;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n  padding-bottom: 10px;\n`;\n\nconst DivTitle = styled(Div)`\n  font-size: 1.2rem;\n  font-weight: bold;\n  \n  margin-bottom: 10px;\n`\n\n\nconst DivTableEntry = styled(Div)`\n  \n  padding-left: 20px;\n  padding-right: 20px;\n  \n  \n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  \n`\n\nconst DivIconLoading = styled(Div)`\n  margin-top: 10px;\n`\n\n/*\ndisplay:grid;\n*/\n\nconst DivRowHeader = styled(Div)`\n  color: ${props => props.theme.color_weak};\n\n  display: grid;\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; /* min entire = 400 - 20*2 = 360 */\n  grid-template-rows: 24px;\n  \n  & > Div {\n    font-weight: thin;\n  }\n  //background-color: ${props => props.theme.COLOR_normal};\n   \n  //border-radius:  8px;\n`\n\n\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr  minmax(40px, 90px) 60px 40px 40px; // min entire = 400 - 20*2 = 360\n  grid-template-rows: 40px;\n  \n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  &:last-child {\n    border-bottom-style: none;\n  }\n`\n\n/*\nconst DivRowPlayer = styled(Div)`\n  display: grid;\n  grid-template-columns: 1fr 60px ${30*4}px 40px 40px; \n  grid-template-rows: 40px;\n  \n  background-color: ${props => props.theme.COLOR_normal};\n  border-bottom: 1px solid ${props => props.theme.color_very_weak};\n  \n  \n  &:nth-child(2) {\n    border-top-left-radius:    10px;\n    border-top-right-radius:   10px;\n    \n  }\n  \n  &:last-child {\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius:  10px;\n    \n    border-bottom-style: none;\n    \n  }\n\n*/\n\n\nconst DivBattletagHeader = styled(Div)`\n  padding-left: 10px;\n  \n  display: block;\n  text-algin: left;\n`\n\nconst DivBattletag = styled(Div)`\n  padding-left: 10px;\n  display: block;\n  text-algin: left;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\n\n\n\nconst RowPlayer = ({battletag, mmr, statusPlayer}) => {\n  \n  useEffect(()=>{console.log(\"Each row has been rerendered\")})\n  \n  const IconStatus = {\n    pending: <IconPending width={\"20px\"} height={\"20px\"} />\n    ,confirmed: <IconConfirmed width={\"20px\"} height={\"20px\"} />\n  };\n\n  return (\n    \n    <DivRowPlayer >\n      \n      <DivBattletag> \n        {battletag}\n      </DivBattletag>\n      \n      <Div> \n        (roles)\n      </Div>\n      \n      \n      <Div> \n        {mmr}\n      </Div>\n       \n      <Div> \n        {IconStatus[statusPlayer]}\n      </Div>\n        \n       \n      <Div> \n        <IconInfo\n          width={\"20px\"}\n          height={\"20px\"}\n        /> \n      </Div>\n         \n    </DivRowPlayer>\n  )\n}\n\n\n\n\n\n\nconst Result = ({planTeam}) => {\n  \n  useEffect(()=>{console.log(\"Entry has been rerendered\")})\n  \n  const numberTeams = 2;\n  let objTeams = {};\n  \n  for (var i =0; i<numberTeams; i++) {\n    \n  }\n  \n  const listPlayerEntry = planTeam.listPlayerEntry;\n  \n  \n  \n  const generateTeams = (event) => {\n    let listPlayerRemain = Object.keys(listPlayerEntry);\n    \n  }\n  \n  let orderRegion = listRegion.sort( (region1, region2) => { \n    return (numGames[region2] - numGames[region1]);\n    // ex: 1,2,5,10,...\n  });\n  \n  \n  \n  return (\n  \n  <DivResult>\n    \n    <DivTitle> Result </DivTitle>\n    \n    <Div onClick={generateTeams}> </Div>\n\n    \n  </DivResult>\n    \n  )\n}\n\n/*\n\n    <DivTableEntry> \n    \n    <DivRowHeader> \n      <DivBattletagHeader>  battletag </DivBattletagHeader>\n      <Div> roles </Div>\n      <Div> mmr </Div>\n      <Div> status </Div>\n      \n       \n      <Div> </Div>\n    </DivRowHeader>\n    \n    { \n      ( listPlayerEntry ).map( (player, i) =>\n      \n        < RowPlayer \n          key={ `${player._id}_${(new Date().getTime()).toString()}` }\n          battletag={player._id} \n          mmr={player.mmr.standard.NA} \n          statusPlayer={player.status} \n        /> \n      )\n    }\n      \n    </DivTableEntry>\n    \n*/\n//<button onClick= {refetch} > Refectch </button>\n\n\n\nfunction mapStateToProps(state) { \n  return { \n    planTeam: state.planTeam\n    //listPlayerEntry: [...state.planTeam.listPlayerEntry]\n    //,workingAddPlayerToListPlayerEntry: state.working.addPlayerToListPlayerEntry\n    //,readyPlanTeam: state.ready.planTeam\n    //,loading: state.loading\n  }; \n} \n\nfunction mapDispatchToProps(dispatch) { \n  return { \n    \n  }; \n}\n\n\n// TableEntry 컴포넌트에서 redux의 state, dispatch 를 일부분 골라서 이용가능하게 된다\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);"]},"metadata":{},"sourceType":"module"}